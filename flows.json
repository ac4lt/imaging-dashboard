[
    {
        "id": "8eb51985a4dd8f36",
        "type": "tab",
        "label": "aeris weather",
        "disabled": false,
        "info": "This flow requests data from the Aeris Weather API.\n\nRequirements:\n\nFour global variables are required for this flow to work:\n    aw_client_id - the Aeris Weather client id\n    aw_client_secret - the Aeris Weather client secret\n    lattitude - lattitude in decimal degrees\n    longitude - longitude in decimal degrees\n    \nClient id and secret can be obtained from:\nhttps://account.aerisweather.com/account/apps\n\nLattidued and Longitude should be in decimal degrees,\nnot DMS format. For example for somewhere in the middle of Kansas lattidue owuld be 38.417647 and longitude would be 38.417647, -99.957065.\n\nAll of hese variables should be set on the \"settings\" page through the dashboard user interface.\n\nTo get free access to Aeris Weather you need to contribute weather data to them and this provides a small number of API calls per day (5,000 as of this writing. This dashboard currently conslumes around 1,000/day).",
        "env": []
    },
    {
        "id": "fdfc9a4d8ebd2c5e",
        "type": "tab",
        "label": "all sky",
        "disabled": false,
        "info": "This flow gets the all sky image and readies it for display. The actual image is sent across MQTT as data, not the filename.",
        "env": []
    },
    {
        "id": "cb98bbe7ef358b99",
        "type": "tab",
        "label": "all sky history",
        "disabled": false,
        "info": "This  load in the variious summary images and videos from the all sky package. The \"get files\" nodes should be updated to point to where they exist on your system.",
        "env": []
    },
    {
        "id": "7456a56ca14e1b6c",
        "type": "tab",
        "label": "alpaca common",
        "disabled": false,
        "info": "This is for any Alpaca calls that we can handle with a common implementation. While there are many calls with the same name that each driver must implement they tend to require specific implementations for each driver and so are handled on the driver's flow.",
        "env": []
    },
    {
        "id": "aebaef7bc30ec5d1",
        "type": "tab",
        "label": "alpaca discovery",
        "disabled": false,
        "info": "This implements the ASCOM Alpaca discovery protocol. Or at least I hope it does. I had to reverse engineer it from network sniffing as it wasn't documented that I could find.",
        "env": []
    },
    {
        "id": "eb7e481125253646",
        "type": "tab",
        "label": "alpaca observing conditions",
        "disabled": false,
        "info": "This implements the ASCOM Alpaca observing conditions driver.\n\nAlthough this technicall passes the compliance tests, it does not reallly implement average period. Averaging is not supported as data comes in from MQTT at about a once perminute rate.",
        "env": []
    },
    {
        "id": "fa1cde214afbec06",
        "type": "tab",
        "label": "alpaca safety monitor",
        "disabled": false,
        "info": "This flow implements the ASCOM Alpaca calls necessary to implement the Safety Monitor device.\n\nCurrently, this implementation is not compliant but it does work with NINA.",
        "env": []
    },
    {
        "id": "7727e8d00df0dfd8",
        "type": "tab",
        "label": "astrospheric",
        "disabled": true,
        "info": "This was an attempt to bring astrospheric into the dashboard. However, it does not work particularly well. It sometimes gets flagged for too many calls to astrospheric and there's no way to actually log in. Unfortunately, my support request to the author went unanswered.\n\nI've disabled it for now but I've left it here in the hopes of revisiting it some day.",
        "env": []
    },
    {
        "id": "ea2f650d95177cfd",
        "type": "tab",
        "label": "boltwood",
        "disabled": true,
        "info": "This is no longer needed now that I have the mqtt-observing-conditions ascom driver but it maay be useful to others who want to get at least some weather data into ASCOM.",
        "env": []
    },
    {
        "id": "e4020236b03afc18",
        "type": "tab",
        "label": "graphs",
        "disabled": false,
        "info": "These graphs each keep two days of data. Graphs are loaded fron context data at startup. In the case of weather data, if context data does not exist, the ambient weather api is queried for up to two days of data.\n",
        "env": []
    },
    {
        "id": "2019792e5d9e1148",
        "type": "tab",
        "label": "lightning",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f0782f40c227738a",
        "type": "tab",
        "label": "nina",
        "disabled": false,
        "info": "This flow looks for the nina web server, first on the PC's ethernet address and then on the WiFi address.\n\nThis looks for the server provided by NINA's Web Session History Viewer to determine whether or not NINA is up.",
        "env": []
    },
    {
        "id": "fdcdb90c024a5bbb",
        "type": "tab",
        "label": "pegasus astro data",
        "disabled": true,
        "info": "I have a Pegasus Astro Uranus meteo sensor. Unfrotunately, the sky quality meter is not especially useful. The signal becomes very noisy the darker the sky becomes and it means that it doesn't make a good sky quality meter though its other sensors seem to behave better. Unfortunately, it isn't designed to be outside 24/7 so there isn't much point in hooking the other sensors up to the dashboard.",
        "env": []
    },
    {
        "id": "8cef74c5748101c2",
        "type": "tab",
        "label": "pushover",
        "disabled": false,
        "info": "This flow sends alerts to pushover if the \"alert to pushover\" setting is turned on. \n\nThese are sent as normal priority alerts as I generate emergency alerts from within NINA. If you want emergency alerts here, change the priority in the alert to pushover node to 2.\n\nTwo environment variables need to be set:\nASTRODASH_PUSHOVER_USER_KEY\nASTRODASH_PUSHOVER_API_TOKEN\n\nYou can set these up at https://pushover.net",
        "env": []
    },
    {
        "id": "a99d58eea4e0c4c9",
        "type": "tab",
        "label": "safety",
        "disabled": false,
        "info": "This flow evaluates safety conditions and if unsafe alerts to pushove.\n\nIt also writes a file that can be used by the ASCOM Generic File Safety Monitor fi the safety.txt node is enabled.",
        "env": []
    },
    {
        "id": "1b5ddca5773a54ff",
        "type": "tab",
        "label": "settings",
        "disabled": false,
        "info": "Persistent setting for different parts of the dashboard. \nAll options require a value. ",
        "env": []
    },
    {
        "id": "e25d9bb806c7d918",
        "type": "tab",
        "label": "sqm",
        "disabled": false,
        "info": "Poll the Unihedron SQM-LE for sky quality data. This is fed to the SQM graph and the current value ot the user interface. It is also published to MQTT for other applications to use.",
        "env": []
    },
    {
        "id": "1da925b7efe5867b",
        "type": "tab",
        "label": "sun & moon",
        "disabled": false,
        "info": "Every minute this flow runs to get the current sun and moon data.",
        "env": []
    },
    {
        "id": "e105e7d9afdc420c",
        "type": "tab",
        "label": "system sttus",
        "disabled": false,
        "info": "This flow is for tracking the up/down status of computer systems involved in imagimg.\n\nBy it's nature it is very specific to the environment in which it runes. In my case I get system status from my Unifi controller which has been more reliable than ping checks.",
        "env": []
    },
    {
        "id": "eb59cca86a071b43",
        "type": "tab",
        "label": "tplink",
        "disabled": true,
        "info": "An early version of the all sky camera used TP Link power plugs to control A/C power. Everything is now powered via power over ethernet so this is no longer needed but is left here in case it ever becomes useful in the future.",
        "env": []
    },
    {
        "id": "52253e7db7826624",
        "type": "tab",
        "label": "UI: Home",
        "disabled": false,
        "info": "This contains all the user interface elements for the home page of the dashboard.",
        "env": []
    },
    {
        "id": "f1f12ee3354c62ba",
        "type": "tab",
        "label": "UI: Home (db2)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "faf1b8c759f6df3e",
        "type": "tab",
        "label": "wx: avg wind",
        "disabled": false,
        "info": "This handlet the average wind data from MQTT",
        "env": []
    },
    {
        "id": "fb58cc7006b99d2a",
        "type": "tab",
        "label": "wx: misc",
        "disabled": false,
        "info": "This handles all other miscellaneous weather data from MQTT.",
        "env": []
    },
    {
        "id": "41b35d7c6f31c98f",
        "type": "tab",
        "label": "wx: pressure",
        "disabled": false,
        "info": "This handles the barometric pressure data from MQTT.",
        "env": []
    },
    {
        "id": "4cd628a2f0b7e3e5",
        "type": "tab",
        "label": "wx: rain",
        "disabled": false,
        "info": "This handles the rain data from MQTT",
        "env": []
    },
    {
        "id": "7cf091a10f8a9e1e",
        "type": "tab",
        "label": "wx: temperatures",
        "disabled": false,
        "info": "This handles the temperature data from MQTT.",
        "env": []
    },
    {
        "id": "e185da3a46d5d090",
        "type": "tab",
        "label": "wx: wind",
        "disabled": false,
        "info": "This handles the wind data from MQTT",
        "env": []
    },
    {
        "id": "7ad337185da278c4",
        "type": "subflow",
        "name": "Round to 1 decimal place",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "389f4b01e25f18eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 40,
                "wires": [
                    {
                        "id": "389f4b01e25f18eb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7630d7f507ca85f8",
        "type": "subflow",
        "name": "Round to 0 decimal places",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "2397defe97638005"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 40,
                "wires": [
                    {
                        "id": "2397defe97638005",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "aa22e89f1e9e3c1f",
        "type": "subflow",
        "name": "toLocaleString",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "9fb69200687b75ce"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 40,
                "wires": [
                    {
                        "id": "9fb69200687b75ce",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0b6ce0b527d51f54",
        "type": "subflow",
        "name": "C to F",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "c91cdab45dc0a618"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 40,
                "wires": [
                    {
                        "id": "c91cdab45dc0a618",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "fee8a00528469178",
        "type": "subflow",
        "name": "Milibars to Mercury",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "42fb11c407bfd146"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 40,
                "wires": [
                    {
                        "id": "42fb11c407bfd146",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "29bf3ca50f8de2a8",
        "type": "subflow",
        "name": "Round to 2 decimal places",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "6462bdac2c42fee3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 40,
                "wires": [
                    {
                        "id": "6462bdac2c42fee3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1481853667c63134",
        "type": "subflow",
        "name": "kph to mph",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "3841ec6b0d902d54"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 40,
                "wires": [
                    {
                        "id": "3841ec6b0d902d54",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "351fdfbd1fd8e5d4",
        "type": "subflow",
        "name": "convert mm to in",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "5cca22cd16a198cd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 60,
                "wires": [
                    {
                        "id": "5cca22cd16a198cd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d55cf5900e78c639",
        "type": "subflow",
        "name": "inject timestamp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "6899c7ea571bff62"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 40,
                "wires": [
                    {
                        "id": "6899c7ea571bff62",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "63b8acad88eafa84",
        "type": "subflow",
        "name": "Next Server Transaction ID",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "f57aec354e938259"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 40,
                "wires": [
                    {
                        "id": "f57aec354e938259",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "82d92caabfa9f307",
        "type": "group",
        "z": "1da925b7efe5867b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3361561efd92375e",
            "dbb4ee3811797c32",
            "dd271178332f0bcf",
            "1293ac3e5457d2c7",
            "f3fb1e74fcff358f",
            "209fd9ac9aa1394f",
            "76ecdf4399f698d1",
            "54e671ff94cfba27",
            "37751a4cf751b1e3",
            "62a619c9aba41bfe",
            "1608ab7f0eaeb655",
            "831fc9d40e343763",
            "48165f21d8cd774b",
            "6108882aab21cdac",
            "fb7ba2307deea2ef",
            "ae39655e14d23e57",
            "0c308f575095c967",
            "af5c92f8ab5c6794",
            "e8f04b374a925f6d",
            "99f058030d8a5644",
            "07a0aaabbdd06105",
            "da41048808cb5432",
            "b51576559d4bca65",
            "c5f10fc48c3f4b97",
            "3e17b301f0f0ab80"
        ],
        "x": 274,
        "y": 1699,
        "w": 1852,
        "h": 682
    },
    {
        "id": "de6cb0dace440ad6",
        "type": "group",
        "z": "8eb51985a4dd8f36",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a3f507fb60bfbe23",
            "4548de24ab49709c",
            "4e4c4d4f26387f63",
            "17c3a87ac6b14b34",
            "a13abf24d12147e5",
            "1ffe17f783cbb28b",
            "d7c5b2b6a16b0d70",
            "e608a143f73f40f5",
            "ac4351284e091076",
            "fcc77906677e214f",
            "11a648e2658e4976",
            "f9ea79900120cba3",
            "ef723c8a178ec2d4"
        ],
        "x": 54,
        "y": 2179,
        "w": 1082,
        "h": 382
    },
    {
        "id": "5f18ba0bfe61afbc",
        "type": "group",
        "z": "8eb51985a4dd8f36",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "354b212c006593b9",
            "59c92aca84f4822c",
            "5cea5ca0dd415970",
            "e972f448c685c0b8",
            "e46b4565c4120249",
            "18b56af475fb6fd4",
            "c3bff24030358607",
            "9ff1fd5a61e4961e",
            "b6b25b126fabf5c3",
            "e3e14f76857c1246",
            "1cf268b14fa9124a",
            "2617c2313d4f83ef",
            "4c136ea3fe417aeb",
            "48ac5e97e463afaa",
            "ed613a61cff41ea5",
            "8d0b403eaabc9e3a",
            "5bc457f485cfd326",
            "47bb83c16c38f3ce",
            "91e2aa473ef97daa",
            "794ae3182c8d7982"
        ],
        "x": 14,
        "y": 1699,
        "w": 2052,
        "h": 302
    },
    {
        "id": "c1e7d7a53540c7e9",
        "type": "group",
        "z": "8eb51985a4dd8f36",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "785c399114871702",
            "d10980041038cae3",
            "db4c028af6a8197c",
            "6433427b4ac8ce73",
            "da358da54ee7a022",
            "6e0754a5125b21cf",
            "4213479ae276753e",
            "c9909b86a04331dc",
            "0c20b3580ca16a03",
            "a9645e9b3d04acbe",
            "8df096c905a4e941",
            "18b7648538d9acf4",
            "128a51049400d248",
            "22d9054a088611cf",
            "6c4ae3d400bfdbb5",
            "69fb21701d3b3e35",
            "61edd9fba5ac90f1",
            "9ddceb00053d9cf1",
            "2d400cedda77d483",
            "0f23e93b12f677e8",
            "907941bb210cad6e"
        ],
        "x": 34,
        "y": 1099,
        "w": 1962,
        "h": 382
    },
    {
        "id": "8f5131c5e5423be3",
        "type": "group",
        "z": "8eb51985a4dd8f36",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "973b6d748413494e",
            "4433a7fb4b4a3e48",
            "c5bc8b9038e3dc1a",
            "768ec18a999c5f64",
            "8cdeafdf9e050fd5",
            "225719f086ac4857",
            "c7c1797306fc379f",
            "7af376bbdb6731b8",
            "1af7661b03676a56",
            "ce657c9be8bd2abe",
            "e7a69aa230b9a1bb",
            "1e6cc5a0dbe1a19b",
            "fa3e4ff5d5426d33",
            "c1ba2c10b05f59aa",
            "bf2c5a0c096a9716",
            "a7bcd6e259db9fd4"
        ],
        "x": 74,
        "y": 679,
        "w": 1192,
        "h": 382
    },
    {
        "id": "568693adae137d4f",
        "type": "group",
        "z": "8eb51985a4dd8f36",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "350d97e9acb4150b",
            "597afeb4b772d882",
            "589f3d14065f05cd",
            "67024f3c6d6fc188",
            "6f8e0c7641b51ebb",
            "24efebad72f05c4a",
            "e9402e8f8046b3a3",
            "9f172f5b511ff904",
            "697f450e5e628ace",
            "b7c560ade9c0815d",
            "4fd05e0f86ab77ed",
            "4179e702ca68e160",
            "33920f7906343f6d",
            "86628a45389e5339",
            "f4ce571caf56ba10",
            "0c85b976d3460fe1",
            "d902e5f9c673c77a",
            "4016642a0cfc4610",
            "3688d6cd22dc23c4",
            "333b8ed7424d85c0",
            "5417d9bc80c20920",
            "2d716d82d4eb9175",
            "4a94812a994a52b9"
        ],
        "x": 34,
        "y": 39,
        "w": 992,
        "h": 582
    },
    {
        "id": "bcc23b2bdd73666b",
        "type": "group",
        "z": "8eb51985a4dd8f36",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "17b646dd0e1eeb1a",
            "2139030b6e2f7a9f",
            "03f78ff9f614de1b",
            "fe1b62e462acb010",
            "aa0085daaa8a615a",
            "44533363b71c034a"
        ],
        "x": 1154,
        "y": 79,
        "w": 572,
        "h": 162
    },
    {
        "id": "a82a4b570ea2a091",
        "type": "group",
        "z": "1b5ddca5773a54ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1b2e264647e2677e",
            "43454f7d5c222c5b",
            "c5f41daf91a1ac14",
            "c484149d58b2a829",
            "3f38b8ee0b51c46e",
            "144b953530473380",
            "726f711d65a6820d",
            "ac98a151c4e14b91",
            "af9b954a5dd7b7a7",
            "056309a51962f5a8",
            "daa6f70510400c79",
            "d02a7cf408cbc3d7",
            "fcb70abe92301986",
            "73788774518c19ee",
            "c1e53fa6f9588f48",
            "b2c8e00cbf566189",
            "c1193ca923c266ac",
            "96ccca690a1ad6b1",
            "ebb4b5ce7c56b276",
            "90e8324e29722d59",
            "aca3155682d9d653"
        ],
        "x": 54,
        "y": 559,
        "w": 1232,
        "h": 362
    },
    {
        "id": "f7c384760b13d7c8",
        "type": "group",
        "z": "1b5ddca5773a54ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f7565f819cd2b4d6",
            "8485a6a93baf8c7f",
            "82a845cf47d39b8d",
            "b8406bf3169c5c35",
            "3f56694e6470923f",
            "c6103b9e6ec7ea50",
            "8cb7624f7797ebb1",
            "f955d3f070307c70",
            "7a4bd18f6b6994a8"
        ],
        "x": 1134,
        "y": 59,
        "w": 872,
        "h": 182
    },
    {
        "id": "aab3b5d8a8f55987",
        "type": "group",
        "z": "1b5ddca5773a54ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "496a24be3f57a1ea",
            "9dc9d30323babbae",
            "4e52a6a8a6ccd360",
            "25b5633c11c795c0",
            "429ded9afbc4fa98"
        ],
        "x": 1114,
        "y": 279,
        "w": 932,
        "h": 142
    },
    {
        "id": "7c8d7d68a4126a87",
        "type": "group",
        "z": "1b5ddca5773a54ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8a0237d5ee697d65",
            "0be522eab72e0051",
            "84d96db8fb60c915",
            "70e17fd303e2e3cd",
            "0cc4794ff6f7f8a9",
            "4e51208274564588",
            "df46eaf91e5e3350",
            "c0fd6bf828b1f6fb",
            "a107a8b7016b65ef",
            "db2fc9f1efa68c0d",
            "f1f1ae5c06478077",
            "a3585fe8cf0d3a3b",
            "e466aa19f6a50fe4",
            "84d5d14387044d21",
            "bc6dd8e639be914a",
            "17625551a3999979",
            "75de084a3ecdd1e3",
            "269735e8183dbb11",
            "14d5d959245b23b6",
            "d9c3231d21697d9e",
            "833093d3bd3c2fe0"
        ],
        "x": 54,
        "y": 159,
        "w": 1032,
        "h": 382
    },
    {
        "id": "7b7daee5ba90ac98",
        "type": "group",
        "z": "1b5ddca5773a54ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "faed14773908b694",
            "bca0cbdf3dd5b653",
            "fd4aa481e84a739e",
            "595e208908f5e885",
            "8e3ff2a45e3b3dde",
            "32a31868d9e39488",
            "eac12ed24971258a",
            "42c78a0ce2712054",
            "7def95b999ca7511",
            "0d18ddaca041038d",
            "3616110661b8f1a9",
            "d1a938bf4265b46d",
            "736d9a09a1cda93a"
        ],
        "x": 54,
        "y": 939,
        "w": 972,
        "h": 222
    },
    {
        "id": "520dd1471f8040af",
        "type": "group",
        "z": "e4020236b03afc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6f64747401da66af",
            "9e0df473e9c31958",
            "43a2ca51de1cb058",
            "915e95353e767ee2",
            "4f607f8c99ac4bfc",
            "a89c231f6a8e7f78",
            "36f214a624f287c4",
            "a80e2fd1410c17ed",
            "8bf6d22495683709",
            "2bdabbd1d0a539e2",
            "1b1cefb9a92b6706"
        ],
        "x": 114,
        "y": 99,
        "w": 1052,
        "h": 202
    },
    {
        "id": "cc3cf72dcf34a36c",
        "type": "group",
        "z": "e4020236b03afc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a0d5c78c3c7faee3",
            "433b5c07bddc7a9a",
            "f468a778d2080826",
            "dd87803ff812c32b",
            "1132789f6828a936",
            "68d8c43b6d63f6ef",
            "423ac77cc95b0e23",
            "abe0ef0c3db5faeb"
        ],
        "x": 94,
        "y": 319,
        "w": 1032,
        "h": 182
    },
    {
        "id": "3fa4e13f9a5b932e",
        "type": "group",
        "z": "e4020236b03afc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "04bd6b4a693e0f0c",
            "9c6c3e190c314489",
            "f4f4f6f562a0e7a6",
            "c0814215f16cf8f4",
            "bf47bd4299a3cbd2",
            "257bc937c4cd8669",
            "4e5f13da8c9ed543",
            "aa896b55f93c6db0",
            "fbb2a18aa840fd58",
            "da37d95ce3f7f7a2"
        ],
        "x": 94,
        "y": 519,
        "w": 1052,
        "h": 202
    },
    {
        "id": "5c874fa62172797a",
        "type": "group",
        "z": "e4020236b03afc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "93326e6ed3fe3255",
            "4eadc36993b638be",
            "ca99172b0eac5606",
            "6d06bea745067fe1",
            "70538cc97db5f924",
            "f13c04ddf7ff0ca4",
            "ad0bd56cabc99010",
            "4bb34b5681c4e03f"
        ],
        "x": 94,
        "y": 739,
        "w": 1032,
        "h": 182
    },
    {
        "id": "5654330de52c3811",
        "type": "group",
        "z": "e4020236b03afc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a0775d5d214d95b0",
            "10475d6acbbb4239",
            "84af4bc094e62fe1",
            "4bbaa8c65678bf5a",
            "15cb9487243493a5",
            "9404943399435b65",
            "58e3874f3331280c",
            "736a4079797e06e9",
            "6421ad3bf2fd2e78",
            "2e8b5c76ec327d24"
        ],
        "x": 74,
        "y": 959,
        "w": 1532,
        "h": 202
    },
    {
        "id": "e6e0dc19af167a95",
        "type": "group",
        "z": "e4020236b03afc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "513d2e065f75fd9d",
            "eaac703deff06f9e",
            "7d94898d7f83a465",
            "375b8348311eacf9",
            "6b697a3b7b5654d3",
            "33aa034cceaa67a1",
            "8c3dba2de5b1b948",
            "c174a08fa59c9ecd",
            "985c168b939d28d1",
            "a3807acef48f37e2",
            "b5678de17fca3aae",
            "56d605fcf8309fa0",
            "6fd1b1e835eee451"
        ],
        "x": 94,
        "y": 1199,
        "w": 952,
        "h": 242
    },
    {
        "id": "361e6e3cde3c175b",
        "type": "group",
        "z": "e4020236b03afc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "151639c5d017d7b6",
            "12c96015cadf6a5f",
            "79f1362815a2f53b",
            "1be364fdfb51294a",
            "1cd0e4a76ab5ebab",
            "4152dc03bc18dca0",
            "e90478ee1d18c595",
            "32730f01f58a543e",
            "faa9347b85645fda",
            "f06dba43919bc5ec",
            "4aad30db89f90623",
            "8338a7b6d85bdd2c",
            "53b60cefe4a30cd1",
            "e05ebdc5bef3b0f4",
            "228eced9808259c1",
            "c6207b39e2ea10c7",
            "34def7920fa66fb8",
            "881b5684af24c3ae",
            "fcb61fc293721bfd"
        ],
        "x": 44,
        "y": 1479,
        "w": 1802,
        "h": 442
    },
    {
        "id": "e291126cd41a8571",
        "type": "group",
        "z": "aebaef7bc30ec5d1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1ceaaf5285761e8d",
            "027ebed2a6993467",
            "67e1b511b66fd08f",
            "f6b01d91f2f2733d",
            "3b744d808bf151b5",
            "0034ef85b7874dad",
            "917987c6da8c3277"
        ],
        "x": 114,
        "y": 99,
        "w": 1032,
        "h": 142
    },
    {
        "id": "5d6e4e094ec46bde",
        "type": "group",
        "z": "aebaef7bc30ec5d1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7a3af3fccf937acb",
            "7c9e22f581e35eb5",
            "3fc391a47a807621",
            "cf52a4805d7b5ee7",
            "29212eda15b03065",
            "f070613924b2538b",
            "34b1d583441a8201"
        ],
        "x": 114,
        "y": 259,
        "w": 1212,
        "h": 122
    },
    {
        "id": "c1442f4a6ef5a029",
        "type": "group",
        "z": "aebaef7bc30ec5d1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "500a7ffb05ab2c03",
            "679a57ab73591499",
            "961a5ccf1582f981",
            "bf7da4240e8a2fdc",
            "91f8348d920dd7c9",
            "02788855b597fef8",
            "6b240c454541bbcd"
        ],
        "x": 114,
        "y": 539,
        "w": 1412,
        "h": 122
    },
    {
        "id": "e6ac97ad456cdc8b",
        "type": "group",
        "z": "aebaef7bc30ec5d1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6a971d409c9c737b",
            "449714b1c0aa9e23",
            "dce827e79b1c9d72",
            "1ab738c16a2b0e9e",
            "151b5a3cbb95bc2d",
            "b392e9083024ed04",
            "611a4ce1660c62ce"
        ],
        "x": 114,
        "y": 399,
        "w": 1312,
        "h": 122
    },
    {
        "id": "be84de2e787118ae",
        "type": "group",
        "z": "fa1cde214afbec06",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6fdbcc29db51d979",
            "b44e194ded85a44d",
            "4d1b0f4af9d49974",
            "94f9a38c3dd1f859",
            "c6136115b0349e2a",
            "18c5d84e2c449dcb",
            "b10119124ca0b517"
        ],
        "x": 54,
        "y": 19,
        "w": 1232,
        "h": 122
    },
    {
        "id": "62bd404960e86e0e",
        "type": "group",
        "z": "fa1cde214afbec06",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bb6959f337d1ee80",
            "d060a9a85d0321af",
            "060201b2ff983363",
            "14f174570e14119d",
            "bad52c88a0f98ed3",
            "b42894635f161635",
            "19be8c5be789737b"
        ],
        "x": 54,
        "y": 299,
        "w": 1292,
        "h": 122
    },
    {
        "id": "ef863f8652365dd4",
        "type": "group",
        "z": "fa1cde214afbec06",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e2fb6363317657f7",
            "c5b7f7e25eea5f37",
            "f57ae12dfd3fad02",
            "4223443b71bf6a07",
            "be4bfebd7c6198a5",
            "38ded4db2a622522",
            "3ed5d038854fab9a"
        ],
        "x": 54,
        "y": 159,
        "w": 1132,
        "h": 122
    },
    {
        "id": "41d8070911e257a3",
        "type": "group",
        "z": "fa1cde214afbec06",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "eb196f2429101dac",
            "6f0b997ee891d94c",
            "98350979a4af768d",
            "649c284906517aba",
            "2ef8a0741a3a63ae",
            "a9d185d578569a40",
            "149fe40e40f02b7a"
        ],
        "x": 54,
        "y": 439,
        "w": 1272,
        "h": 122
    },
    {
        "id": "acbc843a7ddec6f2",
        "type": "group",
        "z": "fa1cde214afbec06",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "601f130a2218410b",
            "e976831310f27a4b",
            "9368e4387e05c527",
            "c20ec6e36e368051",
            "b414523dc38b43e3",
            "a8d12923a087f390",
            "58d9c662aae376e1"
        ],
        "x": 54,
        "y": 579,
        "w": 1292,
        "h": 122
    },
    {
        "id": "511281a00db5962f",
        "type": "group",
        "z": "fa1cde214afbec06",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "77452ae66b90b64a",
            "7cad8cbae4e3b2bf",
            "753d3968380e0edb",
            "43e80d0542f18698",
            "b1e3a226985b78a0",
            "a871cf3e8a699d15",
            "0c8178a1bbc0c68e"
        ],
        "x": 54,
        "y": 719,
        "w": 1072,
        "h": 122
    },
    {
        "id": "f84dae842559922c",
        "type": "group",
        "z": "1b5ddca5773a54ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2eefac8da5b2f65c",
            "ebeeb4aed08381fd",
            "6950f645cef5c74e",
            "450cdb228274943e",
            "e7fd33537cfc9541",
            "f8c15cb7e05aae5d",
            "e083e7b40f446fa5",
            "9fac72e78495e589",
            "02e398b48cc15356",
            "742f69094ec4d777",
            "9edf20a115d289b5",
            "c96d2ae60b19cc8d",
            "910e95e4314ffc6e",
            "467fa3504154ad71",
            "ab47a7b345ef4bb2",
            "312ad23330a7ace4",
            "2a20ec939fb42132"
        ],
        "x": 54,
        "y": 1179,
        "w": 1092,
        "h": 242
    },
    {
        "id": "a2163ad92881a024",
        "type": "group",
        "z": "7456a56ca14e1b6c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e150a2d8e1453744",
            "366e365488b92507",
            "7c0a85bba0eef45b",
            "18abecfd1cdd350e",
            "5f01a0567aa61e51",
            "8568fb501dca088e",
            "a59d17612c2c3a15"
        ],
        "x": 34,
        "y": 39,
        "w": 1212,
        "h": 122
    },
    {
        "id": "db7f269c30e1f6ac",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "15f5ce4b2408d066",
            "0bb2cf897be689e2",
            "a4e1fbf93d191908",
            "f0bbeb0c50148a1a",
            "00436250de6130b1",
            "8bdf3c8737c53602",
            "fd506a93034f6eb9"
        ],
        "x": 54,
        "y": 19,
        "w": 1212,
        "h": 122
    },
    {
        "id": "fcd2f651313b6d07",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "98eaa402c3668730",
            "e3c713360b4d1775",
            "1f1fe9c5541d8f43",
            "d4209873173572eb",
            "613d14afb43f5b3c",
            "b8a38b9c14ad7452",
            "240d1b2253f3eedb"
        ],
        "x": 54,
        "y": 299,
        "w": 1212,
        "h": 122
    },
    {
        "id": "0bd7ae649763078d",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f1311dccd096bfa2",
            "33972e9460197778",
            "f9616e9e3afc6579",
            "652370c13f9c7139",
            "ccd511e12b2cdf02",
            "53c17db384aae8c4",
            "bc476fa9de77a1e1"
        ],
        "x": 54,
        "y": 159,
        "w": 1212,
        "h": 122
    },
    {
        "id": "311003ebc544e72a",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b4110580f3268bbf",
            "3ad244586095b04c",
            "f6f22f7b53c165d7",
            "bda954170525a306",
            "2c754b9b18ee14aa",
            "c1deeb62e060787c",
            "79c57348c71ea6d3"
        ],
        "x": 54,
        "y": 439,
        "w": 1172,
        "h": 122
    },
    {
        "id": "187c307d6692775e",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3eac17f866f1d2b4",
            "b6e7c68807e015c4",
            "ee34681fa28e5910",
            "804dd12ac60a60d6",
            "364147eb3af3b9d0",
            "c8de58126855ac9c",
            "3a6e3cd8f422c7cc"
        ],
        "x": 54,
        "y": 579,
        "w": 1152,
        "h": 122
    },
    {
        "id": "f91d7d6be39dc428",
        "type": "group",
        "z": "7456a56ca14e1b6c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "feb8121afd9f5995",
            "ef3c6ab2b7f146b1",
            "ada25ea9162dddf9",
            "da91afc7e1391146",
            "fef6925e4decf341",
            "4c42bea0e6b276b7",
            "70c8c648c8cd86eb"
        ],
        "x": 34,
        "y": 179,
        "w": 1172,
        "h": 122
    },
    {
        "id": "f742cfb5ad1ca98e",
        "type": "group",
        "z": "7456a56ca14e1b6c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a1c588d6073011d3",
            "42d967d57565f4da",
            "55a520f8bc4b58ee",
            "a02932ab34cb2bc9",
            "a5e6d8f99597ed52",
            "3b1ed9b954a2eeb7",
            "a08850189a78c6d3"
        ],
        "x": 34,
        "y": 319,
        "w": 1232,
        "h": 122
    },
    {
        "id": "7e7c3e98cbbb41e8",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3de6642782117e6d",
            "c92c236018505e32",
            "30df5cebe8a221ef",
            "3a91967b0cb13448",
            "d2e4a40424617821",
            "d9a36a8201df31e1",
            "29dc020cdbc1c2c0"
        ],
        "x": 54,
        "y": 719,
        "w": 1232,
        "h": 122
    },
    {
        "id": "b4f4a0d03aaf52a4",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a795962c63224735",
            "220b30a212e6e8c5",
            "eaa8dd556d55af19",
            "4456496a5eb58130",
            "8d2ec9a26ad33f60",
            "135ab3bf7d8e7cc3",
            "f89b376e2ede3c6b"
        ],
        "x": 54,
        "y": 859,
        "w": 1232,
        "h": 122
    },
    {
        "id": "12f16d2c800c13ac",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "82c5a2f289dbe119",
            "bcbf6aa292c34d33",
            "c330f983f4ec3291",
            "8e793259c145beb4",
            "b84b6753e6a3c69f",
            "1eb5c6cf7c7d19fd",
            "c21f61c417f58103"
        ],
        "x": 74,
        "y": 999,
        "w": 1172,
        "h": 122
    },
    {
        "id": "db6f13a594c95dcc",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4127c80d9fbe7c71",
            "4395e11bc5d0756d",
            "a758f5b6d46d876d",
            "4bc48c88e6853aed",
            "da169d3ef88f8814",
            "1c9980761642b75c",
            "06740326cd6d6984"
        ],
        "x": 54,
        "y": 1139,
        "w": 1172,
        "h": 122
    },
    {
        "id": "fc9027e9ebe31c60",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e2fb914d4022096f",
            "33571579545f6a8e",
            "150ca88d309ca121",
            "6bfdaec1fbeb5a08",
            "02649acd314365aa",
            "a9d4feee7bb1840e",
            "4ec0bd2ff2c82fa0"
        ],
        "x": 54,
        "y": 1279,
        "w": 1172,
        "h": 122
    },
    {
        "id": "c351ab942b0a70d7",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a18a7e93bee06168",
            "ff8f22a4c7178a35",
            "6faff3b5650f9126",
            "183874ad6e553586",
            "302b8374bd8a615c",
            "83a3582b9cba93ea",
            "b7d6f03997fa7b24"
        ],
        "x": 54,
        "y": 1419,
        "w": 1172,
        "h": 122
    },
    {
        "id": "152656d5ef61a181",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "97e34c9c8e92a8f6",
            "01f0270f31a645d6",
            "8c3a347f7f555629",
            "5fdc5a5cfdbc191e",
            "7fe7b68b94818ea3",
            "4bc370b3aae66ac7",
            "52394604b18f8c22"
        ],
        "x": 54,
        "y": 1559,
        "w": 1172,
        "h": 122
    },
    {
        "id": "3cda4b72617e26a9",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "24e6f5eb9acec17f",
            "8ef195afbe99c78a",
            "38d05ac28e412e6a",
            "692a5d47148389d5",
            "bdc6ec56b8857aea",
            "2f44cf299a40c341",
            "ced6e43999c11228"
        ],
        "x": 54,
        "y": 1699,
        "w": 1212,
        "h": 122
    },
    {
        "id": "e477973bedad9973",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7932bbdc126d15e9",
            "3b467e0a3455e261",
            "d4315cd5fd5640d6",
            "4ec41ec5fa610ff1",
            "7c93df013af9e030",
            "65b0e7a7e66346de",
            "b63cce1da5aba6e2"
        ],
        "x": 54,
        "y": 1839,
        "w": 1192,
        "h": 122
    },
    {
        "id": "63d28efa54fba225",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c1f74be3c9262be4",
            "3292ad5d7c76e1fa",
            "1c8d726dbf3de082",
            "b5e0286ac70b5e4b",
            "bf425b04b2d483b4",
            "c413f4bb0b482f64",
            "ba02f4f59d14c0f4"
        ],
        "x": 54,
        "y": 1979,
        "w": 1192,
        "h": 122
    },
    {
        "id": "a30eb0e40ba88e3e",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ef38c8ed6db24a05",
            "0475251ad73c5ad5",
            "6603f2d9d0eb6c83",
            "97224eaf4ee84b9c",
            "435820597c310f1f",
            "abeed4903b080b90",
            "aacefb7ea1a74693"
        ],
        "x": 54,
        "y": 2119,
        "w": 1212,
        "h": 122
    },
    {
        "id": "a2bafdcc06f3e8b0",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a98456b9246332e8",
            "924a231a92e1ec4b",
            "53b634267281c373",
            "50a4f71e3d2821a9",
            "59319b272725a129",
            "4fa476b821a2f492",
            "f89a6e47f71a57d1"
        ],
        "x": 54,
        "y": 2259,
        "w": 1172,
        "h": 122
    },
    {
        "id": "b14abf6cdbcd89b0",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ebdb34c7060e55bc",
            "0985456baa715f06",
            "cfb4b301693de6d8",
            "64e73bb8a23768c0",
            "5b339a5bcd51fe9d",
            "ae67c6501440fd9d",
            "f69fd3e6c65b1cfc"
        ],
        "x": 54,
        "y": 2399,
        "w": 1192,
        "h": 122
    },
    {
        "id": "e3c6c8f600cfb42c",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a6bf8804747d3213",
            "6ac4da138e810e78",
            "4034aa5d60bbea85",
            "a12bb0a6a07cc570",
            "5aa285a4335129b9",
            "47f987b41ad48023",
            "e39156d117254e2e"
        ],
        "x": 54,
        "y": 2539,
        "w": 1152,
        "h": 122
    },
    {
        "id": "2227159433a6b21f",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2836b410a9985cbc",
            "e34b8e37d597b7d5",
            "7d0cee637dfe6ab0",
            "1526abde90ee2a49",
            "4e8e106aa1843232",
            "30b0743c9ed70451",
            "a0c0144d164587f1"
        ],
        "x": 54,
        "y": 2679,
        "w": 1232,
        "h": 122
    },
    {
        "id": "f843e4cb28657dbd",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5fa5bb0dbb417b60",
            "58a658f92b7613e3",
            "fa88c7fdb578c287",
            "2881ef01853c440d",
            "4a54e70cc926f592",
            "fb3fd58ed8c13814",
            "4788cabecd0619a3"
        ],
        "x": 54,
        "y": 2819,
        "w": 1252,
        "h": 122
    },
    {
        "id": "183ed9945b0c1832",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6847472bb677fc82",
            "6fe5d6569dfa97f9",
            "be1a297c47288648",
            "b22f838aef97217c",
            "7a7362a42f8728b9",
            "c42af6979a0245cb",
            "045b10baae17ffec"
        ],
        "x": 54,
        "y": 2959,
        "w": 1192,
        "h": 122
    },
    {
        "id": "6d735a08cc1b8575",
        "type": "group",
        "z": "eb7e481125253646",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "feeff5666c3dad8a",
            "ccf9e6778c5c890f",
            "3610a1c0b91d2b24",
            "7b4614f9cb870bcc",
            "97a1c6793e2f9a91",
            "9bb922ceb1ff682b",
            "d3b1c17c8fae7c58"
        ],
        "x": 54,
        "y": 3099,
        "w": 1212,
        "h": 122
    },
    {
        "id": "8bebfaafc473c3bc",
        "type": "group",
        "z": "1b5ddca5773a54ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4254b9eb76f28133",
            "fe2f37ea1d172055",
            "6448d528379519e1",
            "da9f0f62d6a3aaf8"
        ],
        "x": 154,
        "y": 19,
        "w": 452,
        "h": 122
    },
    {
        "id": "42ea256f9645e7df",
        "type": "group",
        "z": "e25d9bb806c7d918",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3bf847019d881685",
            "5448f7f1e826e429",
            "17dd69a5bf3134a7",
            "c6f32c806e58ecbe",
            "99e84a5e07a1b5ad",
            "61f7d9a4e103ef5f",
            "f3dc844726e1208c",
            "11aa8a6089b82390",
            "b9a5035af74bcec7",
            "924bef1fbee64a36",
            "d72970dc73177f49"
        ],
        "x": 834,
        "y": 479,
        "w": 1252,
        "h": 302
    },
    {
        "id": "1e52f8af9bd8e83a",
        "type": "mqtt-broker",
        "name": "mqtt",
        "broker": "${ASTRODASH_MQTT_SERVER}",
        "port": "${ASTRODASH_MQTT_PORT}",
        "clientid": "astrodash",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "client/astrodash",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "True",
        "birthMsg": {},
        "closeTopic": "client/astrodash",
        "closeQos": "0",
        "closeRetain": "true",
        "closePayload": "False",
        "closeMsg": {},
        "willTopic": "client/astrodash",
        "willQos": "0",
        "willRetain": "true",
        "willPayload": "False",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": "",
        "info": "Environment variables must be specified for:\n- ASTRODASH_MQTT_SERVER\n- ASTRODASH_MQTT_PORT\n- ASTRODASH_MQTT_USER\n- ASTRODASH_MQTT_PASSWORD"
    },
    {
        "id": "c1554915c12d6220",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "be638a302c5b4442",
        "type": "ui_base",
        "name": "Home",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Imaging Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD-MMM/-YYYY",
            "sizes": {
                "sx": 48,
                "sy": 24,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 3,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cdc48dfa5db8c7e1",
        "type": "ui_group",
        "name": "Column 3",
        "tab": "c1554915c12d6220",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "76298aafad5dda82",
        "type": "ui_group",
        "name": "Column 2",
        "tab": "c1554915c12d6220",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dce8796b9d4b0fe7",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "settings",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "feb302518e44027c",
        "type": "ui_group",
        "name": "Units",
        "tab": "dce8796b9d4b0fe7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e14ef026db2f9ff2",
        "type": "ui_group",
        "name": "Column 1",
        "tab": "c1554915c12d6220",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cbfa853fb640c7f6",
        "type": "ui_tab",
        "name": "All Sky History",
        "icon": "history",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a3e97eae6bfe1d3f",
        "type": "ui_group",
        "name": "controls",
        "tab": "cbfa853fb640c7f6",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f2e6e25986fbead2",
        "type": "ui_spacer",
        "z": "faf1b8c759f6df3e",
        "d": true,
        "name": "spacer",
        "group": "cdc48dfa5db8c7e1",
        "order": 15,
        "width": "6",
        "height": "1"
    },
    {
        "id": "b356a2afa0c49910",
        "type": "ui_group",
        "name": "images & videos",
        "tab": "cbfa853fb640c7f6",
        "order": 2,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2dd7db31dc1fc228",
        "type": "ui_group",
        "name": "Column 4",
        "tab": "c1554915c12d6220",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c378d89527c6751d",
        "type": "ui_spacer",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "spacer",
        "group": "2dd7db31dc1fc228",
        "order": 21,
        "width": "6",
        "height": "3"
    },
    {
        "id": "d3cbce692066b3bd",
        "type": "ui_spacer",
        "z": "cb98bbe7ef358b99",
        "name": "spacer",
        "group": "cdc48dfa5db8c7e1",
        "order": 5,
        "width": "12",
        "height": "1"
    },
    {
        "id": "531fbd97883c0311",
        "type": "ui_spacer",
        "z": "cb98bbe7ef358b99",
        "name": "spacer",
        "group": "cdc48dfa5db8c7e1",
        "order": 1,
        "width": "1",
        "height": "6"
    },
    {
        "id": "2990a1f5e28bac83",
        "type": "ui_group",
        "name": "Astrospheric",
        "tab": "c1554915c12d6220",
        "order": 5,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa10c163eccfbce7",
        "type": "ui_tab",
        "name": "Graphs",
        "icon": "timeline",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f90db7fffaaa72da",
        "type": "ui_group",
        "name": "Weather Graphs",
        "tab": "aa10c163eccfbce7",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1c3330158b603c06",
        "type": "ui_group",
        "d": true,
        "name": "Outlet Control",
        "tab": "dce8796b9d4b0fe7",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fd847d8a93745a8c",
        "type": "unifi-access-controller",
        "name": "router",
        "controllerIp": "${ASTRODASH_UNIFI_CONTROLLER}",
        "controllerPort": "",
        "controllerType": "UniFiOSConsole"
    },
    {
        "id": "9093daa86befc5f7",
        "type": "ui_spacer",
        "z": "e105e7d9afdc420c",
        "name": "spacer",
        "group": "2dd7db31dc1fc228",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "19ab1aeda644ab30",
        "type": "ui_group",
        "name": "NINA Session History",
        "tab": "c1554915c12d6220",
        "order": 6,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "efd2d8c48e84ee1d",
        "type": "ui_group",
        "name": "Location",
        "tab": "dce8796b9d4b0fe7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a5aabd8e682ebf91",
        "type": "ui_spacer",
        "z": "1b5ddca5773a54ff",
        "name": "spacer",
        "group": "efd2d8c48e84ee1d",
        "order": 2,
        "width": "6",
        "height": "1"
    },
    {
        "id": "dd7df2b889616f2c",
        "type": "ui_group",
        "name": "Aeris Weather",
        "tab": "dce8796b9d4b0fe7",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa553bc5f496ab04",
        "type": "ui_group",
        "name": "Systems",
        "tab": "dce8796b9d4b0fe7",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75ed96cf32269bb3",
        "type": "ui_spacer",
        "z": "1b5ddca5773a54ff",
        "name": "spacer",
        "group": "aa553bc5f496ab04",
        "order": 2,
        "width": "6",
        "height": "1"
    },
    {
        "id": "6f28c2e8ad2ec85b",
        "type": "ui_spacer",
        "z": "1b5ddca5773a54ff",
        "name": "spacer",
        "group": "aa553bc5f496ab04",
        "order": 4,
        "width": "6",
        "height": "1"
    },
    {
        "id": "8c89d3080f48bc7a",
        "type": "ui_group",
        "name": "Version",
        "tab": "dce8796b9d4b0fe7",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "24663d8dd5637396",
        "type": "ui_spacer",
        "z": "52253e7db7826624",
        "name": "spacer",
        "group": "e14ef026db2f9ff2",
        "order": 30,
        "width": "6",
        "height": "1"
    },
    {
        "id": "b365f2b84477ee54",
        "type": "ui_group",
        "name": "Safety",
        "tab": "dce8796b9d4b0fe7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9a929b8bbc047fc3",
        "type": "ui_spacer",
        "z": "1b5ddca5773a54ff",
        "name": "spacer",
        "group": "b365f2b84477ee54",
        "order": 2,
        "width": "6",
        "height": "1"
    },
    {
        "id": "92c53735457f56d4",
        "type": "ui_spacer",
        "z": "1b5ddca5773a54ff",
        "name": "spacer",
        "group": "b365f2b84477ee54",
        "order": 4,
        "width": "6",
        "height": "1"
    },
    {
        "id": "7763bbf6df0db9e7",
        "type": "ui_spacer",
        "z": "1b5ddca5773a54ff",
        "name": "spacer",
        "group": "b365f2b84477ee54",
        "order": 6,
        "width": "6",
        "height": "1"
    },
    {
        "id": "1585fce6039d50ed",
        "type": "ui-base",
        "name": "Imaging Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ]
    },
    {
        "id": "6f9660ab4373c845",
        "type": "ui-theme",
        "name": "Theme Name",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        }
    },
    {
        "id": "e874c3ec8196267a",
        "type": "ui-page",
        "name": "Home",
        "ui": "1585fce6039d50ed",
        "path": "/",
        "icon": "home",
        "layout": "grid",
        "theme": "6f9660ab4373c845",
        "order": -1,
        "className": ""
    },
    {
        "id": "ecd3d6dc353f615e",
        "type": "ui-group",
        "name": "Col 1",
        "page": "e874c3ec8196267a",
        "width": "6",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": ""
    },
    {
        "id": "389f4b01e25f18eb",
        "type": "function",
        "z": "7ad337185da278c4",
        "name": "round to 1 decimal place",
        "func": "var f = (Math.round(msg.payload * 10) / 10).toFixed(1);\nif (!isNaN(f)) {\n    msg.payload = f;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "2397defe97638005",
        "type": "function",
        "z": "7630d7f507ca85f8",
        "name": "round to 0 decimal places",
        "func": "var f = Math.round(msg.payload);\nif (!isNaN(f)) {\n    msg.payload = f;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9fb69200687b75ce",
        "type": "function",
        "z": "aa22e89f1e9e3c1f",
        "name": "toLocalteString",
        "func": "msg.payload = msg.payload.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c91cdab45dc0a618",
        "type": "function",
        "z": "0b6ce0b527d51f54",
        "name": "convert C to F",
        "func": "var f = msg.payload * 9 / 5 + 32;\nif (!isNaN(f)) {\n    msg.payload = f;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "42fb11c407bfd146",
        "type": "function",
        "z": "fee8a00528469178",
        "name": "mb to mercury",
        "func": "var f = msg.payload / 33.864;\nif (!isNaN(f)) {\n    msg.payload = f;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6462bdac2c42fee3",
        "type": "function",
        "z": "29bf3ca50f8de2a8",
        "name": "round to 2 decimal lplaces",
        "func": "var f = (Math.round(msg.payload * 100) / 100).toFixed(2);\nif (!isNaN(f)) {\n    msg.payload = f;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3841ec6b0d902d54",
        "type": "function",
        "z": "1481853667c63134",
        "name": "convert kph to mph",
        "func": "var f = msg.payload * 0.6213711922;\nif (!isNaN(f)) {\n    msg.payload = f;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "5cca22cd16a198cd",
        "type": "function",
        "z": "351fdfbd1fd8e5d4",
        "name": "convert mm to in",
        "func": "var f = msg.payload / 25.4;\nif (!isNaN(f)) {\n    msg.payload = f;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6899c7ea571bff62",
        "type": "function",
        "z": "d55cf5900e78c639",
        "name": "inject timestamp",
        "func": "msg.timestamp = Date.now();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f57aec354e938259",
        "type": "function",
        "z": "63b8acad88eafa84",
        "name": "Next Server Transaction ID",
        "func": "id = global.get(\"server_transaction_id\");\n\nif (isNaN(id)) {\n    id = 0;\n}\nid = id + 1;\nglobal.set(\"server_transaction_id\", id);\nmsg.payload.ServerTransactionID = id;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            [
                "f3a83196188fa2bd"
            ]
        ]
    },
    {
        "id": "f3a83196188fa2bd",
        "type": "debug",
        "z": "63b8acad88eafa84",
        "d": true,
        "name": "Next Server Transaction ID",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 100,
        "wires": []
    },
    {
        "id": "350d97e9acb4150b",
        "type": "inject",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "every 15 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "697f450e5e628ace"
            ]
        ],
        "info": "Aeris Weather updates forecasts once an hour but we update every 15 minutes to ensure a timely update."
    },
    {
        "id": "597afeb4b772d882",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "forecast msg0",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 80,
        "wires": []
    },
    {
        "id": "589f3d14065f05cd",
        "type": "switch",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "any precip in forecast?",
        "property": "precip",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 240,
        "wires": [
            [
                "6f8e0c7641b51ebb"
            ]
        ]
    },
    {
        "id": "67024f3c6d6fc188",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "forecast precip alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 975,
        "y": 240,
        "wires": []
    },
    {
        "id": "6f8e0c7641b51ebb",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "format pushover msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forecast has rain within 12 hours",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "67024f3c6d6fc188"
            ]
        ]
    },
    {
        "id": "24efebad72f05c4a",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "for precipitation in forecast UI LED",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.precip > 0",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 280,
        "wires": [
            [
                "4179e702ca68e160"
            ]
        ]
    },
    {
        "id": "973b6d748413494e",
        "type": "function",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "Rain in region?",
        "func": "const aeris = new aw.AerisWeather(env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_ID\"), env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_SECRET\"));\n\n// create the request instance\nconst request = aeris.api();\n\n// configure the request endpoint\nrequest.endpoint('observations');\n\n// set the place to request data for\nlatlong = global.get(\"lattitude\") + \",\" + global.get(\"longitude\");\n//console.log('latlong = ' + latlong);\nrequest.place(latlong);\nrequest.radius(\"25mi\");\nrequest.limit(50);\nrequest.filter('allstations,wxrain');\n\nvar precipInRegion = false;\n\n// perform the request and output the data\nrequest.get().then((result) => {\n    // returned data will be accessible on `result.data` \n    //console.log(JSON.stringify(result.data, null, 4));\n    console.log(\"length = \" + result.data.length);\n    for (let n in result.data) {\n        station = result.data[n];\n        //console.log(JSON.stringify(station, null, 4));    \n        ob = station.ob;\n        //console.log(JSON.stringify(ob, null, 4));         \n        //console.log(\"--------------------\");\n        if (ob != null && ob.precipIN > 0) {\n            precipInRegion = true;\n            console.log(\"--------------------\");\n            console.log(JSON.stringify(station, null, 4));\n            break;\n        }\n    }\n    \n    var newmsg = {};\n    newmsg.topic = \"precip in region\";\n    newmsg.payload = precipInRegion;\n    node.send(newmsg);\n});\n\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "aw",
                "module": "@aerisweather/javascript-sdk"
            }
        ],
        "x": 400,
        "y": 860,
        "wires": [
            [
                "c5bc8b9038e3dc1a",
                "768ec18a999c5f64",
                "c7c1797306fc379f",
                "7af376bbdb6731b8",
                "1af7661b03676a56",
                "1e6cc5a0dbe1a19b",
                "bf2c5a0c096a9716"
            ]
        ]
    },
    {
        "id": "4433a7fb4b4a3e48",
        "type": "inject",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "every 10 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "973b6d748413494e"
            ]
        ],
        "info": "The rate at which this data updates at Aeris is variable and depends on when weather stations send updates to Aeris. As such it could be very laggy.\n\nWe fetch every 10 minutes to try to get reasonably timely data without exhausitng our API allotment.\n\n"
    },
    {
        "id": "c5bc8b9038e3dc1a",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "precip in region",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 780,
        "wires": []
    },
    {
        "id": "e9402e8f8046b3a3",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.hasOwnProperty(\"precip\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "f4ce571caf56ba10"
            ]
        ]
    },
    {
        "id": "768ec18a999c5f64",
        "type": "switch",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "any precip in the area?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 900,
        "wires": [
            [
                "225719f086ac4857"
            ]
        ]
    },
    {
        "id": "8cdeafdf9e050fd5",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "precip in region alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1045,
        "y": 900,
        "wires": []
    },
    {
        "id": "225719f086ac4857",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "There is rain within 25 miles!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 900,
        "wires": [
            [
                "8cdeafdf9e050fd5"
            ]
        ]
    },
    {
        "id": "785c399114871702",
        "type": "inject",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "every 10 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "6e0754a5125b21cf",
                "6c4ae3d400bfdbb5"
            ]
        ],
        "info": "Aeris Weather updates doppler radar images every 2 minutes. We are fetching every 5 minutes to reduce our use of the API so as to not approach our limit."
    },
    {
        "id": "354b212c006593b9",
        "type": "inject",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "every 15 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1860,
        "wires": [
            [
                "18b56af475fb6fd4",
                "4c136ea3fe417aeb"
            ]
        ],
        "info": "Aeris Weather updates infrared satellite data every 15 minutes. "
    },
    {
        "id": "d10980041038cae3",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "radar image",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1240,
        "wires": []
    },
    {
        "id": "db4c028af6a8197c",
        "type": "http request",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "Fetch radar image",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 1320,
        "wires": [
            [
                "d10980041038cae3",
                "c9909b86a04331dc",
                "907941bb210cad6e"
            ]
        ]
    },
    {
        "id": "6433427b4ac8ce73",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "wrote radar file",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 1240,
        "wires": []
    },
    {
        "id": "da358da54ee7a022",
        "type": "file",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "write radar image file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1320,
        "y": 1320,
        "wires": [
            [
                "6433427b4ac8ce73",
                "a9645e9b3d04acbe",
                "8df096c905a4e941"
            ]
        ]
    },
    {
        "id": "6e0754a5125b21cf",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "save the timestamp for use in the filename",
        "rules": [
            {
                "t": "set",
                "p": "radar_timestamp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "61edd9fba5ac90f1"
            ]
        ]
    },
    {
        "id": "4213479ae276753e",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "radar filename",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c9909b86a04331dc",
        "type": "string",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "set radar fielname",
        "methods": [
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": "/statichttp/aeris/radar.png"
                    }
                ]
            }
        ],
        "prop": "",
        "propout": "filename",
        "object": "str",
        "objectout": "msg",
        "x": 1090,
        "y": 1320,
        "wires": [
            [
                "da358da54ee7a022",
                "4213479ae276753e"
            ]
        ]
    },
    {
        "id": "0c20b3580ca16a03",
        "type": "ui_ui_control",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "force image load on connect",
        "events": "connect",
        "x": 1320,
        "y": 1380,
        "wires": [
            [
                "8df096c905a4e941"
            ]
        ]
    },
    {
        "id": "59c92aca84f4822c",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "cloud image",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5cea5ca0dd415970",
        "type": "http request",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "Fetch cloud image",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 1820,
        "wires": [
            [
                "59c92aca84f4822c",
                "9ff1fd5a61e4961e",
                "794ae3182c8d7982"
            ]
        ]
    },
    {
        "id": "e972f448c685c0b8",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "wrote cloud file",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e46b4565c4120249",
        "type": "file",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "write cloud image file",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1320,
        "y": 1820,
        "wires": [
            [
                "e972f448c685c0b8",
                "b6b25b126fabf5c3",
                "e3e14f76857c1246"
            ]
        ]
    },
    {
        "id": "18b56af475fb6fd4",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "save the timestamp for use in the filename",
        "rules": [
            {
                "t": "set",
                "p": "cloud_timestamp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1820,
        "wires": [
            [
                "8d0b403eaabc9e3a"
            ]
        ]
    },
    {
        "id": "c3bff24030358607",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "cloud filename",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 1780,
        "wires": []
    },
    {
        "id": "9ff1fd5a61e4961e",
        "type": "string",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "set cloud fielname",
        "methods": [
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": "/statichttp/aeris/cloud.png"
                    }
                ]
            }
        ],
        "prop": "",
        "propout": "filename",
        "object": "str",
        "objectout": "msg",
        "x": 1090,
        "y": 1820,
        "wires": [
            [
                "e46b4565c4120249",
                "c3bff24030358607"
            ]
        ]
    },
    {
        "id": "a9645e9b3d04acbe",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last_radar_timestamp",
                "pt": "flow",
                "to": "radar_timestamp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "b6b25b126fabf5c3",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last_cloud_timestamp",
                "pt": "flow",
                "to": "cloud_timestamp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "8df096c905a4e941",
        "type": "moment",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "format radar timestamp",
        "topic": "",
        "input": "radar_timestamp",
        "inputType": "flow",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en-US",
        "output": "radar_time",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 1590,
        "y": 1380,
        "wires": [
            [
                "18b7648538d9acf4"
            ]
        ]
    },
    {
        "id": "e3e14f76857c1246",
        "type": "moment",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "format cloud timestamp",
        "topic": "",
        "input": "cloud_timestamp",
        "inputType": "flow",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en-US",
        "output": "cloud_time",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 1590,
        "y": 1820,
        "wires": [
            [
                "48ac5e97e463afaa"
            ]
        ]
    },
    {
        "id": "18b7648538d9acf4",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "stash the timestamps into the message",
        "rules": [
            {
                "t": "set",
                "p": "radar_timestamp",
                "pt": "msg",
                "to": "radar_timestamp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1440,
        "wires": [
            [
                "69fb21701d3b3e35"
            ]
        ]
    },
    {
        "id": "128a51049400d248",
        "type": "fs-ops-delete",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "delete old radar file",
        "path": "/Volumes/allsky/tmp",
        "pathType": "str",
        "filename": "payload",
        "filenameType": "msg",
        "x": 610,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "22d9054a088611cf",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "radar filename to delete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6c4ae3d400bfdbb5",
        "type": "string",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "last radar filename",
        "methods": [
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": "radar-"
                    }
                ]
            },
            {
                "name": "append",
                "params": [
                    {
                        "type": "flow",
                        "value": "last_radar_timestamp"
                    }
                ]
            },
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": ".png"
                    }
                ]
            }
        ],
        "prop": "",
        "propout": "payload",
        "object": "str",
        "objectout": "msg",
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "22d9054a088611cf",
                "128a51049400d248"
            ]
        ]
    },
    {
        "id": "1cf268b14fa9124a",
        "type": "fs-ops-delete",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "delete old cloud file",
        "path": "/Volumes/allsky/tmp",
        "pathType": "str",
        "filename": "payload",
        "filenameType": "msg",
        "x": 550,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "2617c2313d4f83ef",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "cloud filename to delete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1880,
        "wires": []
    },
    {
        "id": "4c136ea3fe417aeb",
        "type": "string",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "last cloud filename",
        "methods": [
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": "cloud-"
                    }
                ]
            },
            {
                "name": "append",
                "params": [
                    {
                        "type": "flow",
                        "value": "last_cloud_timestamp"
                    }
                ]
            },
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": ".png"
                    }
                ]
            }
        ],
        "prop": "",
        "propout": "payload",
        "object": "str",
        "objectout": "msg",
        "x": 350,
        "y": 1920,
        "wires": [
            [
                "2617c2313d4f83ef",
                "1cf268b14fa9124a"
            ]
        ]
    },
    {
        "id": "48ac5e97e463afaa",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "stash the timestamps into the message",
        "rules": [
            {
                "t": "set",
                "p": "cloud_timestamp",
                "pt": "msg",
                "to": "cloud_timestamp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 1760,
        "wires": [
            [
                "ed613a61cff41ea5"
            ]
        ]
    },
    {
        "id": "9f172f5b511ff904",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "forecast msg1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 580,
        "wires": []
    },
    {
        "id": "a3f507fb60bfbe23",
        "type": "inject",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "every 10 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2320,
        "wires": [
            [
                "1ffe17f783cbb28b"
            ]
        ]
    },
    {
        "id": "4548de24ab49709c",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "ui out: cloud coverage",
        "mode": "link",
        "links": [
            "6b6a3f8d333f8dca",
            "884aae1a3e8ecabf"
        ],
        "x": 615,
        "y": 2260,
        "wires": []
    },
    {
        "id": "4e4c4d4f26387f63",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cloudCover",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "17c3a87ac6b14b34",
        "type": "mqtt out",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "",
        "topic": "weather/cloudCover",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1e52f8af9bd8e83a",
        "x": 700,
        "y": 2400,
        "wires": []
    },
    {
        "id": "a13abf24d12147e5",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "boltwoodClouds",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "697f450e5e628ace",
        "type": "function",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "current forecast",
        "func": "const aeris = new aw.AerisWeather(env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_ID\"), env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_SECRET\"));\n\n// create the request instance\nconst request = aeris.api();\n\n// configure the conditions endpoint\nrequest.endpoint('forecasts');\n\n// set the place to request data for\nlatlong = global.get(\"lattitude\") + \",\" + global.get(\"longitude\");\n//console.log('latlong = ' + latlong);\nrequest.place(latlong);\n\n// configure the request options\nrequest.filter('6hr').limit(2);\n\n//request.fields('fields=periods.dateTimeISO,loc,periods.maxTempF,periods.minTempF,periods.pop,periods.precipIN,periods.maxHumidity,periods.minHumidity,periods.maxDewpointF,periods.minDewpointF,periods.windSpeedMaxMPH,periods.windDirMax,periods.weather');\nmsg0 = {};\nmsg1 = {};\n\n// perform the request and output the data\nrequest.get().then((result) => {\n    // returned data will be accessible on `result.data` \n    period0 = result.data[0]['periods'][0];\n    period1 = result.data[0]['periods'][1];    \n\n    //console.log(JSON.stringify(period0, null, 4));\n    //console.log(\"period0.weatherPrimary\");\n    //console.log(period0[\"weatherPrimary\"]);\n    //console.log(\"period1.weatherPrimary\");\n    //console.log(period1[\"weatherPrimary\"]);\n    \n    msg0.forecast = period0[\"weatherPrimary\"];\n    msg1.forecast = period1[\"weatherPrimary\"];\n    \n    msg0.pop = Math.max(period0[\"pop\"], period1[\"pop\"]);\n    msg0.precip = period0[\"precipIN\"] + period1[\"precipIN\"] + \n        period0[\"precipMM\"] + period1[\"precipMM\"]\n    \n    node.send([msg0, msg1]);\n    node.done();\n});\n\nreturn;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "aw",
                "module": "@aerisweather/javascript-sdk"
            }
        ],
        "x": 300,
        "y": 360,
        "wires": [
            [
                "589f3d14065f05cd",
                "24efebad72f05c4a",
                "597afeb4b772d882",
                "e9402e8f8046b3a3",
                "b7c560ade9c0815d",
                "4fd05e0f86ab77ed",
                "33920f7906343f6d",
                "0c85b976d3460fe1",
                "333b8ed7424d85c0",
                "5417d9bc80c20920"
            ],
            [
                "9f172f5b511ff904",
                "86628a45389e5339"
            ]
        ]
    },
    {
        "id": "1ffe17f783cbb28b",
        "type": "function",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "current conditions",
        "func": "const aeris = new aw.AerisWeather(env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_ID\"), env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_SECRET\"));\n\n// create the request instance\nconst request = aeris.api();\n\n// configure the conditions endpoint\nrequest.endpoint('conditions');\n\n// set the place to request data for\nlatlong = global.get(\"lattitude\") + \",\" + global.get(\"longitude\");\n//console.log('latlong = ' + latlong);\nrequest.place(latlong);\n\n// configure the request options\nrequest.filter('1min').plimit(1);\n\nmsg1 = {};\nmsg2 = {};\nmsg3 = {};\n\n// perform the request and output the data\nrequest.get().then((result) => {\n    // returned data will be accessible on `result.data` \n    period = result.data[0]['periods'][0];\n    //console.log(JSON.stringify(period));\n\n    switch (period.cloudsCoded) {\n    case \"CL\":\n        msg1.payload = \"clear\";\n        msg2.payload = 0;\n        msg3.payload = 1;      \n        break;\n     case \"FW\":\n        msg1.payload = \"mostly clear\";\n        msg2.payload = 10;\n        msg3.payload = 1;      \n        break;\n     case \"SC\":\n        msg1.payload = \"partly cloudy\";\n        msg2.payload = 50;\n        msg3.payload = 2;      \n        break;\n    case \"BK\":\n        msg1.payload = \"mostly cloudy\";\n        msg2.payload = 75;\n        msg3.payload = 2;      \n        break;\n    case \"OV\":\n        msg1.payload = \"overcast\";\n        msg2.payload = 100;\n        msg3.payload = 3;      \n        break;\n    default:\n        console.log(\"Unknown cloud code: \" + period.cloudsCoded);\n        msg1.payload = \"uknoown\";\n        msg2.payload = 100;\n        msg3.payload = 3;\n    }\n    node.send([msg1, msg2, msg3]);\n    node.done();\n});\n\nreturn;",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "aw",
                "module": "@aerisweather/javascript-sdk"
            }
        ],
        "x": 410,
        "y": 2320,
        "wires": [
            [
                "4548de24ab49709c",
                "d7c5b2b6a16b0d70",
                "fcc77906677e214f",
                "ef723c8a178ec2d4"
            ],
            [
                "17c3a87ac6b14b34",
                "4e4c4d4f26387f63"
            ],
            [
                "a13abf24d12147e5"
            ]
        ]
    },
    {
        "id": "b7c560ade9c0815d",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "set globals",
        "rules": [
            {
                "t": "set",
                "p": "pop",
                "pt": "global",
                "to": "pop",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "forecastPrecip",
                "pt": "global",
                "to": "precip",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "4fd05e0f86ab77ed",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "ui out: pop",
        "mode": "link",
        "links": [
            "bd0ff9eeb0246efe"
        ],
        "x": 495,
        "y": 120,
        "wires": []
    },
    {
        "id": "4179e702ca68e160",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "ui out: forecast precip",
        "mode": "link",
        "links": [
            "424416f6267c658b"
        ],
        "x": 975,
        "y": 280,
        "wires": []
    },
    {
        "id": "33920f7906343f6d",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "ui out: forecast line 1",
        "mode": "link",
        "links": [
            "59736b8a1f8ca869"
        ],
        "x": 495,
        "y": 160,
        "wires": []
    },
    {
        "id": "86628a45389e5339",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "ui out: forecast line 2",
        "mode": "link",
        "links": [
            "fd7d6797d5d2967d"
        ],
        "x": 495,
        "y": 540,
        "wires": []
    },
    {
        "id": "f4ce571caf56ba10",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "ui out: aeris api (forecast)",
        "mode": "link",
        "links": [
            "a988f83f33bfd63a"
        ],
        "x": 715,
        "y": 440,
        "wires": []
    },
    {
        "id": "c7c1797306fc379f",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "ui out: precip in area",
        "mode": "link",
        "links": [
            "77a26645f9c45086"
        ],
        "x": 585,
        "y": 860,
        "wires": []
    },
    {
        "id": "69fb21701d3b3e35",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "ui out: radar image",
        "mode": "link",
        "links": [
            "169a2f04c1b81f98"
        ],
        "x": 1955,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ed613a61cff41ea5",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "ui out: cloud image",
        "mode": "link",
        "links": [
            "d08f9c0c8b283864"
        ],
        "x": 2025,
        "y": 1760,
        "wires": []
    },
    {
        "id": "7af376bbdb6731b8",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rainInRegion",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "0c85b976d3460fe1",
        "type": "subflow:d55cf5900e78c639",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "d902e5f9c673c77a"
            ]
        ]
    },
    {
        "id": "d902e5f9c673c77a",
        "type": "moment",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "",
        "topic": "",
        "input": "timestamp",
        "inputType": "msg",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 800,
        "y": 360,
        "wires": [
            [
                "4016642a0cfc4610"
            ]
        ]
    },
    {
        "id": "4016642a0cfc4610",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "ui out: aw forecast time",
        "mode": "link",
        "links": [
            "abfbccd79ef0c3c0"
        ],
        "x": 955,
        "y": 360,
        "wires": []
    },
    {
        "id": "1af7661b03676a56",
        "type": "subflow:d55cf5900e78c639",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "",
        "x": 650,
        "y": 940,
        "wires": [
            [
                "ce657c9be8bd2abe"
            ]
        ]
    },
    {
        "id": "ce657c9be8bd2abe",
        "type": "moment",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "",
        "topic": "",
        "input": "timestamp",
        "inputType": "msg",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 900,
        "y": 940,
        "wires": [
            [
                "e7a69aa230b9a1bb"
            ]
        ]
    },
    {
        "id": "d7c5b2b6a16b0d70",
        "type": "subflow:d55cf5900e78c639",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "",
        "x": 690,
        "y": 2220,
        "wires": [
            [
                "e608a143f73f40f5"
            ]
        ]
    },
    {
        "id": "e608a143f73f40f5",
        "type": "moment",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "",
        "topic": "",
        "input": "timestamp",
        "inputType": "msg",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 920,
        "y": 2220,
        "wires": [
            [
                "ac4351284e091076"
            ]
        ]
    },
    {
        "id": "ac4351284e091076",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "ui out: aw conditions time",
        "mode": "link",
        "links": [
            "41b06a902b72be0f"
        ],
        "x": 1095,
        "y": 2220,
        "wires": []
    },
    {
        "id": "e7a69aa230b9a1bb",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "ui out: aw observations time",
        "mode": "link",
        "links": [
            "f230de2c3b1a6c73"
        ],
        "x": 1045,
        "y": 940,
        "wires": []
    },
    {
        "id": "fcc77906677e214f",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "aw conditions",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 2300,
        "wires": []
    },
    {
        "id": "3688d6cd22dc23c4",
        "type": "mqtt out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "",
        "topic": "forecast/probability_of_precipitation",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1e52f8af9bd8e83a",
        "x": 850,
        "y": 320,
        "wires": []
    },
    {
        "id": "333b8ed7424d85c0",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pop",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "3688d6cd22dc23c4"
            ]
        ]
    },
    {
        "id": "5417d9bc80c20920",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "precip",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "2d716d82d4eb9175"
            ]
        ]
    },
    {
        "id": "2d716d82d4eb9175",
        "type": "mqtt out",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "",
        "topic": "forecast/precipitation_amount",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1e52f8af9bd8e83a",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "1e6cc5a0dbe1a19b",
        "type": "mqtt out",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "",
        "topic": "weather/rain_in_region",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1e52f8af9bd8e83a",
        "x": 660,
        "y": 720,
        "wires": []
    },
    {
        "id": "61edd9fba5ac90f1",
        "type": "function",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "construct radar url",
        "func": "msg.url = \"https://maps.aerisapi.com/\" + \n    env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_ID\") + \"_\" +\n    env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_SECRET\") +\n    \"/radar/256x256/\" +\n    global.get(\"lattitude\") + \",\" +\n    global.get(\"longitude\") + \",\" +\n    global.get(\"map_zoom\") +\n    \"/current.png\";\n    \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1300,
        "wires": [
            [
                "9ddceb00053d9cf1",
                "db4c028af6a8197c"
            ]
        ]
    },
    {
        "id": "9ddceb00053d9cf1",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "radar url",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1240,
        "wires": []
    },
    {
        "id": "8d0b403eaabc9e3a",
        "type": "function",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "construct IR clouds url",
        "func": "map_zoom = parseInt(global.get(\"map_zoom\"));\n\nmsg.url = \"https://maps.aerisapi.com/\" + \n    env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_ID\") + \"_\" +\n    env.get(\"ASTRODASH_AERIS_WEATHER_CLIENT_SECRET\") +\n    \"/satellite-geocolor/256x256/\" +\n    global.get(\"lattitude\") + \",\" +\n    global.get(\"longitude\") + \",\" +\n    map_zoom +\n    \"/current.png\";\n    \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1780,
        "wires": [
            [
                "5cea5ca0dd415970",
                "5bc457f485cfd326"
            ]
        ]
    },
    {
        "id": "5bc457f485cfd326",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "cloud url",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1740,
        "wires": []
    },
    {
        "id": "11a648e2658e4976",
        "type": "comment",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "Currrent conditions",
        "info": "This section fetches current conditions so we can extract the cloud cover.\n\nUnfortunately, the cloud cover value seems only vaguely related to reality so don't give it too much weight in your decision making process.",
        "x": 230,
        "y": 2220,
        "wires": []
    },
    {
        "id": "47bb83c16c38f3ce",
        "type": "comment",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "IR Clouds Image",
        "info": "This section fetches the infrared clouds satellite image.\n\nThis is a very epensive call in the Aeris Weather API so you should limit the number of times per hour it is called. \n\nSee https://www.aerisweather.com/support/kb/maps/what-is-a-map-unit/ to understand Aeris Weather map units (they add up fast!) and ",
        "x": 300,
        "y": 1740,
        "wires": []
    },
    {
        "id": "2d400cedda77d483",
        "type": "comment",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "Doppler Radar Image",
        "info": "This section fetches the doppler radar image.\n\nThis is a very epensive call in the Aeris Weather API so you should limit the number of times per hour it is called. \n\nSee https://www.aerisweather.com/support/kb/maps/what-is-a-map-unit/ to understand Aeris Weather map units (they add up fast!) and ",
        "x": 220,
        "y": 1320,
        "wires": []
    },
    {
        "id": "fa3e4ff5d5426d33",
        "type": "comment",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "Rain in Region?",
        "info": "This section fetches observation reports from weather stations within 25 miles. If any is reporting precipitation then we publish that info to MQTT and also update the user interface.\n\nIt fetches observatiosn within 25 miles and the exact number of results returned will depend on the actual number of reporting weather stations.",
        "x": 300,
        "y": 740,
        "wires": []
    },
    {
        "id": "4a94812a994a52b9",
        "type": "comment",
        "z": "8eb51985a4dd8f36",
        "g": "568693adae137d4f",
        "name": "Forecast",
        "info": "We use the forecast api to get text forecasts for the UI as well as probability of precipitation and forecast precipitation amounts for alerting.",
        "x": 240,
        "y": 140,
        "wires": []
    },
    {
        "id": "04778c1d746857ba",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "longitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "17b646dd0e1eeb1a",
        "type": "catch",
        "z": "8eb51985a4dd8f36",
        "g": "bcc23b2bdd73666b",
        "name": "aeris api error handler",
        "scope": null,
        "uncaught": true,
        "x": 1280,
        "y": 180,
        "wires": [
            [
                "2139030b6e2f7a9f",
                "03f78ff9f614de1b"
            ]
        ]
    },
    {
        "id": "2139030b6e2f7a9f",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "bcc23b2bdd73666b",
        "name": "caught error on api",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 140,
        "wires": [
            [
                "aa0085daaa8a615a"
            ]
        ]
    },
    {
        "id": "03f78ff9f614de1b",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "bcc23b2bdd73666b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Aeris API is offline",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 200,
        "wires": [
            [
                "fe1b62e462acb010"
            ]
        ]
    },
    {
        "id": "fe1b62e462acb010",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "bcc23b2bdd73666b",
        "name": "sqm alert to pushover",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1685,
        "y": 200,
        "wires": []
    },
    {
        "id": "aa0085daaa8a615a",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "bcc23b2bdd73666b",
        "name": "ui out: aeris api (caught error)",
        "mode": "link",
        "links": [
            "a988f83f33bfd63a"
        ],
        "x": 1685,
        "y": 140,
        "wires": []
    },
    {
        "id": "44533363b71c034a",
        "type": "comment",
        "z": "8eb51985a4dd8f36",
        "g": "bcc23b2bdd73666b",
        "name": "handle errors",
        "info": "if an exception happens, alert the user via the UI and pushover.",
        "x": 1270,
        "y": 120,
        "wires": []
    },
    {
        "id": "c1ba2c10b05f59aa",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "ui out: aeris api (rain in region)",
        "mode": "link",
        "links": [
            "a988f83f33bfd63a"
        ],
        "x": 1045,
        "y": 980,
        "wires": []
    },
    {
        "id": "bf2c5a0c096a9716",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 980,
        "wires": [
            [
                "a7bcd6e259db9fd4",
                "c1ba2c10b05f59aa"
            ]
        ]
    },
    {
        "id": "a7bcd6e259db9fd4",
        "type": "debug",
        "z": "8eb51985a4dd8f36",
        "g": "8f5131c5e5423be3",
        "name": "update aeris api light",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1020,
        "wires": []
    },
    {
        "id": "0f23e93b12f677e8",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "ui out: aeris api (radar)",
        "mode": "link",
        "links": [
            "a988f83f33bfd63a"
        ],
        "x": 1215,
        "y": 1440,
        "wires": []
    },
    {
        "id": "907941bb210cad6e",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "c1e7d7a53540c7e9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1440,
        "wires": [
            [
                "0f23e93b12f677e8"
            ]
        ]
    },
    {
        "id": "91e2aa473ef97daa",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "ui out: aeris api (cloud)",
        "mode": "link",
        "links": [
            "a988f83f33bfd63a"
        ],
        "x": 1235,
        "y": 1860,
        "wires": []
    },
    {
        "id": "794ae3182c8d7982",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "5f18ba0bfe61afbc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1860,
        "wires": [
            [
                "91e2aa473ef97daa"
            ]
        ]
    },
    {
        "id": "f9ea79900120cba3",
        "type": "link out",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "ui out: aeris api (conditions)",
        "mode": "link",
        "links": [
            "a988f83f33bfd63a"
        ],
        "x": 855,
        "y": 2340,
        "wires": []
    },
    {
        "id": "ef723c8a178ec2d4",
        "type": "change",
        "z": "8eb51985a4dd8f36",
        "g": "de6cb0dace440ad6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 2340,
        "wires": [
            [
                "f9ea79900120cba3"
            ]
        ]
    },
    {
        "id": "e1b80b4f64dcf2a2",
        "type": "comment",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "All Sky Image",
        "info": "",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "12a41891aedf2a36",
        "type": "comment",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "all sky cpu temperature",
        "info": "",
        "x": 760,
        "y": 1240,
        "wires": []
    },
    {
        "id": "3d4bd9213539e83a",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/cputempc",
        "topic": "allsky/cputempc",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1320,
        "wires": [
            [
                "8e752726741f0b21"
            ]
        ]
    },
    {
        "id": "573a08e2b3628f5a",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 24,
        "width": 0,
        "height": 0,
        "name": "CPU Temp",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1530,
        "y": 1500,
        "wires": []
    },
    {
        "id": "e9f2b23fce77f520",
        "type": "subflow:7630d7f507ca85f8",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "x": 1270,
        "y": 1620,
        "wires": [
            [
                "573a08e2b3628f5a"
            ]
        ]
    },
    {
        "id": "4ec5aa34bcaf132c",
        "type": "subflow:0b6ce0b527d51f54",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "x": 1070,
        "y": 1620,
        "wires": [
            [
                "e9f2b23fce77f520"
            ]
        ]
    },
    {
        "id": "8e752726741f0b21",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cputemp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1420,
        "wires": [
            [
                "70da1be9bbf9d0e6"
            ]
        ]
    },
    {
        "id": "70da1be9bbf9d0e6",
        "type": "switch",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "C or F?",
        "property": "temperature_celsius",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 420,
        "y": 1500,
        "wires": [
            [
                "a6ae2d6df9ac45bd"
            ],
            [
                "5bdb738a332786a1"
            ],
            [
                "5bdb738a332786a1"
            ]
        ]
    },
    {
        "id": "a6ae2d6df9ac45bd",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "All Sky CPU (°C)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1500,
        "wires": [
            [
                "fdae513138729063"
            ]
        ]
    },
    {
        "id": "5bdb738a332786a1",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "All Sky CPU (°F)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1620,
        "wires": [
            [
                "e34f86306cb7da68"
            ]
        ]
    },
    {
        "id": "fdae513138729063",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cputemp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 1500,
        "wires": [
            [
                "2a248aec8c9f3d8a"
            ]
        ]
    },
    {
        "id": "e34f86306cb7da68",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cputemp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 1620,
        "wires": [
            [
                "4ec5aa34bcaf132c"
            ]
        ]
    },
    {
        "id": "6229e55e92ae6014",
        "type": "link in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "Update Dew Point Display Units",
        "links": [
            "84d96db8fb60c915"
        ],
        "x": 255,
        "y": 1560,
        "wires": [
            [
                "70da1be9bbf9d0e6"
            ]
        ]
    },
    {
        "id": "2a248aec8c9f3d8a",
        "type": "subflow:7ad337185da278c4",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "x": 1110,
        "y": 1500,
        "wires": [
            [
                "573a08e2b3628f5a"
            ]
        ]
    },
    {
        "id": "8c9e42f3fbbbc226",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Safety Label",
        "label": "",
        "format": "Safety",
        "layout": "row-center",
        "className": "",
        "x": 170,
        "y": 3360,
        "wires": []
    },
    {
        "id": "7a1f3607ac67f5f9",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "2dd7db31dc1fc228",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Sun & Moon Label",
        "label": "",
        "format": "Sun & Moon",
        "layout": "row-center",
        "className": "",
        "x": 210,
        "y": 3420,
        "wires": []
    },
    {
        "id": "159e4b8605c022d5",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/cpupercent",
        "topic": "allsky/cpupercent",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 3060,
        "wires": [
            [
                "1dbc6164b36ebb7a"
            ]
        ]
    },
    {
        "id": "1dbc6164b36ebb7a",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 25,
        "width": 0,
        "height": 0,
        "name": "CPU Percent",
        "label": "All Sky CPU (%)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 430,
        "y": 3060,
        "wires": []
    },
    {
        "id": "a63f12ac42671016",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/diskusedpct",
        "topic": "allsky/diskusedpct",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 3160,
        "wires": [
            [
                "143e6e1b52897c70"
            ]
        ]
    },
    {
        "id": "143e6e1b52897c70",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 26,
        "width": 0,
        "height": 0,
        "name": "Disk Percent",
        "label": "All Sky Disk (%)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 430,
        "y": 3160,
        "wires": []
    },
    {
        "id": "7d643263d6db9533",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/sensortempc",
        "topic": "allsky/sensortempc",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1980,
        "wires": [
            [
                "c7573a125adbdce1"
            ]
        ]
    },
    {
        "id": "ba284bc65fd64709",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 23,
        "width": 0,
        "height": 0,
        "name": "Sensor Temp",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1510,
        "y": 2160,
        "wires": []
    },
    {
        "id": "116fb56ec3efd85a",
        "type": "subflow:7630d7f507ca85f8",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "x": 1250,
        "y": 2280,
        "wires": [
            [
                "ba284bc65fd64709"
            ]
        ]
    },
    {
        "id": "a9ed0a5954eea513",
        "type": "subflow:0b6ce0b527d51f54",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "x": 1050,
        "y": 2280,
        "wires": [
            [
                "116fb56ec3efd85a"
            ]
        ]
    },
    {
        "id": "c7573a125adbdce1",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensortemp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 2080,
        "wires": [
            [
                "eb6d13bced5d6c5e"
            ]
        ]
    },
    {
        "id": "eb6d13bced5d6c5e",
        "type": "switch",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "C or F?",
        "property": "temperature_celsius",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 400,
        "y": 2160,
        "wires": [
            [
                "de51b40a42fe468e"
            ],
            [
                "aa44a3a9aa5cd74a"
            ],
            [
                "aa44a3a9aa5cd74a"
            ]
        ]
    },
    {
        "id": "de51b40a42fe468e",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "All Sky Sensor (°C)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 2160,
        "wires": [
            [
                "850b7d24ab943bc9"
            ]
        ]
    },
    {
        "id": "aa44a3a9aa5cd74a",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "All Sky Sensor (°F)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2280,
        "wires": [
            [
                "b6bee4f88b238c5e"
            ]
        ]
    },
    {
        "id": "850b7d24ab943bc9",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sensortemp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2160,
        "wires": [
            [
                "49087b05038b6147"
            ]
        ]
    },
    {
        "id": "b6bee4f88b238c5e",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sensortemp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2280,
        "wires": [
            [
                "a9ed0a5954eea513"
            ]
        ]
    },
    {
        "id": "9bb3b9ec70b4c3e1",
        "type": "link in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "Update Dew Point Display Units",
        "links": [
            "84d96db8fb60c915"
        ],
        "x": 235,
        "y": 2220,
        "wires": [
            [
                "eb6d13bced5d6c5e"
            ]
        ]
    },
    {
        "id": "49087b05038b6147",
        "type": "subflow:7ad337185da278c4",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "x": 1090,
        "y": 2160,
        "wires": [
            [
                "ba284bc65fd64709"
            ]
        ]
    },
    {
        "id": "40b13e6d500a2f80",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/exposureus",
        "topic": "allsky/exposureus",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 2620,
        "wires": [
            [
                "2ca821d49725f975",
                "787885abb831634e"
            ]
        ]
    },
    {
        "id": "37205f483c0cc542",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "d": true,
        "group": "e14ef026db2f9ff2",
        "order": 21,
        "width": 0,
        "height": 0,
        "name": "All Sky Exposure",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 2620,
        "wires": []
    },
    {
        "id": "2ca821d49725f975",
        "type": "function",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "convert to most convenient unit",
        "func": "exposure = msg.payload;\nif (exposure >= 1000000) {\n  msg.payload /= 1000000;\n  msg.label = \"All Sky Exposure (s)\";\n}\nelse if (exposure > 1000) {\n  msg.payload /= 1000;\n  msg.label = \"All Sky Exposure (ms)\";\n}\nelse {\n  msg.label = \"All Sky Exposure (μs)\";\n}\n\nflow.set(\"allsky_exposure\", msg.payload);\nflow.set(\"allsky_exposure_label\", msg.label);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2620,
        "wires": [
            [
                "25b17ffd64707262",
                "37205f483c0cc542"
            ]
        ]
    },
    {
        "id": "787885abb831634e",
        "type": "debug",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "exposure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 2560,
        "wires": []
    },
    {
        "id": "b3dd55d278bf474d",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/gain",
        "topic": "allsky/gain",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 2760,
        "wires": [
            [
                "035fc88f1eec7041"
            ]
        ]
    },
    {
        "id": "1b120e1b198083f7",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "d": true,
        "group": "e14ef026db2f9ff2",
        "order": 22,
        "width": 0,
        "height": 0,
        "name": "All Sky Gain",
        "label": "Gain",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 2760,
        "wires": []
    },
    {
        "id": "db48d6a5e78c5fed",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/image",
        "topic": "allsky/image",
        "qos": "0",
        "datatype": "base64",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "685ceaf612fc64ea",
                "7cce1dd511fac1e0",
                "f6f37df3801873c0",
                "9c82fe0528eaaf6e"
            ]
        ]
    },
    {
        "id": "685ceaf612fc64ea",
        "type": "debug",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "image",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "f6f37df3801873c0",
        "type": "trigger",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "op1": "1",
        "op2": "false",
        "op1type": "str",
        "op2type": "bool",
        "duration": "300",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "1258d0eb440ce6ac"
            ]
        ]
    },
    {
        "id": "7cce1dd511fac1e0",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "1258d0eb440ce6ac"
            ]
        ]
    },
    {
        "id": "57d1672f41954a13",
        "type": "mqtt in",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "allsky/exposuretime",
        "topic": "allsky/exposuretime",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 440,
        "wires": [
            [
                "e0982bcf5d58b35c"
            ]
        ]
    },
    {
        "id": "25b17ffd64707262",
        "type": "debug",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "adjusted exposure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2540,
        "wires": []
    },
    {
        "id": "035fc88f1eec7041",
        "type": "subflow:7630d7f507ca85f8",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "x": 380,
        "y": 2760,
        "wires": [
            [
                "c9507ef53f66cac3"
            ]
        ]
    },
    {
        "id": "02f6bf9827357302",
        "type": "status",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "mqtt status",
        "scope": [
            "57d1672f41954a13"
        ],
        "x": 210,
        "y": 2900,
        "wires": [
            [
                "43d351279a6e64d0"
            ]
        ]
    },
    {
        "id": "6c4c345dd91a38e7",
        "type": "debug",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "mqtt status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 2960,
        "wires": []
    },
    {
        "id": "e611d9073b6aa070",
        "type": "switch",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "node-red:common.status.connected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 2900,
        "wires": [
            [
                "53ae85fa268d930a"
            ],
            [
                "46864fb4f6f13870"
            ]
        ]
    },
    {
        "id": "c2842df92b4f0024",
        "type": "ui_led",
        "z": "fdfc9a4d8ebd2c5e",
        "order": 18,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "mqtt",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "MQTT Online",
        "x": 1130,
        "y": 2860,
        "wires": []
    },
    {
        "id": "53ae85fa268d930a",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2840,
        "wires": [
            [
                "c2842df92b4f0024"
            ]
        ]
    },
    {
        "id": "46864fb4f6f13870",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2920,
        "wires": [
            [
                "c2842df92b4f0024",
                "d4e6466ed7b7ea04"
            ]
        ]
    },
    {
        "id": "43d351279a6e64d0",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "status.text",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 2900,
        "wires": [
            [
                "e611d9073b6aa070",
                "6c4c345dd91a38e7"
            ]
        ]
    },
    {
        "id": "d4e6466ed7b7ea04",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MQTT is offline",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 2960,
        "wires": [
            [
                "6dcf94ad690e2187"
            ]
        ]
    },
    {
        "id": "6dcf94ad690e2187",
        "type": "link out",
        "z": "fdfc9a4d8ebd2c5e",
        "d": true,
        "name": "mqtt offline alert to pushover",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1335,
        "y": 2980,
        "wires": []
    },
    {
        "id": "dc330597b8a37b2d",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "Systems Label",
        "label": "",
        "format": "Systems",
        "layout": "row-center",
        "className": "",
        "x": 420,
        "y": 3360,
        "wires": []
    },
    {
        "id": "cbaf3a279b55ecbc",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "Services Label",
        "label": "",
        "format": "Services",
        "layout": "row-center",
        "className": "",
        "x": 640,
        "y": 3360,
        "wires": []
    },
    {
        "id": "6d1b2d67fec7f624",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "2dd7db31dc1fc228",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "Weather Station Health",
        "label": "",
        "format": "Weather Station Health",
        "layout": "row-center",
        "className": "",
        "x": 870,
        "y": 3360,
        "wires": []
    },
    {
        "id": "9c82fe0528eaaf6e",
        "type": "template",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"allsky_outer_container\">\n    <div class=\"allsky_container\">\n        <div class=\"allsky_box\">\n            <img\n                margin: 0 auto;\n                margin-top: 5px;\n                width=\"630\"\n                height=\"525\"\n                class=\"cropped\"\n                src=\"data:image/jpg;base64,{{{payload}}}\"\n            >\n        </div>\n        <div class=\"allsky_box allsky_overlay\">\n            <div class=\"allsky_text\">\n                Image Time: {{flow.allsky_last_image_time}}\n            </div>\n             <div class=\"allsky_text\">\n                {{flow.allsky_exposure_label}}: {{flow.allsky_exposure}}\n            </div>   \n            <div class=\"allsky_text\">\n                Gain: {{flow.allsky_gain}}\n            </div>            \n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "559983e8e89acfc0"
            ]
        ]
    },
    {
        "id": "e0982bcf5d58b35c",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "allsky_last_image_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c9507ef53f66cac3",
        "type": "change",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "allsky_gain",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 2760,
        "wires": [
            [
                "1b120e1b198083f7"
            ]
        ]
    },
    {
        "id": "8e40c260072d54e3",
        "type": "ui_text",
        "z": "fdfc9a4d8ebd2c5e",
        "group": "e14ef026db2f9ff2",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "All Sky Health Label",
        "label": "",
        "format": "All Sky Health",
        "layout": "row-center",
        "className": "",
        "x": 660,
        "y": 3420,
        "wires": []
    },
    {
        "id": "559983e8e89acfc0",
        "type": "link out",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "ui out: all sky image",
        "mode": "link",
        "links": [
            "c747a2938c598f58"
        ],
        "x": 535,
        "y": 240,
        "wires": []
    },
    {
        "id": "1258d0eb440ce6ac",
        "type": "link out",
        "z": "fdfc9a4d8ebd2c5e",
        "name": "ui out: all sky service status",
        "mode": "link",
        "links": [
            "54d305147cfb862a"
        ],
        "x": 535,
        "y": 320,
        "wires": []
    },
    {
        "id": "8d5ec3b4bef19e83",
        "type": "fs-ops-dir",
        "z": "cb98bbe7ef358b99",
        "name": "get files in videos",
        "path": "/statichttp/allsky/videos",
        "pathType": "str",
        "filter": "*.mp4",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "d551ceef5631bbc0"
            ]
        ]
    },
    {
        "id": "50c219df339403b3",
        "type": "fs-ops-dir",
        "z": "cb98bbe7ef358b99",
        "name": "get files in keograms",
        "path": "/statichttp/allsky/keograms",
        "pathType": "str",
        "filter": "*.jpg",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 520,
        "y": 200,
        "wires": [
            [
                "d551ceef5631bbc0"
            ]
        ]
    },
    {
        "id": "32a34d4d770a3f7b",
        "type": "fs-ops-dir",
        "z": "cb98bbe7ef358b99",
        "name": "get files in startrails",
        "path": "/statichttp/allsky/startrails",
        "pathType": "str",
        "filter": "*.jpg",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 510,
        "y": 260,
        "wires": [
            [
                "d551ceef5631bbc0"
            ]
        ]
    },
    {
        "id": "eef8514058594e3a",
        "type": "ui_dropdown",
        "z": "cb98bbe7ef358b99",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Show",
        "group": "a3e97eae6bfe1d3f",
        "order": 1,
        "width": "6",
        "height": "2",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "videos",
                "value": "videos",
                "type": "str"
            },
            {
                "label": "keograms",
                "value": "keograms",
                "type": "str"
            },
            {
                "label": "star trails",
                "value": "startrails",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "200be3db02a6b426"
            ]
        ]
    },
    {
        "id": "200be3db02a6b426",
        "type": "switch",
        "z": "cb98bbe7ef358b99",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "videos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "keograms",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "startrails",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 200,
        "wires": [
            [
                "8d5ec3b4bef19e83"
            ],
            [
                "50c219df339403b3"
            ],
            [
                "32a34d4d770a3f7b"
            ]
        ]
    },
    {
        "id": "8d9529e94dda3d10",
        "type": "ui_list",
        "z": "cb98bbe7ef358b99",
        "group": "a3e97eae6bfe1d3f",
        "name": "file list",
        "order": 2,
        "width": "6",
        "height": "38",
        "lineType": "one",
        "actionType": "click",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "ee864cdfc818a8eb",
                "eef3f032fa481799"
            ]
        ]
    },
    {
        "id": "d551ceef5631bbc0",
        "type": "change",
        "z": "cb98bbe7ef358b99",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "files",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 200,
        "wires": [
            [
                "74ffa33431e7b0fb"
            ]
        ]
    },
    {
        "id": "eef3f032fa481799",
        "type": "debug",
        "z": "cb98bbe7ef358b99",
        "name": "selected file",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 140,
        "wires": []
    },
    {
        "id": "ee864cdfc818a8eb",
        "type": "function",
        "z": "cb98bbe7ef358b99",
        "name": "get the pathname ",
        "func": "var filename = msg.payload.title;\nvar start = filename.charAt(0);\n\nif (start == \"a\") {\n    path = \"/allsky/videos/\" + filename;\n    kind = \"video\";\n    videoDisplay = \"block\";\n    imageDisplay = \"none\";\n}\nelse if (start == \"k\") {\n    path = \"/allsky/keograms/\" + filename;    \n    kind = \"image\";\n    videoDisplay = \"block\";\n    imageDisplay = \"none\";   \n}\nelse if (start == \"s\") {\n    path = \"/allsky/startrails/\" + filename; \n    kind = \"image\";\n    videoDisplay = \"none\";\n    imageDisplay = \"block\";\n}\n\nmsg.pathname = path;\nmsg.kind = kind;\nmsg.videoDisplay = videoDisplay;\nmsg.imageDisipilay = imageDisplay;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 200,
        "wires": [
            [
                "39154ab7f02ab6f0",
                "b669b40363fc28c1"
            ]
        ]
    },
    {
        "id": "b669b40363fc28c1",
        "type": "ui_template",
        "z": "cb98bbe7ef358b99",
        "group": "b356a2afa0c49910",
        "name": "history template",
        "order": 10,
        "width": "24",
        "height": "40",
        "format": "<script>\n    (function(scope){\n        scope.$watch('msg', function(msg) {\n            if(typeof(msg) === \"object\") {\n                \n                var path = msg.pathname;\n                var kind = msg.kind;\n                \n                console.log(\"pathname is \" + path);\n                console.log(\"kind is \" + kind);\n                \n                if (kind == 'image') {\n                    scope.imageHidden = 'block';\n                    scope.videoHidden = 'none';\n                }\n                else if (kind == 'video') {\n                    scope.imageHidden = 'none';\n                    scope.videoHidden = 'block';\n                }\n                else {\n                    console.log(\"unknown kind \" + kind);\n                }\n                \n                scope.pathname = path;\n                \n                console.log(\"video hidden = \" + scope.videoHidden);\n                console.log(\"image hidden = \" + scope.imageHidden);\n                \n            }\n    \t});\n    })(scope);\n</script>\n<style>\n\n</style>\n\n<div class=\"image_container\">\n    <img style=\"display: {{imageHidden}}; max-height: 1074px; max-width: 1278px; height: auto; width: auto; \" src=\"{{pathname}}\" />\n    <video style=\"display: {{videoHidden}}; width: 100%; max-width: 1280: height: auto\" controls autoplay src=\"{{pathname}}\">\n    </video>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1500,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "39154ab7f02ab6f0",
        "type": "debug",
        "z": "cb98bbe7ef358b99",
        "name": "full pathname",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 140,
        "wires": []
    },
    {
        "id": "74ffa33431e7b0fb",
        "type": "sort",
        "z": "cb98bbe7ef358b99",
        "name": "",
        "order": "descending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 970,
        "y": 200,
        "wires": [
            [
                "8d9529e94dda3d10"
            ]
        ]
    },
    {
        "id": "e150a2d8e1453744",
        "type": "http in",
        "z": "7456a56ca14e1b6c",
        "g": "a2163ad92881a024",
        "name": "supported actions",
        "url": "/api/v1/:deviceName/:deviceNumber/supportedactions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "366e365488b92507",
                "7c0a85bba0eef45b"
            ]
        ]
    },
    {
        "id": "366e365488b92507",
        "type": "debug",
        "z": "7456a56ca14e1b6c",
        "g": "a2163ad92881a024",
        "name": "Supported Actions IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "7c0a85bba0eef45b",
        "type": "function",
        "z": "7456a56ca14e1b6c",
        "g": "a2163ad92881a024",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    Value: []\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 120,
        "wires": [
            [
                "8568fb501dca088e"
            ]
        ]
    },
    {
        "id": "18abecfd1cdd350e",
        "type": "http response",
        "z": "7456a56ca14e1b6c",
        "g": "a2163ad92881a024",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "5f01a0567aa61e51",
        "type": "json",
        "z": "7456a56ca14e1b6c",
        "g": "a2163ad92881a024",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 120,
        "wires": [
            [
                "18abecfd1cdd350e",
                "a59d17612c2c3a15"
            ]
        ]
    },
    {
        "id": "8568fb501dca088e",
        "type": "subflow:63b8acad88eafa84",
        "z": "7456a56ca14e1b6c",
        "g": "a2163ad92881a024",
        "name": "",
        "x": 670,
        "y": 120,
        "wires": [
            [
                "5f01a0567aa61e51"
            ]
        ]
    },
    {
        "id": "a59d17612c2c3a15",
        "type": "debug",
        "z": "7456a56ca14e1b6c",
        "g": "a2163ad92881a024",
        "name": "Supported Actions OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 80,
        "wires": []
    },
    {
        "id": "feb8121afd9f5995",
        "type": "http in",
        "z": "7456a56ca14e1b6c",
        "g": "f91d7d6be39dc428",
        "name": " driver version",
        "url": "/api/v1/:deviceName/:deviceNumber/driverversion",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "ef3c6ab2b7f146b1",
                "ada25ea9162dddf9"
            ]
        ]
    },
    {
        "id": "ef3c6ab2b7f146b1",
        "type": "debug",
        "z": "7456a56ca14e1b6c",
        "g": "f91d7d6be39dc428",
        "name": "Driver Version IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 220,
        "wires": []
    },
    {
        "id": "ada25ea9162dddf9",
        "type": "function",
        "z": "7456a56ca14e1b6c",
        "g": "f91d7d6be39dc428",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": global.get(\"version\")\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            [
                "70c8c648c8cd86eb"
            ]
        ]
    },
    {
        "id": "da91afc7e1391146",
        "type": "http response",
        "z": "7456a56ca14e1b6c",
        "g": "f91d7d6be39dc428",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1030,
        "y": 260,
        "wires": []
    },
    {
        "id": "fef6925e4decf341",
        "type": "json",
        "z": "7456a56ca14e1b6c",
        "g": "f91d7d6be39dc428",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 260,
        "wires": [
            [
                "da91afc7e1391146",
                "4c42bea0e6b276b7"
            ]
        ]
    },
    {
        "id": "4c42bea0e6b276b7",
        "type": "debug",
        "z": "7456a56ca14e1b6c",
        "g": "f91d7d6be39dc428",
        "name": "Driver Version OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 220,
        "wires": []
    },
    {
        "id": "70c8c648c8cd86eb",
        "type": "subflow:63b8acad88eafa84",
        "z": "7456a56ca14e1b6c",
        "g": "f91d7d6be39dc428",
        "name": "",
        "x": 670,
        "y": 260,
        "wires": [
            [
                "fef6925e4decf341"
            ]
        ]
    },
    {
        "id": "a1c588d6073011d3",
        "type": "http in",
        "z": "7456a56ca14e1b6c",
        "g": "f742cfb5ad1ca98e",
        "name": " interface version",
        "url": "/api/v1/:deviceName/:deviceNumber/interfaceversion",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "42d967d57565f4da",
                "55a520f8bc4b58ee"
            ]
        ]
    },
    {
        "id": "42d967d57565f4da",
        "type": "debug",
        "z": "7456a56ca14e1b6c",
        "g": "f742cfb5ad1ca98e",
        "name": "Driver Interface Version IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 360,
        "wires": []
    },
    {
        "id": "55a520f8bc4b58ee",
        "type": "function",
        "z": "7456a56ca14e1b6c",
        "g": "f742cfb5ad1ca98e",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": 1\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 400,
        "wires": [
            [
                "a08850189a78c6d3"
            ]
        ]
    },
    {
        "id": "a02932ab34cb2bc9",
        "type": "http response",
        "z": "7456a56ca14e1b6c",
        "g": "f742cfb5ad1ca98e",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "a5e6d8f99597ed52",
        "type": "json",
        "z": "7456a56ca14e1b6c",
        "g": "f742cfb5ad1ca98e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 400,
        "wires": [
            [
                "a02932ab34cb2bc9",
                "3b1ed9b954a2eeb7"
            ]
        ]
    },
    {
        "id": "3b1ed9b954a2eeb7",
        "type": "debug",
        "z": "7456a56ca14e1b6c",
        "g": "f742cfb5ad1ca98e",
        "name": "Driver Interface Version OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 360,
        "wires": []
    },
    {
        "id": "a08850189a78c6d3",
        "type": "subflow:63b8acad88eafa84",
        "z": "7456a56ca14e1b6c",
        "g": "f742cfb5ad1ca98e",
        "name": "",
        "x": 670,
        "y": 400,
        "wires": [
            [
                "a5e6d8f99597ed52"
            ]
        ]
    },
    {
        "id": "1ceaaf5285761e8d",
        "type": "udp in",
        "z": "aebaef7bc30ec5d1",
        "g": "e291126cd41a8571",
        "name": "listen for alpaca discovery  broadcast",
        "iface": "",
        "port": "32227",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "027ebed2a6993467",
                "67e1b511b66fd08f"
            ]
        ]
    },
    {
        "id": "027ebed2a6993467",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "e291126cd41a8571",
        "name": "discovery in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 200,
        "wires": []
    },
    {
        "id": "67e1b511b66fd08f",
        "type": "function",
        "z": "aebaef7bc30ec5d1",
        "g": "e291126cd41a8571",
        "name": "configured devices response",
        "func": "msg.payload = {\n    \"AlpacaPort\": 80\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 140,
        "wires": [
            [
                "0034ef85b7874dad"
            ]
        ]
    },
    {
        "id": "f6b01d91f2f2733d",
        "type": "udp out",
        "z": "aebaef7bc30ec5d1",
        "g": "e291126cd41a8571",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1030,
        "y": 140,
        "wires": []
    },
    {
        "id": "3b744d808bf151b5",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "e291126cd41a8571",
        "name": "discovery out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 200,
        "wires": []
    },
    {
        "id": "0034ef85b7874dad",
        "type": "json",
        "z": "aebaef7bc30ec5d1",
        "g": "e291126cd41a8571",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 140,
        "wires": [
            [
                "f6b01d91f2f2733d",
                "3b744d808bf151b5"
            ]
        ]
    },
    {
        "id": "917987c6da8c3277",
        "type": "comment",
        "z": "aebaef7bc30ec5d1",
        "g": "e291126cd41a8571",
        "name": "Handle Broadcast",
        "info": "The client does a broadcast on port 32227 and we respond with the port number where our Alpaca driver(s) are listening.",
        "x": 290,
        "y": 200,
        "wires": []
    },
    {
        "id": "7c9e22f581e35eb5",
        "type": "http in",
        "z": "aebaef7bc30ec5d1",
        "g": "5d6e4e094ec46bde",
        "name": "api versions",
        "url": "/management/apiversions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "3fc391a47a807621",
                "cf52a4805d7b5ee7"
            ]
        ]
    },
    {
        "id": "3fc391a47a807621",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "5d6e4e094ec46bde",
        "name": "api version in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 300,
        "wires": []
    },
    {
        "id": "6a971d409c9c737b",
        "type": "http in",
        "z": "aebaef7bc30ec5d1",
        "g": "e6ac97ad456cdc8b",
        "name": "management v1 description",
        "url": "/management/v1/description",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 480,
        "wires": [
            [
                "449714b1c0aa9e23",
                "dce827e79b1c9d72"
            ]
        ]
    },
    {
        "id": "679a57ab73591499",
        "type": "http in",
        "z": "aebaef7bc30ec5d1",
        "g": "c1442f4a6ef5a029",
        "name": "management v1 configured devices",
        "url": "/management/v1/configureddevices",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 620,
        "wires": [
            [
                "961a5ccf1582f981",
                "500a7ffb05ab2c03"
            ]
        ]
    },
    {
        "id": "449714b1c0aa9e23",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "e6ac97ad456cdc8b",
        "name": "management description in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 440,
        "wires": []
    },
    {
        "id": "961a5ccf1582f981",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "c1442f4a6ef5a029",
        "name": "management configured devices in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 580,
        "wires": []
    },
    {
        "id": "dce827e79b1c9d72",
        "type": "function",
        "z": "aebaef7bc30ec5d1",
        "g": "e6ac97ad456cdc8b",
        "name": "configured devices response",
        "func": "value1 = {\n    \"ServerName\": \"Imaging Dashboard Safety Monitor\",\n    \"Location\": \"Maurertown, Virginia\",\n    \"Manufacturer\": \"Linda Thomas-Fowler\",\n    \"Version\": \"2.1.0\"\n};\n\nresponse = {\n    \"ClientTransactionID\": 0,\n    \"Value\": value1\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 480,
        "wires": [
            [
                "611a4ce1660c62ce"
            ]
        ]
    },
    {
        "id": "1ab738c16a2b0e9e",
        "type": "http response",
        "z": "aebaef7bc30ec5d1",
        "g": "e6ac97ad456cdc8b",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1190,
        "y": 480,
        "wires": []
    },
    {
        "id": "cf52a4805d7b5ee7",
        "type": "function",
        "z": "aebaef7bc30ec5d1",
        "g": "5d6e4e094ec46bde",
        "name": "configure devices response",
        "func": "response = {\n    \"ClientTransactionID\": 0,\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": [ 1 ]\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "34b1d583441a8201"
            ]
        ]
    },
    {
        "id": "500a7ffb05ab2c03",
        "type": "function",
        "z": "aebaef7bc30ec5d1",
        "g": "c1442f4a6ef5a029",
        "name": "configured devices response",
        "func": "sm = {\n    \"DeviceName\": \"Imaging Dashboard Safety Monitor\",\n    \"DeviceType\": \"safetymonitor\",\n    \"DeviceNumber\": 0,\n    \"UniqueID\": \"astrodash-safetymonitor-0\"\n};\n\noc = {\n    \"DeviceName\": \"Imaging Dashboard Observing Conditions\",\n    \"DeviceType\": \"observingconditions\",\n    \"DeviceNumber\": 0,\n    \"UniqueID\": \"astrodash-observingconditions-0\"\n};\n\nresponse = {\n    \"Value\": [ sm, oc ],\n    \"ClientTransactionID\": 0,\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            [
                "6b240c454541bbcd"
            ]
        ]
    },
    {
        "id": "7a3af3fccf937acb",
        "type": "http response",
        "z": "aebaef7bc30ec5d1",
        "g": "5d6e4e094ec46bde",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1170,
        "y": 340,
        "wires": []
    },
    {
        "id": "bf7da4240e8a2fdc",
        "type": "http response",
        "z": "aebaef7bc30ec5d1",
        "g": "c1442f4a6ef5a029",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1230,
        "y": 620,
        "wires": []
    },
    {
        "id": "29212eda15b03065",
        "type": "json",
        "z": "aebaef7bc30ec5d1",
        "g": "5d6e4e094ec46bde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 340,
        "wires": [
            [
                "7a3af3fccf937acb",
                "f070613924b2538b"
            ]
        ]
    },
    {
        "id": "151b5a3cbb95bc2d",
        "type": "json",
        "z": "aebaef7bc30ec5d1",
        "g": "e6ac97ad456cdc8b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 480,
        "wires": [
            [
                "1ab738c16a2b0e9e",
                "b392e9083024ed04"
            ]
        ]
    },
    {
        "id": "91f8348d920dd7c9",
        "type": "json",
        "z": "aebaef7bc30ec5d1",
        "g": "c1442f4a6ef5a029",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1070,
        "y": 620,
        "wires": [
            [
                "bf7da4240e8a2fdc",
                "02788855b597fef8"
            ]
        ]
    },
    {
        "id": "f070613924b2538b",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "5d6e4e094ec46bde",
        "name": "api version out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 300,
        "wires": []
    },
    {
        "id": "b392e9083024ed04",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "e6ac97ad456cdc8b",
        "name": "management description out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 440,
        "wires": []
    },
    {
        "id": "02788855b597fef8",
        "type": "debug",
        "z": "aebaef7bc30ec5d1",
        "g": "c1442f4a6ef5a029",
        "name": "management configured devices out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "34b1d583441a8201",
        "type": "subflow:63b8acad88eafa84",
        "z": "aebaef7bc30ec5d1",
        "g": "5d6e4e094ec46bde",
        "name": "",
        "x": 750,
        "y": 340,
        "wires": [
            [
                "29212eda15b03065"
            ]
        ]
    },
    {
        "id": "611a4ce1660c62ce",
        "type": "subflow:63b8acad88eafa84",
        "z": "aebaef7bc30ec5d1",
        "g": "e6ac97ad456cdc8b",
        "name": "",
        "x": 850,
        "y": 480,
        "wires": [
            [
                "151b5a3cbb95bc2d"
            ]
        ]
    },
    {
        "id": "6b240c454541bbcd",
        "type": "subflow:63b8acad88eafa84",
        "z": "aebaef7bc30ec5d1",
        "g": "c1442f4a6ef5a029",
        "name": "",
        "x": 870,
        "y": 620,
        "wires": [
            [
                "91f8348d920dd7c9"
            ]
        ]
    },
    {
        "id": "15f5ce4b2408d066",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "db7f269c30e1f6ac",
        "name": "observing conditions connected",
        "url": "/api/v1/observingconditions/0/connected",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "a4e1fbf93d191908",
                "8bdf3c8737c53602"
            ]
        ],
        "info": "This is the request the client uses to connect to the safety monitor."
    },
    {
        "id": "0bb2cf897be689e2",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "db7f269c30e1f6ac",
        "name": "Connected (Put) OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 60,
        "wires": []
    },
    {
        "id": "a4e1fbf93d191908",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "db7f269c30e1f6ac",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\"\n}\n\nflow.set(\"connected\", msg.payload.Connected);\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 100,
        "wires": [
            [
                "fd506a93034f6eb9"
            ]
        ]
    },
    {
        "id": "f0bbeb0c50148a1a",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "db7f269c30e1f6ac",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "00436250de6130b1",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "db7f269c30e1f6ac",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "f0bbeb0c50148a1a",
                "0bb2cf897be689e2"
            ]
        ]
    },
    {
        "id": "8bdf3c8737c53602",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "db7f269c30e1f6ac",
        "name": "Connected (Put) IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "fd506a93034f6eb9",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "db7f269c30e1f6ac",
        "name": "",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "00436250de6130b1"
            ]
        ]
    },
    {
        "id": "98eaa402c3668730",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "fcd2f651313b6d07",
        "name": "observing conditions connected",
        "url": "/api/v1/observingconditions/0/connected",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 380,
        "wires": [
            [
                "e3c713360b4d1775",
                "1f1fe9c5541d8f43"
            ]
        ],
        "info": "This is the request the client uses to connect to the safety monitor."
    },
    {
        "id": "e3c713360b4d1775",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "fcd2f651313b6d07",
        "name": "Connected (GET) IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 340,
        "wires": []
    },
    {
        "id": "1f1fe9c5541d8f43",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "fcd2f651313b6d07",
        "name": "configured devices response",
        "func": "flow.set(\"connected\", msg.payload.Connected);\n\nresponse = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 380,
        "wires": [
            [
                "240d1b2253f3eedb"
            ]
        ]
    },
    {
        "id": "d4209873173572eb",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "fcd2f651313b6d07",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 380,
        "wires": []
    },
    {
        "id": "613d14afb43f5b3c",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "fcd2f651313b6d07",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 380,
        "wires": [
            [
                "d4209873173572eb",
                "b8a38b9c14ad7452"
            ]
        ]
    },
    {
        "id": "b8a38b9c14ad7452",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "fcd2f651313b6d07",
        "name": "Connected (Get) OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 340,
        "wires": []
    },
    {
        "id": "240d1b2253f3eedb",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "fcd2f651313b6d07",
        "name": "",
        "x": 730,
        "y": 380,
        "wires": [
            [
                "613d14afb43f5b3c"
            ]
        ]
    },
    {
        "id": "f1311dccd096bfa2",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "0bd7ae649763078d",
        "name": "observing conditions description",
        "url": "/api/v1/observingconditions/0/description",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "33972e9460197778",
                "f9616e9e3afc6579"
            ]
        ]
    },
    {
        "id": "33972e9460197778",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "0bd7ae649763078d",
        "name": "GET description IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 200,
        "wires": []
    },
    {
        "id": "f9616e9e3afc6579",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "0bd7ae649763078d",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": \"Return current weather data from the imaging dashboard\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 240,
        "wires": [
            [
                "bc476fa9de77a1e1"
            ]
        ]
    },
    {
        "id": "652370c13f9c7139",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "0bd7ae649763078d",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 240,
        "wires": []
    },
    {
        "id": "ccd511e12b2cdf02",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "0bd7ae649763078d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 240,
        "wires": [
            [
                "652370c13f9c7139",
                "53c17db384aae8c4"
            ]
        ]
    },
    {
        "id": "53c17db384aae8c4",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "0bd7ae649763078d",
        "name": "GET description OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 200,
        "wires": []
    },
    {
        "id": "bc476fa9de77a1e1",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "0bd7ae649763078d",
        "name": "",
        "x": 730,
        "y": 240,
        "wires": [
            [
                "ccd511e12b2cdf02"
            ]
        ]
    },
    {
        "id": "b4110580f3268bbf",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "311003ebc544e72a",
        "name": "observing conditions driver info",
        "url": "/api/v1/observingconditions/0/driverinfo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "3ad244586095b04c",
                "f6f22f7b53c165d7"
            ]
        ]
    },
    {
        "id": "3ad244586095b04c",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "311003ebc544e72a",
        "name": "Driver Info IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 480,
        "wires": []
    },
    {
        "id": "f6f22f7b53c165d7",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "311003ebc544e72a",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": \"Imaging Dashboard Safety Monitor\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 520,
        "wires": [
            [
                "79c57348c71ea6d3"
            ]
        ]
    },
    {
        "id": "bda954170525a306",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "311003ebc544e72a",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 520,
        "wires": []
    },
    {
        "id": "2c754b9b18ee14aa",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "311003ebc544e72a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 520,
        "wires": [
            [
                "bda954170525a306",
                "c1deeb62e060787c"
            ]
        ]
    },
    {
        "id": "c1deeb62e060787c",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "311003ebc544e72a",
        "name": "Driver Info OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 480,
        "wires": []
    },
    {
        "id": "79c57348c71ea6d3",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "311003ebc544e72a",
        "name": "",
        "x": 730,
        "y": 520,
        "wires": [
            [
                "2c754b9b18ee14aa"
            ]
        ]
    },
    {
        "id": "3eac17f866f1d2b4",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "187c307d6692775e",
        "name": "observing conditions  name",
        "url": "/api/v1/observingconditions/0/name",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "b6e7c68807e015c4",
                "ee34681fa28e5910"
            ]
        ]
    },
    {
        "id": "b6e7c68807e015c4",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "187c307d6692775e",
        "name": "Name IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 620,
        "wires": []
    },
    {
        "id": "ee34681fa28e5910",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "187c307d6692775e",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": \"Imaging Dashboard Safety Monitor\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "3a6e3cd8f422c7cc"
            ]
        ]
    },
    {
        "id": "804dd12ac60a60d6",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "187c307d6692775e",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "364147eb3af3b9d0",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "187c307d6692775e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 660,
        "wires": [
            [
                "804dd12ac60a60d6",
                "c8de58126855ac9c"
            ]
        ]
    },
    {
        "id": "c8de58126855ac9c",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "187c307d6692775e",
        "name": "Name OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 620,
        "wires": []
    },
    {
        "id": "3a6e3cd8f422c7cc",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "187c307d6692775e",
        "name": "",
        "x": 730,
        "y": 660,
        "wires": [
            [
                "364147eb3af3b9d0"
            ]
        ]
    },
    {
        "id": "3de6642782117e6d",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "7e7c3e98cbbb41e8",
        "name": "average period",
        "url": "/api/v1/observingconditions/0/averageperiod",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "c92c236018505e32",
                "30df5cebe8a221ef"
            ]
        ]
    },
    {
        "id": "c92c236018505e32",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "7e7c3e98cbbb41e8",
        "name": "Average Period (Get) IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 760,
        "wires": []
    },
    {
        "id": "30df5cebe8a221ef",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "7e7c3e98cbbb41e8",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": 0\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "29dc020cdbc1c2c0"
            ]
        ]
    },
    {
        "id": "3a91967b0cb13448",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "7e7c3e98cbbb41e8",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 800,
        "wires": []
    },
    {
        "id": "d2e4a40424617821",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "7e7c3e98cbbb41e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 800,
        "wires": [
            [
                "3a91967b0cb13448",
                "d9a36a8201df31e1"
            ]
        ]
    },
    {
        "id": "d9a36a8201df31e1",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "7e7c3e98cbbb41e8",
        "name": "Average Period (Get) OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 760,
        "wires": []
    },
    {
        "id": "29dc020cdbc1c2c0",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "7e7c3e98cbbb41e8",
        "name": "",
        "x": 730,
        "y": 800,
        "wires": [
            [
                "d2e4a40424617821"
            ]
        ]
    },
    {
        "id": "a795962c63224735",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "b4f4a0d03aaf52a4",
        "name": "average period",
        "url": "/api/v1/observingconditions/0/averageperiod",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 940,
        "wires": [
            [
                "220b30a212e6e8c5",
                "eaa8dd556d55af19"
            ]
        ]
    },
    {
        "id": "220b30a212e6e8c5",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "b4f4a0d03aaf52a4",
        "name": "Average Period (Put) IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 900,
        "wires": []
    },
    {
        "id": "eaa8dd556d55af19",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "b4f4a0d03aaf52a4",
        "name": "configured devices response",
        "func": "errorNumber = 0;\nerrorMsg = \"\";\nif (msg.payload.AveragePeriod < 0) {\n    errorNumber = 1025;\n    errorMessage = \"invalid average period -- must be zero\";\n}\n\nresponse = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": errorNumber,\n    \"ErrorMessage\": errorMsg,\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 940,
        "wires": [
            [
                "f89b376e2ede3c6b"
            ]
        ]
    },
    {
        "id": "4456496a5eb58130",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "b4f4a0d03aaf52a4",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 940,
        "wires": []
    },
    {
        "id": "8d2ec9a26ad33f60",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "b4f4a0d03aaf52a4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 940,
        "wires": [
            [
                "4456496a5eb58130",
                "135ab3bf7d8e7cc3"
            ]
        ]
    },
    {
        "id": "135ab3bf7d8e7cc3",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "b4f4a0d03aaf52a4",
        "name": "Average Period (Put) OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 900,
        "wires": []
    },
    {
        "id": "f89b376e2ede3c6b",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "b4f4a0d03aaf52a4",
        "name": "",
        "x": 730,
        "y": 940,
        "wires": [
            [
                "8d2ec9a26ad33f60"
            ]
        ]
    },
    {
        "id": "82c5a2f289dbe119",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "12f16d2c800c13ac",
        "name": "Cloud Cover IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 1040,
        "wires": []
    },
    {
        "id": "bcbf6aa292c34d33",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "12f16d2c800c13ac",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseInt(global.get(\"cloudCover\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "1eb5c6cf7c7d19fd"
            ]
        ]
    },
    {
        "id": "c330f983f4ec3291",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "12f16d2c800c13ac",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8e793259c145beb4",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "12f16d2c800c13ac",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1080,
        "wires": [
            [
                "c330f983f4ec3291",
                "b84b6753e6a3c69f"
            ]
        ]
    },
    {
        "id": "b84b6753e6a3c69f",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "12f16d2c800c13ac",
        "name": "Cloud Cover OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1eb5c6cf7c7d19fd",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "12f16d2c800c13ac",
        "name": "",
        "x": 730,
        "y": 1080,
        "wires": [
            [
                "8e793259c145beb4"
            ]
        ]
    },
    {
        "id": "4127c80d9fbe7c71",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "db6f13a594c95dcc",
        "name": "dew point",
        "url": "/api/v1/observingconditions/0/dewpoint",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "4395e11bc5d0756d",
                "a758f5b6d46d876d"
            ]
        ]
    },
    {
        "id": "4395e11bc5d0756d",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "db6f13a594c95dcc",
        "name": "Dewpoint IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a758f5b6d46d876d",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "db6f13a594c95dcc",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseFloat(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseInt(global.get(\"dewpoint\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "06740326cd6d6984"
            ]
        ]
    },
    {
        "id": "4bc48c88e6853aed",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "db6f13a594c95dcc",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 1220,
        "wires": []
    },
    {
        "id": "da169d3ef88f8814",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "db6f13a594c95dcc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1220,
        "wires": [
            [
                "4bc48c88e6853aed",
                "1c9980761642b75c"
            ]
        ]
    },
    {
        "id": "1c9980761642b75c",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "db6f13a594c95dcc",
        "name": "Dewpoint OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1180,
        "wires": []
    },
    {
        "id": "06740326cd6d6984",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "db6f13a594c95dcc",
        "name": "",
        "x": 730,
        "y": 1220,
        "wires": [
            [
                "da169d3ef88f8814"
            ]
        ]
    },
    {
        "id": "e2fb914d4022096f",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "fc9027e9ebe31c60",
        "name": "humidity",
        "url": "/api/v1/observingconditions/0/humidity",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1360,
        "wires": [
            [
                "33571579545f6a8e",
                "150ca88d309ca121"
            ]
        ]
    },
    {
        "id": "33571579545f6a8e",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "fc9027e9ebe31c60",
        "name": "Humidity IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1320,
        "wires": []
    },
    {
        "id": "150ca88d309ca121",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "fc9027e9ebe31c60",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseInt(global.get(\"humidity\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1360,
        "wires": [
            [
                "4ec0bd2ff2c82fa0"
            ]
        ]
    },
    {
        "id": "6bfdaec1fbeb5a08",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "fc9027e9ebe31c60",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 1360,
        "wires": []
    },
    {
        "id": "02649acd314365aa",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "fc9027e9ebe31c60",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1360,
        "wires": [
            [
                "6bfdaec1fbeb5a08",
                "a9d4feee7bb1840e"
            ]
        ]
    },
    {
        "id": "a9d4feee7bb1840e",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "fc9027e9ebe31c60",
        "name": "Humidity OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1320,
        "wires": []
    },
    {
        "id": "4ec0bd2ff2c82fa0",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "fc9027e9ebe31c60",
        "name": "",
        "x": 730,
        "y": 1360,
        "wires": [
            [
                "02649acd314365aa"
            ]
        ]
    },
    {
        "id": "a18a7e93bee06168",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "c351ab942b0a70d7",
        "name": "pressure",
        "url": "/api/v1/observingconditions/0/pressure",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1500,
        "wires": [
            [
                "ff8f22a4c7178a35",
                "6faff3b5650f9126"
            ]
        ]
    },
    {
        "id": "ff8f22a4c7178a35",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "c351ab942b0a70d7",
        "name": "Pressure IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1460,
        "wires": []
    },
    {
        "id": "6faff3b5650f9126",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "c351ab942b0a70d7",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseInt(global.get(\"pressure\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1500,
        "wires": [
            [
                "b7d6f03997fa7b24"
            ]
        ]
    },
    {
        "id": "183874ad6e553586",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "c351ab942b0a70d7",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 1500,
        "wires": []
    },
    {
        "id": "302b8374bd8a615c",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "c351ab942b0a70d7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1500,
        "wires": [
            [
                "183874ad6e553586",
                "83a3582b9cba93ea"
            ]
        ]
    },
    {
        "id": "83a3582b9cba93ea",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "c351ab942b0a70d7",
        "name": "Pressure OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1460,
        "wires": []
    },
    {
        "id": "b7d6f03997fa7b24",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "c351ab942b0a70d7",
        "name": "",
        "x": 730,
        "y": 1500,
        "wires": [
            [
                "302b8374bd8a615c"
            ]
        ]
    },
    {
        "id": "97e34c9c8e92a8f6",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "152656d5ef61a181",
        "name": "rain rate",
        "url": "/api/v1/observingconditions/0/rainrate",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1640,
        "wires": [
            [
                "01f0270f31a645d6",
                "8c3a347f7f555629"
            ]
        ]
    },
    {
        "id": "01f0270f31a645d6",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "152656d5ef61a181",
        "name": "Rain Rate IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1600,
        "wires": []
    },
    {
        "id": "8c3a347f7f555629",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "152656d5ef61a181",
        "name": "configured devices response",
        "func": "last_rain_amount = flow.get(\"last_rain_amount\");\nif (isNaN(last_rain_amount)) {\n    last_rain_amount = 0;\n}\n\ncurrent_rain_amount = global.get(\"eventrain\");\nif (isNaN(current_rain_amount)) {\n    current_rain_amount = 0;\n}\n\nlast_rain_time = flow.get(\"last_rain_time\");\nif (isNaN(last_rain_time)) {\n    last_rain_time = 0;\n}\n\ncurrent_rain_time = global.get(\"eventraintime\");\nif (isNaN(current_rain_time)) {\n    current_rain_time = Date.now();\n}\n\nrate = (current_rain_amount - last_rain_amount) / (current_rain_time - last_rain_time);\nif (rate < 0) {\n    rate = 0;\n}\nrate = rate * 3600; // convert mm/s to mm/hour\n\nresponse = {\n    \"ClientTransactionID\": parseFloat(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": rate\n}\n\nflow.set(\"last_rain_amount\", current_rain_amount);\nflow.set(\"last_rain_time\", current_rain_time);\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "52394604b18f8c22"
            ]
        ]
    },
    {
        "id": "5fdc5a5cfdbc191e",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "152656d5ef61a181",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 1640,
        "wires": []
    },
    {
        "id": "7fe7b68b94818ea3",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "152656d5ef61a181",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1640,
        "wires": [
            [
                "5fdc5a5cfdbc191e",
                "4bc370b3aae66ac7"
            ]
        ]
    },
    {
        "id": "4bc370b3aae66ac7",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "152656d5ef61a181",
        "name": "Rain Rate OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1600,
        "wires": []
    },
    {
        "id": "52394604b18f8c22",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "152656d5ef61a181",
        "name": "",
        "x": 730,
        "y": 1640,
        "wires": [
            [
                "7fe7b68b94818ea3"
            ]
        ]
    },
    {
        "id": "24e6f5eb9acec17f",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "3cda4b72617e26a9",
        "name": "sky brightness",
        "url": "/api/v1/observingconditions/0/skybrightness",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1780,
        "wires": [
            [
                "8ef195afbe99c78a",
                "38d05ac28e412e6a"
            ]
        ]
    },
    {
        "id": "8ef195afbe99c78a",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "3cda4b72617e26a9",
        "name": "Sky Brightness IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1740,
        "wires": []
    },
    {
        "id": "38d05ac28e412e6a",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "3cda4b72617e26a9",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": global.get(\"lux\")\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1780,
        "wires": [
            [
                "ced6e43999c11228"
            ]
        ]
    },
    {
        "id": "692a5d47148389d5",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "3cda4b72617e26a9",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 1780,
        "wires": []
    },
    {
        "id": "bdc6ec56b8857aea",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "3cda4b72617e26a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1780,
        "wires": [
            [
                "692a5d47148389d5",
                "2f44cf299a40c341"
            ]
        ]
    },
    {
        "id": "2f44cf299a40c341",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "3cda4b72617e26a9",
        "name": "Sky Brightness OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1740,
        "wires": []
    },
    {
        "id": "ced6e43999c11228",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "3cda4b72617e26a9",
        "name": "",
        "x": 730,
        "y": 1780,
        "wires": [
            [
                "bdc6ec56b8857aea"
            ]
        ]
    },
    {
        "id": "7932bbdc126d15e9",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "e477973bedad9973",
        "name": "sky quality",
        "url": "/api/v1/observingconditions/0/skyquality",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1920,
        "wires": [
            [
                "3b467e0a3455e261",
                "d4315cd5fd5640d6"
            ]
        ]
    },
    {
        "id": "3b467e0a3455e261",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "e477973bedad9973",
        "name": "Sky Quality IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 1880,
        "wires": []
    },
    {
        "id": "d4315cd5fd5640d6",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "e477973bedad9973",
        "name": "configured devices response",
        "func": "sqm = global.get(\"sqm\");\nif (isNaN(sqm)) {\n    sqm = 0;\n}\nelse {\n    sqm = parseFloat(sqm);\n}\n\nresponse = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": sqm\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1920,
        "wires": [
            [
                "b63cce1da5aba6e2"
            ]
        ]
    },
    {
        "id": "4ec41ec5fa610ff1",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "e477973bedad9973",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 1920,
        "wires": []
    },
    {
        "id": "7c93df013af9e030",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "e477973bedad9973",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1920,
        "wires": [
            [
                "4ec41ec5fa610ff1",
                "65b0e7a7e66346de"
            ]
        ]
    },
    {
        "id": "65b0e7a7e66346de",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "e477973bedad9973",
        "name": "Sky Quality OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 1880,
        "wires": []
    },
    {
        "id": "b63cce1da5aba6e2",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "e477973bedad9973",
        "name": "",
        "x": 730,
        "y": 1920,
        "wires": [
            [
                "7c93df013af9e030"
            ]
        ]
    },
    {
        "id": "c1f74be3c9262be4",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "63d28efa54fba225",
        "name": "temperature",
        "url": "/api/v1/observingconditions/0/temperature",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2060,
        "wires": [
            [
                "3292ad5d7c76e1fa",
                "1c8d726dbf3de082"
            ]
        ]
    },
    {
        "id": "3292ad5d7c76e1fa",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "63d28efa54fba225",
        "name": "Temperature IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 2020,
        "wires": []
    },
    {
        "id": "1c8d726dbf3de082",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "63d28efa54fba225",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseFloat(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseFloat(global.get(\"temperature\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2060,
        "wires": [
            [
                "ba02f4f59d14c0f4"
            ]
        ]
    },
    {
        "id": "b5e0286ac70b5e4b",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "63d28efa54fba225",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 2060,
        "wires": []
    },
    {
        "id": "bf425b04b2d483b4",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "63d28efa54fba225",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 2060,
        "wires": [
            [
                "b5e0286ac70b5e4b",
                "c413f4bb0b482f64"
            ]
        ]
    },
    {
        "id": "c413f4bb0b482f64",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "63d28efa54fba225",
        "name": "Temperature OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2020,
        "wires": []
    },
    {
        "id": "ba02f4f59d14c0f4",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "63d28efa54fba225",
        "name": "",
        "x": 730,
        "y": 2060,
        "wires": [
            [
                "bf425b04b2d483b4"
            ]
        ]
    },
    {
        "id": "ef38c8ed6db24a05",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "a30eb0e40ba88e3e",
        "name": "wind direction",
        "url": "/api/v1/observingconditions/0/winddirection",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2200,
        "wires": [
            [
                "0475251ad73c5ad5",
                "6603f2d9d0eb6c83"
            ]
        ]
    },
    {
        "id": "0475251ad73c5ad5",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "a30eb0e40ba88e3e",
        "name": "Wind Direction IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 2160,
        "wires": []
    },
    {
        "id": "6603f2d9d0eb6c83",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "a30eb0e40ba88e3e",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseInt(global.get(\"winddirection\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2200,
        "wires": [
            [
                "aacefb7ea1a74693"
            ]
        ]
    },
    {
        "id": "97224eaf4ee84b9c",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "a30eb0e40ba88e3e",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 2200,
        "wires": []
    },
    {
        "id": "435820597c310f1f",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "a30eb0e40ba88e3e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 2200,
        "wires": [
            [
                "97224eaf4ee84b9c",
                "abeed4903b080b90"
            ]
        ]
    },
    {
        "id": "abeed4903b080b90",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "a30eb0e40ba88e3e",
        "name": "Wind Direction OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2160,
        "wires": []
    },
    {
        "id": "aacefb7ea1a74693",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "a30eb0e40ba88e3e",
        "name": "",
        "x": 730,
        "y": 2200,
        "wires": [
            [
                "435820597c310f1f"
            ]
        ]
    },
    {
        "id": "a98456b9246332e8",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "a2bafdcc06f3e8b0",
        "name": "wind gust",
        "url": "/api/v1/observingconditions/0/windgust",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2340,
        "wires": [
            [
                "924a231a92e1ec4b",
                "53b634267281c373"
            ]
        ]
    },
    {
        "id": "924a231a92e1ec4b",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "a2bafdcc06f3e8b0",
        "name": "Wind Gust IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 2300,
        "wires": []
    },
    {
        "id": "53b634267281c373",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "a2bafdcc06f3e8b0",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseFloat(global.get(\"windgust\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2340,
        "wires": [
            [
                "f89a6e47f71a57d1"
            ]
        ]
    },
    {
        "id": "50a4f71e3d2821a9",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "a2bafdcc06f3e8b0",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "59319b272725a129",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "a2bafdcc06f3e8b0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 2340,
        "wires": [
            [
                "50a4f71e3d2821a9",
                "4fa476b821a2f492"
            ]
        ]
    },
    {
        "id": "4fa476b821a2f492",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "a2bafdcc06f3e8b0",
        "name": "Wind Gust OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2300,
        "wires": []
    },
    {
        "id": "f89a6e47f71a57d1",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "a2bafdcc06f3e8b0",
        "name": "",
        "x": 730,
        "y": 2340,
        "wires": [
            [
                "59319b272725a129"
            ]
        ]
    },
    {
        "id": "ebdb34c7060e55bc",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "b14abf6cdbcd89b0",
        "name": "wind speed",
        "url": "/api/v1/observingconditions/0/windspeed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2480,
        "wires": [
            [
                "0985456baa715f06",
                "cfb4b301693de6d8"
            ]
        ]
    },
    {
        "id": "0985456baa715f06",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "b14abf6cdbcd89b0",
        "name": "Wind Speed IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 2440,
        "wires": []
    },
    {
        "id": "cfb4b301693de6d8",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "b14abf6cdbcd89b0",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseFloat(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": parseInt(global.get(\"windspeed\"))\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "f69fd3e6c65b1cfc"
            ]
        ]
    },
    {
        "id": "64e73bb8a23768c0",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "b14abf6cdbcd89b0",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 2480,
        "wires": []
    },
    {
        "id": "5b339a5bcd51fe9d",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "b14abf6cdbcd89b0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 2480,
        "wires": [
            [
                "64e73bb8a23768c0",
                "ae67c6501440fd9d"
            ]
        ]
    },
    {
        "id": "ae67c6501440fd9d",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "b14abf6cdbcd89b0",
        "name": "Wind Speed OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2440,
        "wires": []
    },
    {
        "id": "f69fd3e6c65b1cfc",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "b14abf6cdbcd89b0",
        "name": "",
        "x": 730,
        "y": 2480,
        "wires": [
            [
                "5b339a5bcd51fe9d"
            ]
        ]
    },
    {
        "id": "a6bf8804747d3213",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "e3c6c8f600cfb42c",
        "name": "refresh",
        "url": "/api/v1/observingconditions/0/refresh",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2620,
        "wires": [
            [
                "6ac4da138e810e78",
                "4034aa5d60bbea85"
            ]
        ]
    },
    {
        "id": "6ac4da138e810e78",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "e3c6c8f600cfb42c",
        "name": "Refresh IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 2580,
        "wires": []
    },
    {
        "id": "4034aa5d60bbea85",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "e3c6c8f600cfb42c",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2620,
        "wires": [
            [
                "e39156d117254e2e"
            ]
        ]
    },
    {
        "id": "a12bb0a6a07cc570",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "e3c6c8f600cfb42c",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 2620,
        "wires": []
    },
    {
        "id": "5aa285a4335129b9",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "e3c6c8f600cfb42c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 2620,
        "wires": [
            [
                "a12bb0a6a07cc570",
                "47f987b41ad48023"
            ]
        ]
    },
    {
        "id": "47f987b41ad48023",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "e3c6c8f600cfb42c",
        "name": "Refresh OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2580,
        "wires": []
    },
    {
        "id": "e39156d117254e2e",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "e3c6c8f600cfb42c",
        "name": "",
        "x": 730,
        "y": 2620,
        "wires": [
            [
                "5aa285a4335129b9"
            ]
        ]
    },
    {
        "id": "2836b410a9985cbc",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "2227159433a6b21f",
        "name": "sensor description",
        "url": "/api/v1/observingconditions/0/sensordescription",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 2760,
        "wires": [
            [
                "e34b8e37d597b7d5",
                "7d0cee637dfe6ab0"
            ]
        ]
    },
    {
        "id": "e34b8e37d597b7d5",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "2227159433a6b21f",
        "name": "Sensor Description IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 2720,
        "wires": []
    },
    {
        "id": "7d0cee637dfe6ab0",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "2227159433a6b21f",
        "name": "configured devices response",
        "func": "val = \"\";\nerrorNumber = 0;\nerrorMsg = \"\";\nswitch (msg.payload.SensorName) {\n    case \"CloudCover\":\n        val = \"Percentage of the sky covered by clouds.\";\n        break;\n    case \"DewPoint\":\n        val = \"Dew point in degrees Celsius\";\n        break;\n    case \"Humidity\":\n        val = \"Relative humidity as a precentage\";\n        break;\n    case \"Pressure\":\n        val = \"Barometric pressure in hpa\";\n        break;\n    case \"RainRate\":\n        val = \"Rain rate in mm/hour\";\n        break;\n    case \"SkyBrightness\":\n        val = \"Sky Brightness in lux\";\n        break;\n    case \"SkyQuality\":\n        val = \"Sky quality in magnitudes per arcsecond squared\";\n        break;\n    case \"SkyTemperature\":\n        errorMsg = \"not implemented\";\n        errorNumber = 1024;\n        break;\n    case \"StarFWHM\":\n        errorMsg = \"not implemented\";\n        errorNumber = 1024;\n        break;\n    case \"Temperature\":\n        val = \"Temperature in degrees Celsius\";\n        break;\n    case \"WindDirection\":\n        val = \"Wind direction in degrees clockwise from north\";\n        break;\n    case \"WindGust\":\n        val = \"Wind Gust in m/s\";\n        break;\n    case \"WindSpeed\":\n        val = \"Wind speed in m/s\";\n        break;\n    default:\n        errorNumber = 1024;\n        errorMsg = \"we got an unkown sensor name: \" + msg.SensorName;\n}\n\nresponse = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": errorNumber,\n    \"ErrorMessage\": errorMsg,\n    \"Value\": val\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2760,
        "wires": [
            [
                "a0c0144d164587f1"
            ]
        ]
    },
    {
        "id": "1526abde90ee2a49",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "2227159433a6b21f",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 2760,
        "wires": []
    },
    {
        "id": "4e8e106aa1843232",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "2227159433a6b21f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 2760,
        "wires": [
            [
                "1526abde90ee2a49",
                "30b0743c9ed70451"
            ]
        ]
    },
    {
        "id": "30b0743c9ed70451",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "2227159433a6b21f",
        "name": "Sensor Description OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 2720,
        "wires": []
    },
    {
        "id": "a0c0144d164587f1",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "2227159433a6b21f",
        "name": "",
        "x": 730,
        "y": 2760,
        "wires": [
            [
                "4e8e106aa1843232"
            ]
        ]
    },
    {
        "id": "5fa5bb0dbb417b60",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "f843e4cb28657dbd",
        "name": "time since last update",
        "url": "/api/v1/observingconditions/0/timesincelastupdate",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 2900,
        "wires": [
            [
                "58a658f92b7613e3",
                "fa88c7fdb578c287"
            ]
        ]
    },
    {
        "id": "58a658f92b7613e3",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "f843e4cb28657dbd",
        "name": "Time Since Last Update IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 2860,
        "wires": []
    },
    {
        "id": "fa88c7fdb578c287",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "f843e4cb28657dbd",
        "name": "configured devices response",
        "func": "last_rain_time = flow.get(\"last_rain_time\");\nif (isNaN(last_rain_time)) {\n    last_rain_time = 0;\n}\ncurrent_rain_time = global.get(\"eventraintime\");\n\nt = current_rain_time - last_rain_time;\n\nerrorNumber = 0;\nerrorMsg = \"\";\nswitch (msg.payload.SensorName) {\n    case \"SkyTemperature\":\n    case \"StarFWHM\":\n        errorMsg = \"not implemented\";\n        errorNumber = 1024;\n        break;\n}\n\nresponse = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": errorNumber,\n    \"ErrorMessage\": errorMsg,\n    \"Value\": t\n}\n\nflow.set(\"last_rain_time\", current_rain_time);\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2900,
        "wires": [
            [
                "4788cabecd0619a3"
            ]
        ]
    },
    {
        "id": "2881ef01853c440d",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "f843e4cb28657dbd",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 2900,
        "wires": []
    },
    {
        "id": "4a54e70cc926f592",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "f843e4cb28657dbd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 2900,
        "wires": [
            [
                "2881ef01853c440d",
                "fb3fd58ed8c13814"
            ]
        ]
    },
    {
        "id": "fb3fd58ed8c13814",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "f843e4cb28657dbd",
        "name": "Time Since Last Update OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 2860,
        "wires": []
    },
    {
        "id": "4788cabecd0619a3",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "f843e4cb28657dbd",
        "name": "",
        "x": 730,
        "y": 2900,
        "wires": [
            [
                "4a54e70cc926f592"
            ]
        ]
    },
    {
        "id": "c21f61c417f58103",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "12f16d2c800c13ac",
        "name": "cloud cover",
        "url": "/api/v1/observingconditions/0/cloudcover",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1080,
        "wires": [
            [
                "82c5a2f289dbe119",
                "bcbf6aa292c34d33"
            ]
        ]
    },
    {
        "id": "6847472bb677fc82",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "183ed9945b0c1832",
        "name": "star fwhm",
        "url": "/api/v1/observingconditions/0/starfwhm",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 3040,
        "wires": [
            [
                "6fe5d6569dfa97f9",
                "be1a297c47288648"
            ]
        ]
    },
    {
        "id": "6fe5d6569dfa97f9",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "183ed9945b0c1832",
        "name": "Star FWHM IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 3000,
        "wires": []
    },
    {
        "id": "be1a297c47288648",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "183ed9945b0c1832",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 1024,\n    \"ErrorMessage\": \"Star FWHM not implemented\",\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3040,
        "wires": [
            [
                "045b10baae17ffec"
            ]
        ]
    },
    {
        "id": "b22f838aef97217c",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "183ed9945b0c1832",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 3040,
        "wires": []
    },
    {
        "id": "7a7362a42f8728b9",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "183ed9945b0c1832",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 3040,
        "wires": [
            [
                "b22f838aef97217c",
                "c42af6979a0245cb"
            ]
        ]
    },
    {
        "id": "c42af6979a0245cb",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "183ed9945b0c1832",
        "name": "Star FWHM OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 3000,
        "wires": []
    },
    {
        "id": "045b10baae17ffec",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "183ed9945b0c1832",
        "name": "",
        "x": 730,
        "y": 3040,
        "wires": [
            [
                "7a7362a42f8728b9"
            ]
        ]
    },
    {
        "id": "feeff5666c3dad8a",
        "type": "http in",
        "z": "eb7e481125253646",
        "g": "6d735a08cc1b8575",
        "name": "sky temperature",
        "url": "/api/v1/observingconditions/0/skytemperature",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 3180,
        "wires": [
            [
                "ccf9e6778c5c890f",
                "3610a1c0b91d2b24"
            ]
        ]
    },
    {
        "id": "ccf9e6778c5c890f",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "6d735a08cc1b8575",
        "name": "Sky Temperature IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 3140,
        "wires": []
    },
    {
        "id": "3610a1c0b91d2b24",
        "type": "function",
        "z": "eb7e481125253646",
        "g": "6d735a08cc1b8575",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 1024,\n    \"ErrorMessage\": \"Sky Temperature not implemented\",\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3180,
        "wires": [
            [
                "d3b1c17c8fae7c58"
            ]
        ]
    },
    {
        "id": "7b4614f9cb870bcc",
        "type": "http response",
        "z": "eb7e481125253646",
        "g": "6d735a08cc1b8575",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1070,
        "y": 3180,
        "wires": []
    },
    {
        "id": "97a1c6793e2f9a91",
        "type": "json",
        "z": "eb7e481125253646",
        "g": "6d735a08cc1b8575",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 3180,
        "wires": [
            [
                "7b4614f9cb870bcc",
                "9bb922ceb1ff682b"
            ]
        ]
    },
    {
        "id": "9bb922ceb1ff682b",
        "type": "debug",
        "z": "eb7e481125253646",
        "g": "6d735a08cc1b8575",
        "name": "Sky Temperature OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3140,
        "wires": []
    },
    {
        "id": "d3b1c17c8fae7c58",
        "type": "subflow:63b8acad88eafa84",
        "z": "eb7e481125253646",
        "g": "6d735a08cc1b8575",
        "name": "",
        "x": 730,
        "y": 3180,
        "wires": [
            [
                "97a1c6793e2f9a91"
            ]
        ]
    },
    {
        "id": "6fdbcc29db51d979",
        "type": "http in",
        "z": "fa1cde214afbec06",
        "g": "be84de2e787118ae",
        "name": "safety monitor connected",
        "url": "/api/v1/safetymonitor/0/connected",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "4d1b0f4af9d49974",
                "18c5d84e2c449dcb"
            ]
        ],
        "info": "This is the request the client uses to connect to the safety monitor."
    },
    {
        "id": "b44e194ded85a44d",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "be84de2e787118ae",
        "name": "Connected (Put) OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 60,
        "wires": []
    },
    {
        "id": "e2fb6363317657f7",
        "type": "http in",
        "z": "fa1cde214afbec06",
        "g": "ef863f8652365dd4",
        "name": "safety monitor description",
        "url": "/api/v1/safetymonitor/0/description",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "c5b7f7e25eea5f37",
                "f57ae12dfd3fad02"
            ]
        ]
    },
    {
        "id": "c5b7f7e25eea5f37",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "ef863f8652365dd4",
        "name": "GET description IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 200,
        "wires": []
    },
    {
        "id": "eb196f2429101dac",
        "type": "http in",
        "z": "fa1cde214afbec06",
        "g": "41d8070911e257a3",
        "name": "safety monitor driver info",
        "url": "/api/v1/safetymonitor/0/driverinfo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "6f0b997ee891d94c",
                "98350979a4af768d"
            ]
        ]
    },
    {
        "id": "6f0b997ee891d94c",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "41d8070911e257a3",
        "name": "Driver Info IN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "601f130a2218410b",
        "type": "http in",
        "z": "fa1cde214afbec06",
        "g": "acbc843a7ddec6f2",
        "name": "safety monitor name",
        "url": "/api/v1/safetymonitor/0/name",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "e976831310f27a4b",
                "9368e4387e05c527"
            ]
        ]
    },
    {
        "id": "e976831310f27a4b",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "acbc843a7ddec6f2",
        "name": "Name IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 620,
        "wires": []
    },
    {
        "id": "bb6959f337d1ee80",
        "type": "http in",
        "z": "fa1cde214afbec06",
        "g": "62bd404960e86e0e",
        "name": "safety monitor connected",
        "url": "/api/v1/safetymonitor/0/connected",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 380,
        "wires": [
            [
                "d060a9a85d0321af",
                "060201b2ff983363"
            ]
        ],
        "info": "This is the request the client uses to connect to the safety monitor."
    },
    {
        "id": "d060a9a85d0321af",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "62bd404960e86e0e",
        "name": "Connected (GET) IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 340,
        "wires": []
    },
    {
        "id": "f57ae12dfd3fad02",
        "type": "function",
        "z": "fa1cde214afbec06",
        "g": "ef863f8652365dd4",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": \"Return safety status based on the imaging dashboard data\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 240,
        "wires": [
            [
                "3ed5d038854fab9a"
            ]
        ]
    },
    {
        "id": "4223443b71bf6a07",
        "type": "http response",
        "z": "fa1cde214afbec06",
        "g": "ef863f8652365dd4",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1110,
        "y": 240,
        "wires": []
    },
    {
        "id": "4d1b0f4af9d49974",
        "type": "function",
        "z": "fa1cde214afbec06",
        "g": "be84de2e787118ae",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\"\n}\n\nflow.set(\"connected\", msg.payload.Connected);\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 100,
        "wires": [
            [
                "b10119124ca0b517"
            ]
        ]
    },
    {
        "id": "060201b2ff983363",
        "type": "function",
        "z": "fa1cde214afbec06",
        "g": "62bd404960e86e0e",
        "name": "configured devices response",
        "func": "flow.set(\"connected\", msg.payload.Connected);\n\nresponse = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 380,
        "wires": [
            [
                "19be8c5be789737b"
            ]
        ]
    },
    {
        "id": "14f174570e14119d",
        "type": "http response",
        "z": "fa1cde214afbec06",
        "g": "62bd404960e86e0e",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1150,
        "y": 380,
        "wires": []
    },
    {
        "id": "94f9a38c3dd1f859",
        "type": "http response",
        "z": "fa1cde214afbec06",
        "g": "be84de2e787118ae",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1090,
        "y": 100,
        "wires": []
    },
    {
        "id": "98350979a4af768d",
        "type": "function",
        "z": "fa1cde214afbec06",
        "g": "41d8070911e257a3",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": \"Imaging Dashboard Safety Monitor\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "149fe40e40f02b7a"
            ]
        ]
    },
    {
        "id": "649c284906517aba",
        "type": "http response",
        "z": "fa1cde214afbec06",
        "g": "41d8070911e257a3",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1170,
        "y": 520,
        "wires": []
    },
    {
        "id": "9368e4387e05c527",
        "type": "function",
        "z": "fa1cde214afbec06",
        "g": "acbc843a7ddec6f2",
        "name": "configured devices response",
        "func": "response = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": \"Imaging Dashboard Safety Monitor\"\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "58d9c662aae376e1"
            ]
        ]
    },
    {
        "id": "c20ec6e36e368051",
        "type": "http response",
        "z": "fa1cde214afbec06",
        "g": "acbc843a7ddec6f2",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1210,
        "y": 660,
        "wires": []
    },
    {
        "id": "77452ae66b90b64a",
        "type": "http in",
        "z": "fa1cde214afbec06",
        "g": "511281a00db5962f",
        "name": "is safe?",
        "url": "/api/v1/safetymonitor/0/issafe",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "7cad8cbae4e3b2bf",
                "43e80d0542f18698"
            ]
        ]
    },
    {
        "id": "7cad8cbae4e3b2bf",
        "type": "function",
        "z": "fa1cde214afbec06",
        "g": "511281a00db5962f",
        "name": "configured devices response",
        "func": "safe = global.get(\"is_safe\");\n\nresponse = {\n    \"ClientTransactionID\": parseInt(msg.payload.ClientTransactionID),\n    \"ErrorNumber\": 0,\n    \"ErrorMessage\": \"\",\n    \"Value\": safe\n}\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 800,
        "wires": [
            [
                "0c8178a1bbc0c68e"
            ]
        ]
    },
    {
        "id": "753d3968380e0edb",
        "type": "http response",
        "z": "fa1cde214afbec06",
        "g": "511281a00db5962f",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "43e80d0542f18698",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "511281a00db5962f",
        "name": "Is Safe IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 760,
        "wires": []
    },
    {
        "id": "c6136115b0349e2a",
        "type": "json",
        "z": "fa1cde214afbec06",
        "g": "be84de2e787118ae",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 950,
        "y": 100,
        "wires": [
            [
                "94f9a38c3dd1f859",
                "b44e194ded85a44d"
            ]
        ]
    },
    {
        "id": "bad52c88a0f98ed3",
        "type": "json",
        "z": "fa1cde214afbec06",
        "g": "62bd404960e86e0e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 990,
        "y": 380,
        "wires": [
            [
                "14f174570e14119d",
                "b42894635f161635"
            ]
        ]
    },
    {
        "id": "be4bfebd7c6198a5",
        "type": "json",
        "z": "fa1cde214afbec06",
        "g": "ef863f8652365dd4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 240,
        "wires": [
            [
                "4223443b71bf6a07",
                "38ded4db2a622522"
            ]
        ]
    },
    {
        "id": "2ef8a0741a3a63ae",
        "type": "json",
        "z": "fa1cde214afbec06",
        "g": "41d8070911e257a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "649c284906517aba",
                "a9d185d578569a40"
            ]
        ]
    },
    {
        "id": "b414523dc38b43e3",
        "type": "json",
        "z": "fa1cde214afbec06",
        "g": "acbc843a7ddec6f2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 660,
        "wires": [
            [
                "c20ec6e36e368051",
                "a8d12923a087f390"
            ]
        ]
    },
    {
        "id": "b1e3a226985b78a0",
        "type": "json",
        "z": "fa1cde214afbec06",
        "g": "511281a00db5962f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 800,
        "wires": [
            [
                "753d3968380e0edb",
                "a871cf3e8a699d15"
            ]
        ]
    },
    {
        "id": "b42894635f161635",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "62bd404960e86e0e",
        "name": "Connected (Get) OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 340,
        "wires": []
    },
    {
        "id": "a871cf3e8a699d15",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "511281a00db5962f",
        "name": "Is Safe OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 760,
        "wires": []
    },
    {
        "id": "18c5d84e2c449dcb",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "be84de2e787118ae",
        "name": "Connected (Put) IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 60,
        "wires": []
    },
    {
        "id": "38ded4db2a622522",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "ef863f8652365dd4",
        "name": "GET description OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 200,
        "wires": []
    },
    {
        "id": "a8d12923a087f390",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "acbc843a7ddec6f2",
        "name": "Name OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 620,
        "wires": []
    },
    {
        "id": "a9d185d578569a40",
        "type": "debug",
        "z": "fa1cde214afbec06",
        "g": "41d8070911e257a3",
        "name": "Driver Info OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 480,
        "wires": []
    },
    {
        "id": "b10119124ca0b517",
        "type": "subflow:63b8acad88eafa84",
        "z": "fa1cde214afbec06",
        "g": "be84de2e787118ae",
        "name": "",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "c6136115b0349e2a"
            ]
        ]
    },
    {
        "id": "3ed5d038854fab9a",
        "type": "subflow:63b8acad88eafa84",
        "z": "fa1cde214afbec06",
        "g": "ef863f8652365dd4",
        "name": "",
        "x": 730,
        "y": 240,
        "wires": [
            [
                "be4bfebd7c6198a5"
            ]
        ]
    },
    {
        "id": "19be8c5be789737b",
        "type": "subflow:63b8acad88eafa84",
        "z": "fa1cde214afbec06",
        "g": "62bd404960e86e0e",
        "name": "",
        "x": 750,
        "y": 380,
        "wires": [
            [
                "bad52c88a0f98ed3"
            ]
        ]
    },
    {
        "id": "149fe40e40f02b7a",
        "type": "subflow:63b8acad88eafa84",
        "z": "fa1cde214afbec06",
        "g": "41d8070911e257a3",
        "name": "",
        "x": 750,
        "y": 520,
        "wires": [
            [
                "2ef8a0741a3a63ae"
            ]
        ]
    },
    {
        "id": "58d9c662aae376e1",
        "type": "subflow:63b8acad88eafa84",
        "z": "fa1cde214afbec06",
        "g": "acbc843a7ddec6f2",
        "name": "",
        "x": 750,
        "y": 660,
        "wires": [
            [
                "b414523dc38b43e3"
            ]
        ]
    },
    {
        "id": "0c8178a1bbc0c68e",
        "type": "subflow:63b8acad88eafa84",
        "z": "fa1cde214afbec06",
        "g": "511281a00db5962f",
        "name": "",
        "x": 630,
        "y": 800,
        "wires": [
            [
                "b1e3a226985b78a0"
            ]
        ]
    },
    {
        "id": "99e3691cbde3bec9",
        "type": "ui_ui_control",
        "z": "7727e8d00df0dfd8",
        "name": "",
        "events": "all",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "a015af3792ab8aec"
            ]
        ]
    },
    {
        "id": "a015af3792ab8aec",
        "type": "switch",
        "z": "7727e8d00df0dfd8",
        "name": "When switching to home tab",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Home",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "e9c47502ce498663"
            ]
        ]
    },
    {
        "id": "f0bcb6e00453acf5",
        "type": "debug",
        "z": "7727e8d00df0dfd8",
        "name": "ui control debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 240,
        "wires": []
    },
    {
        "id": "e9c47502ce498663",
        "type": "change",
        "z": "7727e8d00df0dfd8",
        "name": "refresh browser",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"\"}",
                "tot": "json"
            },
            {
                "t": "delete",
                "p": "socketid",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 300,
        "wires": [
            [
                "794946e5bbb9085e"
            ]
        ]
    },
    {
        "id": "794946e5bbb9085e",
        "type": "trigger",
        "z": "7727e8d00df0dfd8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "47e20a9bef052a4d"
            ]
        ]
    },
    {
        "id": "47e20a9bef052a4d",
        "type": "ui_template",
        "z": "7727e8d00df0dfd8",
        "d": true,
        "group": "2990a1f5e28bac83",
        "name": "embedded astrospheric",
        "order": 2,
        "width": "18",
        "height": "26",
        "format": "<div id=\"AstrosphericEmbedContainer\">\n</div>\n\n<!-- {{msg._msgid}} -->\n\n<script type=\"text/javascript\">\n  m_AstrosphericEmbed.Create(\"AstrosphericEmbedContainer\", 38.95, -78.495833);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "f0bcb6e00453acf5"
            ]
        ]
    },
    {
        "id": "6211d65c3bd969c3",
        "type": "ui_template",
        "z": "7727e8d00df0dfd8",
        "group": "e14ef026db2f9ff2",
        "name": "astrospheric initialization",
        "order": 29,
        "width": 0,
        "height": 0,
        "format": "<script type=\"text/javascript\" src=\"https://astrosphericcloudstorage.blob.core.windows.net/embed/astrosphericembed.js\" />",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 350,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "138cf126d36950cd",
        "type": "inject",
        "z": "ea2f650d95177cfd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "47d0e2e6511d8df9"
            ]
        ]
    },
    {
        "id": "47d0e2e6511d8df9",
        "type": "moment",
        "z": "ea2f650d95177cfd",
        "name": "format date",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en-US",
        "output": "date",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "7e08e4f3eeb7c61c"
            ]
        ]
    },
    {
        "id": "773875ea4cb5607c",
        "type": "debug",
        "z": "ea2f650d95177cfd",
        "name": "boltwood formatted data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 80,
        "wires": []
    },
    {
        "id": "f610b11312bf3f39",
        "type": "csv",
        "z": "ea2f650d95177cfd",
        "name": "boltwood csv",
        "sep": " ",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "date, time, temperatureScale, windspeedScale, skyTemperature, ambientTemperature, caseTemperature, wind, humidity, dewPoint, heaterSetting, rainFlag, wetFlag, secondsSinceLastValidData, dateLastWrittenInDays, clouds, windFlag, rainCondition, lightLevel,  roof, alert",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "1270f1845eae6efa"
            ]
        ]
    },
    {
        "id": "f856225c5c46d18c",
        "type": "function",
        "z": "ea2f650d95177cfd",
        "name": "format data",
        "func": "if (global.get(\"rain\") > 0) {\n    wet = 2;\n}\nelse {\n    wet = 0;\n}\n\nrightNow = Date.now();\n\nlvd = flow.get(\"lastValidData\");\nconsole.log(lvd);\nsecondsSinceLastValidData = Math.round((rightNow - lvd)/1000);\ndateLastWroteInDays = lvd/86400/1000;\n\nflow.set(\"lastValidData\", rightNow);\n\navgwind = global.get(\"avgwindspeed\");\nwindFlag = 3;\nif (avgwind < 5) {\n    windFlag = 1;\n}\nelse if (avgwind < 8) {\n    windFlag = 2;\n}\n\nlux = global.get(\"lux\");\nif (lux > 50) {\n    lightLevel = 3;\n}\nelse if (lux > 5) {\n    lightLevel = 2;\n}\nelse {\n    lightLevel = 1;\n}\n\npayload={\n    \"date\":msg.date,\n    \"time\": msg.time,\n    \"temperatureScale\":\"C\",\n    \"windspeedScale\": \"K\",\n    \"skyTemperature\": -273.1,\n    \"ambientTemperature\": global.get(\"temperature\"),\n    \"caseTemperature\": global.get(\"temperature\"),\n    \"wind\": global.get(\"windspeed\") * 1000 / 3600,\n    \"humidity\": global.get(\"humidity\"),\n    \"dewPoint\": global.get(\"dewpoint\"),\n    \"heaterSetting\": 0,\n    \"rainFlag\": wet,\n    \"wetFlag\": wet,\n    \"secondsSinceLastValidData\": secondsSinceLastValidData,\n    \"dateLastWrittenInDays\": dateLastWroteInDays,\n    \"clouds\": global.get(\"boltwoodClouds\"),\n    \"windFlag\": windFlag,\n    \"rainCondition\": wet + 1,\n    \"lightLevel\": lightLevel,\n    \"roof\": 0,\n    \"alert\": 0\n};\nmsg.payload=payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 120,
        "wires": [
            [
                "773875ea4cb5607c",
                "f610b11312bf3f39"
            ]
        ]
    },
    {
        "id": "116b801d7bf4714c",
        "type": "change",
        "z": "ea2f650d95177cfd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lastValidData",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 360,
        "wires": [
            [
                "ea0d91bdbca0b909"
            ]
        ]
    },
    {
        "id": "9d52e1b059e2bd63",
        "type": "inject",
        "z": "ea2f650d95177cfd",
        "name": "initial last valid data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "116b801d7bf4714c"
            ]
        ]
    },
    {
        "id": "ea0d91bdbca0b909",
        "type": "debug",
        "z": "ea2f650d95177cfd",
        "name": "last valid data date",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 360,
        "wires": []
    },
    {
        "id": "1270f1845eae6efa",
        "type": "file",
        "z": "ea2f650d95177cfd",
        "name": "weather.txt",
        "filename": "/weatherdata/weather.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7e08e4f3eeb7c61c",
        "type": "moment",
        "z": "ea2f650d95177cfd",
        "name": "format time",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en-US",
        "output": "time",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 670,
        "y": 100,
        "wires": [
            [
                "f856225c5c46d18c"
            ]
        ]
    },
    {
        "id": "e5794d9c44dfffd5",
        "type": "catch",
        "z": "ea2f650d95177cfd",
        "name": "catch write errors",
        "scope": [
            "1270f1845eae6efa"
        ],
        "uncaught": false,
        "x": 1420,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "eaac703deff06f9e",
        "type": "inject",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1320,
        "wires": [
            [
                "7d94898d7f83a465"
            ]
        ]
    },
    {
        "id": "7d94898d7f83a465",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "initial graph load",
        "func": "const api = new AmbientWeatherApi({\n  apiKey: env.get(\"ASTRODASH_AMBIENT_WEATHER_API_KEY\"),\n  applicationKey: env.get(\"ASTRODASH_AMBIENT_WEATHER_APPLICATION_KEY\")\n})\n\napi.userDevices().then((devices) => {\n\n  devices.forEach((device) => {\n    // fetch the most recent data\n    api.deviceData(device.macAddress, {\n      limit: 2880\n    })\n    .then((deviceData) => {\n\n        temp_series = [];\n        dewpoint_series = [];      \n        humidity_series = [];\n        windspeed_series = [];\n        windgust_series = [];\n        winddir_series = [];\n        barom_series = [];\n        \n        deviceData.forEach((data) => {\n        \n            d = Date.parse(data.date);\n            \n            tempc = (data.tempf - 32) * 5 / 9;\n            temp_series.unshift({x: d, y: tempc});\n            dewpointc = (data.dewPoint - 32) * 5 / 9;\n            dewpoint_series.unshift({x: d, y: dewpointc});\n            \n            //dt = {x: d, y: data.humidity};\n            //console.log(JSON.stringify(dt, null, 4)); \n            humidity_series.unshift({x: d, y: data.humidity});\n \n            windspeed = data.windspeedmph * 1.609344;\n            windspeed_series.unshift({x: d, y: windspeed});\n            //windspeed_series.push({});\n            \n            windgust = data.windgustmph * 1.609344;\n            windgust_series.unshift({x: d, y: windgust});\n            //windgust_series.push({});\n                        \n            winddir_series.unshift({x: d, y: data.winddir});\n            winddir_series.unshift({});\n\n            barom = data.baromrelin * 33.864;\n            barom_series.unshift({x: d, y: barom});\n            \n        })\n\n        temp_msg = {};\n        hum_msg = {};\n        windspeed_msg = {};\n        winddir_msg = {};\n        barom_msg = {};\n        \n        temp_msg.payload = [{\n            \"series\": [\"Temperature\", \"Dew Point\"],\n            \"data\": [\n                temp_series,\n                dewpoint_series\n                ],\n            \"labels\": [\"Temp\", \"Dew Point\"]\n        }];   \n        \n        hum_msg.payload = [{\n            \"series\": [\"Humidity\"],\n            \"data\": [\n                humidity_series\n                ],\n            \"labels\": [\"Humidity\"]\n        }];   \n\n       windspeed_msg.payload = [{\n            \"series\": [\"Wind Speed\", \"Gust\"],\n            \"data\": [\n                windspeed_series,\n                windgust_series\n                ],\n            \"labels\": [\"Wind Speed\", \"Gust\"]\n        }];   \n\n        winddir_msg.payload = [{\n            \"series\": [\"Wind Direction\"],\n            \"data\": [\n                winddir_series\n                ],\n            \"labels\": [\"Wind Direction\"]\n        }]; \n        \n        barom_msg.payload = [{\n            \"series\": [\"Pressure\"],\n            \"data\": [\n                barom_series\n                ],\n            \"labels\": [\"Pressure\"]\n        }]; \n        \n        node.send([temp_msg, hum_msg, windspeed_msg, winddir_msg, barom_msg]);\n        node.done();\n    })\n  })\n})\n\n\nreturn;",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "AmbientWeatherApi",
                "module": "ambient-weather-api"
            }
        ],
        "x": 510,
        "y": 1320,
        "wires": [
            [
                "375b8348311eacf9"
            ],
            [
                "33aa034cceaa67a1"
            ],
            [
                "c174a08fa59c9ecd"
            ],
            [
                "a3807acef48f37e2"
            ],
            [
                "513d2e065f75fd9d"
            ]
        ]
    },
    {
        "id": "78ef800693755af3",
        "type": "catch",
        "z": "e4020236b03afc18",
        "name": "",
        "scope": [
            "7d94898d7f83a465"
        ],
        "uncaught": false,
        "x": 690,
        "y": 60,
        "wires": [
            [
                "5120e11cdd777173"
            ]
        ]
    },
    {
        "id": "5120e11cdd777173",
        "type": "debug",
        "z": "e4020236b03afc18",
        "name": "catch debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 60,
        "wires": []
    },
    {
        "id": "6f64747401da66af",
        "type": "ui_chart",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "temp/dew point chart",
        "group": "f90db7fffaaa72da",
        "order": 1,
        "width": "20",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 180,
        "wires": [
            [
                "a89c231f6a8e7f78",
                "36f214a624f287c4"
            ]
        ]
    },
    {
        "id": "a0d5c78c3c7faee3",
        "type": "ui_chart",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "humidity chart",
        "group": "f90db7fffaaa72da",
        "order": 2,
        "width": "20",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 720,
        "y": 400,
        "wires": [
            [
                "dd87803ff812c32b"
            ]
        ]
    },
    {
        "id": "04bd6b4a693e0f0c",
        "type": "ui_chart",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "wind speed chart",
        "group": "f90db7fffaaa72da",
        "order": 4,
        "width": "20",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ed719e",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 730,
        "y": 620,
        "wires": [
            [
                "4e5f13da8c9ed543"
            ]
        ]
    },
    {
        "id": "a0775d5d214d95b0",
        "type": "ui_chart",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "wind direction chart",
        "group": "f90db7fffaaa72da",
        "order": 5,
        "width": "20",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "360",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 1060,
        "wires": [
            [
                "9404943399435b65"
            ]
        ]
    },
    {
        "id": "93326e6ed3fe3255",
        "type": "ui_chart",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "pressure chart",
        "group": "f90db7fffaaa72da",
        "order": 3,
        "width": "20",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 720,
        "y": 840,
        "wires": [
            [
                "6d06bea745067fe1"
            ]
        ]
    },
    {
        "id": "433b5c07bddc7a9a",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "humidity in",
        "links": [
            "9a3b385e4867ec7e",
            "93eab2a5521f8545"
        ],
        "x": 325,
        "y": 360,
        "wires": [
            [
                "f468a778d2080826"
            ]
        ]
    },
    {
        "id": "f468a778d2080826",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "new humidity point",
        "func": "//humidity_series = flow.get(\"humidity_series\");\n//humidity_series.shift();\n\n//humidity_series.push({x: Date.now(), y: msg.payload});\n\nmsg.topic = \"Humidity\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 360,
        "wires": [
            [
                "a0d5c78c3c7faee3"
            ]
        ]
    },
    {
        "id": "10475d6acbbb4239",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "wind direction in",
        "links": [
            "7289d298e4c903c7"
        ],
        "x": 305,
        "y": 1040,
        "wires": [
            [
                "84af4bc094e62fe1"
            ]
        ]
    },
    {
        "id": "84af4bc094e62fe1",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "new wind direction point",
        "func": "//msg1 = {\n//  \"topic\": \"Wind Direction\",\n//  \"payload\": null\n//};\n\nmsg.topic = \"Wind Direction\";\n\n//node.send(msg);\n//node.send(msg1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1040,
        "wires": [
            [
                "a0775d5d214d95b0",
                "15cb9487243493a5"
            ]
        ]
    },
    {
        "id": "9e0df473e9c31958",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "temperature in",
        "links": [
            "a9b13eec30786f68"
        ],
        "x": 345,
        "y": 140,
        "wires": [
            [
                "43a2ca51de1cb058"
            ]
        ]
    },
    {
        "id": "43a2ca51de1cb058",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "new temperature point",
        "func": "msg.topic = \"Temperature\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 140,
        "wires": [
            [
                "6f64747401da66af"
            ]
        ]
    },
    {
        "id": "4eadc36993b638be",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "",
        "links": [
            "a93186e4a3dc7e59"
        ],
        "x": 325,
        "y": 800,
        "wires": [
            [
                "ca99172b0eac5606"
            ]
        ]
    },
    {
        "id": "ca99172b0eac5606",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "new pressure point",
        "func": "msg.topic = \"Pressure\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 800,
        "wires": [
            [
                "93326e6ed3fe3255"
            ]
        ]
    },
    {
        "id": "915e95353e767ee2",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "dew point in",
        "links": [
            "eec9533f5b6e7d56"
        ],
        "x": 335,
        "y": 220,
        "wires": [
            [
                "4f607f8c99ac4bfc"
            ]
        ]
    },
    {
        "id": "4f607f8c99ac4bfc",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "new dew point",
        "func": "msg.topic = \"Dew Point\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 220,
        "wires": [
            [
                "6f64747401da66af"
            ]
        ]
    },
    {
        "id": "9c6c3e190c314489",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "windspeed in",
        "links": [
            "4615e14af5802c5e"
        ],
        "x": 325,
        "y": 560,
        "wires": [
            [
                "f4f4f6f562a0e7a6"
            ]
        ]
    },
    {
        "id": "f4f4f6f562a0e7a6",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "new windspeed point",
        "func": "msg.topic = \"Wind Speed\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 560,
        "wires": [
            [
                "04bd6b4a693e0f0c"
            ]
        ]
    },
    {
        "id": "c0814215f16cf8f4",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "wind gust in",
        "links": [
            "954806dc73a93295"
        ],
        "x": 315,
        "y": 680,
        "wires": [
            [
                "bf47bd4299a3cbd2"
            ]
        ]
    },
    {
        "id": "bf47bd4299a3cbd2",
        "type": "function",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "new windgust point",
        "func": "msg.topic = \"Gust\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 680,
        "wires": [
            [
                "04bd6b4a693e0f0c"
            ]
        ]
    },
    {
        "id": "4bbaa8c65678bf5a",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1000,
        "wires": [
            [
                "a0775d5d214d95b0"
            ]
        ]
    },
    {
        "id": "15cb9487243493a5",
        "type": "delay",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 690,
        "y": 1000,
        "wires": [
            [
                "4bbaa8c65678bf5a"
            ]
        ]
    },
    {
        "id": "a89c231f6a8e7f78",
        "type": "debug",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "temperature graph",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "36f214a624f287c4",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature_graph",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a80e2fd1410c17ed",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "initial graph load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature_graph",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 180,
        "wires": [
            [
                "6f64747401da66af"
            ]
        ]
    },
    {
        "id": "8bf6d22495683709",
        "type": "inject",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "a80e2fd1410c17ed"
            ]
        ]
    },
    {
        "id": "dd87803ff812c32b",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "humidity_graph",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1132789f6828a936",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "initial graph load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "humidity_graph",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "a0d5c78c3c7faee3"
            ]
        ]
    },
    {
        "id": "68d8c43b6d63f6ef",
        "type": "inject",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 400,
        "wires": [
            [
                "1132789f6828a936"
            ]
        ]
    },
    {
        "id": "257bc937c4cd8669",
        "type": "inject",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4e5f13da8c9ed543",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "windspeed_graph",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "aa896b55f93c6db0",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "initial graph load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windspeed_graph",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "04bd6b4a693e0f0c"
            ]
        ]
    },
    {
        "id": "6d06bea745067fe1",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pressure_graph",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "70538cc97db5f924",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "initial graph load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pressure_graph",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 840,
        "wires": [
            [
                "93326e6ed3fe3255"
            ]
        ]
    },
    {
        "id": "f13c04ddf7ff0ca4",
        "type": "inject",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "9404943399435b65",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "winddirection_graph",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "58e3874f3331280c",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "initial graph load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "winddirection_graph",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "a0775d5d214d95b0"
            ]
        ]
    },
    {
        "id": "736a4079797e06e9",
        "type": "inject",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1080,
        "wires": [
            [
                "58e3874f3331280c"
            ]
        ]
    },
    {
        "id": "375b8348311eacf9",
        "type": "switch",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "Is there existing temp data?",
        "property": "temperature_graph",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 1240,
        "wires": [
            [
                "6b697a3b7b5654d3"
            ]
        ]
    },
    {
        "id": "6b697a3b7b5654d3",
        "type": "link out",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "graph out: temperature",
        "mode": "link",
        "links": [
            "2bdabbd1d0a539e2"
        ],
        "x": 1005,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2bdabbd1d0a539e2",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "graph in: temperature",
        "links": [
            "6b697a3b7b5654d3"
        ],
        "x": 545,
        "y": 260,
        "wires": [
            [
                "6f64747401da66af"
            ]
        ]
    },
    {
        "id": "33aa034cceaa67a1",
        "type": "switch",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "Is there existing humidity data?",
        "property": "humidity_graph",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 1280,
        "wires": [
            [
                "8c3dba2de5b1b948"
            ]
        ]
    },
    {
        "id": "8c3dba2de5b1b948",
        "type": "link out",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "graph out: humitity",
        "mode": "link",
        "links": [
            "423ac77cc95b0e23"
        ],
        "x": 1005,
        "y": 1280,
        "wires": []
    },
    {
        "id": "423ac77cc95b0e23",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "graph in: humidity",
        "links": [
            "8c3dba2de5b1b948"
        ],
        "x": 545,
        "y": 440,
        "wires": [
            [
                "a0d5c78c3c7faee3"
            ]
        ]
    },
    {
        "id": "c174a08fa59c9ecd",
        "type": "switch",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "Is there existing wind speed data?",
        "property": "windspeed_graph",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 800,
        "y": 1320,
        "wires": [
            [
                "985c168b939d28d1"
            ]
        ]
    },
    {
        "id": "985c168b939d28d1",
        "type": "link out",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "graph out: windspeed",
        "mode": "link",
        "links": [
            "fbb2a18aa840fd58"
        ],
        "x": 1005,
        "y": 1320,
        "wires": []
    },
    {
        "id": "fbb2a18aa840fd58",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "graph in: windspeed",
        "links": [
            "985c168b939d28d1"
        ],
        "x": 545,
        "y": 640,
        "wires": [
            [
                "04bd6b4a693e0f0c"
            ]
        ]
    },
    {
        "id": "a3807acef48f37e2",
        "type": "switch",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "Is there existing wind direction data?",
        "property": "winddirection_graph",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 1360,
        "wires": [
            [
                "b5678de17fca3aae"
            ]
        ]
    },
    {
        "id": "b5678de17fca3aae",
        "type": "link out",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "graph out: winddirection",
        "mode": "link",
        "links": [
            "6421ad3bf2fd2e78"
        ],
        "x": 1005,
        "y": 1360,
        "wires": []
    },
    {
        "id": "6421ad3bf2fd2e78",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "graph in: winddirection",
        "links": [
            "b5678de17fca3aae"
        ],
        "x": 555,
        "y": 1120,
        "wires": [
            [
                "a0775d5d214d95b0"
            ]
        ]
    },
    {
        "id": "513d2e065f75fd9d",
        "type": "switch",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "Is there existing pressure data?",
        "property": "pressure_graph",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 1400,
        "wires": [
            [
                "56d605fcf8309fa0"
            ]
        ]
    },
    {
        "id": "56d605fcf8309fa0",
        "type": "link out",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "graph out: pressure",
        "mode": "link",
        "links": [
            "ad0bd56cabc99010"
        ],
        "x": 1005,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ad0bd56cabc99010",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "graph in: pressure",
        "links": [
            "56d605fcf8309fa0"
        ],
        "x": 535,
        "y": 880,
        "wires": [
            [
                "93326e6ed3fe3255"
            ]
        ]
    },
    {
        "id": "12c96015cadf6a5f",
        "type": "ui_chart",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "Sun/Moon/SQM",
        "group": "2990a1f5e28bac83",
        "order": 1,
        "width": "18",
        "height": "26",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "waiting for data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#a8c6fe",
            "#fffbb9",
            "#ffdad8",
            "#e392fe",
            "#aaaaaa",
            "#c0c0c0",
            "#d6d6d6",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1480,
        "y": 1800,
        "wires": [
            [
                "79f1362815a2f53b"
            ]
        ]
    },
    {
        "id": "79f1362815a2f53b",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sunmoonsqm_graph",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "1be364fdfb51294a",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "graph in: sun moon 2",
        "links": [
            "2e2a56749265b05d"
        ],
        "x": 515,
        "y": 1840,
        "wires": [
            [
                "12c96015cadf6a5f"
            ]
        ]
    },
    {
        "id": "1cd0e4a76ab5ebab",
        "type": "inject",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1800,
        "wires": [
            [
                "4152dc03bc18dca0"
            ]
        ]
    },
    {
        "id": "4152dc03bc18dca0",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "initial graph load",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunmoonsqm_graph",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1800,
        "wires": [
            [
                "12c96015cadf6a5f"
            ]
        ]
    },
    {
        "id": "e90478ee1d18c595",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "graph in: sqm 2",
        "links": [
            "e4b6de8f61ab2df6"
        ],
        "x": 445,
        "y": 1580,
        "wires": [
            [
                "53b60cefe4a30cd1"
            ]
        ]
    },
    {
        "id": "32730f01f58a543e",
        "type": "link in",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "graph in: moon illumination",
        "links": [
            "e7f44d764ec41b88"
        ],
        "x": 515,
        "y": 1880,
        "wires": [
            [
                "faa9347b85645fda"
            ]
        ]
    },
    {
        "id": "faa9347b85645fda",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "moon phase topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Moon Phase",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1880,
        "wires": [
            [
                "12c96015cadf6a5f"
            ]
        ]
    },
    {
        "id": "f06dba43919bc5ec",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "astronomical",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "-18",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "astronomical",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1740,
        "wires": [
            [
                "12c96015cadf6a5f"
            ]
        ]
    },
    {
        "id": "4aad30db89f90623",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "nautical",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "-12",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "nautical",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1700,
        "wires": [
            [
                "12c96015cadf6a5f"
            ]
        ]
    },
    {
        "id": "8338a7b6d85bdd2c",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "civil",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "-6",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "civil",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1660,
        "wires": [
            [
                "12c96015cadf6a5f"
            ]
        ]
    },
    {
        "id": "53b60cefe4a30cd1",
        "type": "switch",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "Is the sky qualitly clipped?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 1580,
        "wires": [
            [
                "151639c5d017d7b6"
            ],
            [
                "e05ebdc5bef3b0f4",
                "8338a7b6d85bdd2c",
                "4aad30db89f90623",
                "f06dba43919bc5ec"
            ]
        ]
    },
    {
        "id": "e05ebdc5bef3b0f4",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lastsqm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 1600,
        "wires": [
            [
                "12c96015cadf6a5f",
                "881b5684af24c3ae"
            ]
        ]
    },
    {
        "id": "151639c5d017d7b6",
        "type": "switch",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "Was the last sqm 0?",
        "property": "lastsqm",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 1560,
        "wires": [
            [
                "c6207b39e2ea10c7"
            ],
            [
                "228eced9808259c1"
            ]
        ]
    },
    {
        "id": "228eced9808259c1",
        "type": "change",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lastsqm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 1560,
        "wires": [
            [
                "12c96015cadf6a5f",
                "34def7920fa66fb8"
            ]
        ]
    },
    {
        "id": "c6207b39e2ea10c7",
        "type": "debug",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "no sqm to graph",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1520,
        "wires": []
    },
    {
        "id": "34def7920fa66fb8",
        "type": "debug",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "starting discontinutiy in sqm graph",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 1560,
        "wires": []
    },
    {
        "id": "881b5684af24c3ae",
        "type": "debug",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "plotting sqm data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1b1cefb9a92b6706",
        "type": "comment",
        "z": "e4020236b03afc18",
        "g": "520dd1471f8040af",
        "name": "temperature / dew point",
        "info": "",
        "x": 310,
        "y": 260,
        "wires": []
    },
    {
        "id": "abe0ef0c3db5faeb",
        "type": "comment",
        "z": "e4020236b03afc18",
        "g": "cc3cf72dcf34a36c",
        "name": "humidity",
        "info": "",
        "x": 300,
        "y": 460,
        "wires": []
    },
    {
        "id": "da37d95ce3f7f7a2",
        "type": "comment",
        "z": "e4020236b03afc18",
        "g": "3fa4e13f9a5b932e",
        "name": "wind speed",
        "info": "",
        "x": 910,
        "y": 560,
        "wires": []
    },
    {
        "id": "4bb34b5681c4e03f",
        "type": "comment",
        "z": "e4020236b03afc18",
        "g": "5c874fa62172797a",
        "name": "barometric pressure",
        "info": "",
        "x": 950,
        "y": 780,
        "wires": []
    },
    {
        "id": "2e8b5c76ec327d24",
        "type": "comment",
        "z": "e4020236b03afc18",
        "g": "5654330de52c3811",
        "name": "wind direction",
        "info": "",
        "x": 1310,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6fd1b1e835eee451",
        "type": "comment",
        "z": "e4020236b03afc18",
        "g": "e6e0dc19af167a95",
        "name": "initial graph load",
        "info": "",
        "x": 300,
        "y": 1240,
        "wires": []
    },
    {
        "id": "fcb61fc293721bfd",
        "type": "comment",
        "z": "e4020236b03afc18",
        "g": "361e6e3cde3c175b",
        "name": "Moon/Sun/SQM graph",
        "info": "This graph has moved to th emain page and shows the sun altitude, moon altitude, moon phase, and sky quality along with lines to denote the boundaries for civil twilight, nautical twilight and astronomical twilight",
        "x": 300,
        "y": 1540,
        "wires": []
    },
    {
        "id": "fa9a371225c8623b",
        "type": "mqtt in",
        "z": "2019792e5d9e1148",
        "d": true,
        "name": "weather/batt_lightning",
        "topic": "weather/batt_lightning",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "6a45be9445e41281",
                "958044844297e28e",
                "6f51ba83cf4b9e7a"
            ]
        ]
    },
    {
        "id": "6a45be9445e41281",
        "type": "debug",
        "z": "2019792e5d9e1148",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 240,
        "wires": []
    },
    {
        "id": "958044844297e28e",
        "type": "ui_led",
        "z": "2019792e5d9e1148",
        "d": true,
        "order": 13,
        "group": "2dd7db31dc1fc228",
        "width": 0,
        "height": 0,
        "label": "Wx Lightning Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "wx lightning battery status",
        "x": 500,
        "y": 180,
        "wires": []
    },
    {
        "id": "2dbd3db688495556",
        "type": "inject",
        "z": "2019792e5d9e1148",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 40,
        "wires": [
            [
                "ae4577c0064a5715"
            ]
        ]
    },
    {
        "id": "6f51ba83cf4b9e7a",
        "type": "switch",
        "z": "2019792e5d9e1148",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "ae4577c0064a5715"
            ]
        ]
    },
    {
        "id": "ae4577c0064a5715",
        "type": "change",
        "z": "2019792e5d9e1148",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lightning battery warning",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "d8714d39fc2b35bb"
            ]
        ]
    },
    {
        "id": "d8714d39fc2b35bb",
        "type": "link out",
        "z": "2019792e5d9e1148",
        "name": "lightning battery alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 965,
        "y": 100,
        "wires": []
    },
    {
        "id": "065f404a70cfcf10",
        "type": "mqtt in",
        "z": "2019792e5d9e1148",
        "d": true,
        "name": "weather/lightning_num",
        "topic": "weather/lightning_num",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 420,
        "wires": [
            [
                "94edad03400de512",
                "ee6e1e5faee28f89"
            ]
        ]
    },
    {
        "id": "94edad03400de512",
        "type": "ui_text",
        "z": "2019792e5d9e1148",
        "d": true,
        "group": "e14ef026db2f9ff2",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Lightning Strikes",
        "label": "Lightning Strikes",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 470,
        "y": 420,
        "wires": []
    },
    {
        "id": "ee6e1e5faee28f89",
        "type": "switch",
        "z": "2019792e5d9e1148",
        "d": true,
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 500,
        "wires": [
            [
                "fa7e1282a2a29bad"
            ]
        ]
    },
    {
        "id": "fa7e1282a2a29bad",
        "type": "change",
        "z": "2019792e5d9e1148",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Lightning detected withn 25 miles.",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 500,
        "wires": [
            [
                "9f4672508836a203"
            ]
        ]
    },
    {
        "id": "9f4672508836a203",
        "type": "link out",
        "z": "2019792e5d9e1148",
        "name": "lightning battery alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 835,
        "y": 500,
        "wires": []
    },
    {
        "id": "aff7608189f42781",
        "type": "mqtt in",
        "z": "2019792e5d9e1148",
        "d": true,
        "name": "weather/tswarning",
        "topic": "weather/tswarning",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 840,
        "wires": [
            [
                "50c017c218c1a9d9",
                "5f593d5256b3bebe",
                "8fbaf195282842e2"
            ]
        ]
    },
    {
        "id": "50c017c218c1a9d9",
        "type": "ui_led",
        "z": "2019792e5d9e1148",
        "d": true,
        "order": 7,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "Thunderstorm Warning",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "False",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "True",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "thunderstrom warning",
        "x": 460,
        "y": 840,
        "wires": []
    },
    {
        "id": "5f593d5256b3bebe",
        "type": "switch",
        "z": "2019792e5d9e1148",
        "d": true,
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 920,
        "wires": [
            [
                "29502d369c3c8add"
            ]
        ]
    },
    {
        "id": "29502d369c3c8add",
        "type": "link out",
        "z": "2019792e5d9e1148",
        "name": "lightning battery alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 585,
        "y": 920,
        "wires": []
    },
    {
        "id": "8fbaf195282842e2",
        "type": "debug",
        "z": "2019792e5d9e1148",
        "name": "tswarning",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 780,
        "wires": []
    },
    {
        "id": "78bdce2fc279f0cb",
        "type": "mqtt in",
        "z": "2019792e5d9e1148",
        "d": true,
        "name": "weather/lightning_time",
        "topic": "weather/lightning_time",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 620,
        "wires": [
            [
                "c4502d139dfba5a8"
            ]
        ]
    },
    {
        "id": "0b03dae91b1ab6d5",
        "type": "function",
        "z": "2019792e5d9e1148",
        "name": "was the lightning within 24 hours?",
        "func": "lightning_time = msg.payload[\"weather/lightning_time\"] * 1000;\nnow = Date.now();\ndelta = now - lightning_time;\n\n// number of milliseconds in 24 hours\nthreshold = 24 * 60 * 60 * 1000;\n\n//console.log(\"now: \" + now);\n//console.log(\"lt:  \" + lightning_time);\n//console.log(\"th:  \" + threshold);\n//console.log(\"del: \" + delta);\n\nif (delta > threshold) {\n    msg.payload = \"none\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 620,
        "wires": [
            [
                "8621edbfd6dfa6f2",
                "74e20a13d0a15cca"
            ]
        ]
    },
    {
        "id": "01feca30efcc9776",
        "type": "mqtt in",
        "z": "2019792e5d9e1148",
        "d": true,
        "name": "weather/lightning",
        "topic": "weather/lightning",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 700,
        "wires": [
            [
                "c4502d139dfba5a8"
            ]
        ]
    },
    {
        "id": "8621edbfd6dfa6f2",
        "type": "moment",
        "z": "2019792e5d9e1148",
        "name": "",
        "topic": "",
        "input": "payload[\"weather/lightning_time\"]",
        "inputType": "msg",
        "inTz": "America/New_York",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en-US",
        "output": "payload[\"weather/lightning_time\"]",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 920,
        "y": 620,
        "wires": [
            [
                "956c0bfd70af80e4"
            ]
        ]
    },
    {
        "id": "956c0bfd70af80e4",
        "type": "function",
        "z": "2019792e5d9e1148",
        "name": "format with distance if available",
        "func": "lightning_time = msg.payload[\"weather/lightning_time\"];\nlightning_distance = msg.payload[\"weather/lightning\"];\n\nif (msg.payload !== \"none\") {\n    msg.payload = lightning_time + \" (\" + lightning_distance + \"km)\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 620,
        "wires": [
            [
                "bd6e883cff768aea",
                "778c786a11fbb0d6"
            ]
        ]
    },
    {
        "id": "bd6e883cff768aea",
        "type": "ui_text",
        "z": "2019792e5d9e1148",
        "d": true,
        "group": "e14ef026db2f9ff2",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Last Lightning",
        "label": "Last Lightning",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 620,
        "wires": []
    },
    {
        "id": "c4502d139dfba5a8",
        "type": "join",
        "z": "2019792e5d9e1148",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "0b03dae91b1ab6d5"
            ]
        ]
    },
    {
        "id": "778c786a11fbb0d6",
        "type": "debug",
        "z": "2019792e5d9e1148",
        "name": "lightning time/distance",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 500,
        "wires": []
    },
    {
        "id": "74e20a13d0a15cca",
        "type": "debug",
        "z": "2019792e5d9e1148",
        "name": "lightning within 24 hours?",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 700,
        "wires": []
    },
    {
        "id": "714c90d43d2b36c8",
        "type": "http request",
        "z": "f0782f40c227738a",
        "name": "is the nina web server up? (ethernet)",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "d9e770b4ce3fa051",
                "2e72f6184150a5e3",
                "cb73ee2fa7b5af3b"
            ]
        ]
    },
    {
        "id": "7b2185fd10309f2d",
        "type": "inject",
        "z": "f0782f40c227738a",
        "name": "every 1 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "4917f13ae3d575d5"
            ]
        ]
    },
    {
        "id": "6942aedc137172b5",
        "type": "catch",
        "z": "f0782f40c227738a",
        "name": "catch if no ethernet",
        "scope": [
            "714c90d43d2b36c8"
        ],
        "uncaught": false,
        "x": 170,
        "y": 340,
        "wires": [
            [
                "627f25fbc8c78d97"
            ]
        ]
    },
    {
        "id": "d9e770b4ce3fa051",
        "type": "change",
        "z": "f0782f40c227738a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 220,
        "wires": [
            [
                "92bc90a9fa69bb45"
            ]
        ]
    },
    {
        "id": "acd866ed3402e9e0",
        "type": "change",
        "z": "f0782f40c227738a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "92bc90a9fa69bb45"
            ]
        ]
    },
    {
        "id": "ce05e4ccee0dd301",
        "type": "change",
        "z": "f0782f40c227738a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NINA is down",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 520,
        "wires": [
            [
                "9604a1919ae43382"
            ]
        ]
    },
    {
        "id": "9604a1919ae43382",
        "type": "link out",
        "z": "f0782f40c227738a",
        "name": "sqm alert to pushover",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1265,
        "y": 520,
        "wires": []
    },
    {
        "id": "8d025c3131e90229",
        "type": "change",
        "z": "f0782f40c227738a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nina_is_up",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2e72f6184150a5e3",
        "type": "change",
        "z": "f0782f40c227738a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nina_is_up",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4782aa104c7b2d13",
        "type": "ui_ui_control",
        "z": "f0782f40c227738a",
        "name": "",
        "events": "change",
        "x": 1300,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "cb73ee2fa7b5af3b",
        "type": "change",
        "z": "f0782f40c227738a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Home_Column_5\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "4782aa104c7b2d13"
            ]
        ]
    },
    {
        "id": "3801430468d51bf7",
        "type": "ui_ui_control",
        "z": "f0782f40c227738a",
        "name": "",
        "events": "change",
        "x": 1300,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4c35dacf0ea3e182",
        "type": "change",
        "z": "f0782f40c227738a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Home_Column_5\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 600,
        "wires": [
            [
                "3801430468d51bf7"
            ]
        ]
    },
    {
        "id": "c042e0ee32f2b4f2",
        "type": "http request",
        "z": "f0782f40c227738a",
        "name": "is the nina web server up? (wifi)",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 340,
        "wires": [
            [
                "cb73ee2fa7b5af3b",
                "2e72f6184150a5e3",
                "d9e770b4ce3fa051"
            ]
        ]
    },
    {
        "id": "e61b185b9579f65d",
        "type": "catch",
        "z": "f0782f40c227738a",
        "name": "catch if no wifi",
        "scope": [
            "c042e0ee32f2b4f2"
        ],
        "uncaught": false,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "acd866ed3402e9e0",
                "ce05e4ccee0dd301",
                "8d025c3131e90229",
                "4c35dacf0ea3e182",
                "44757b6a07221cf4"
            ]
        ]
    },
    {
        "id": "44757b6a07221cf4",
        "type": "debug",
        "z": "f0782f40c227738a",
        "name": "nina wifi is not reachable",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 640,
        "wires": []
    },
    {
        "id": "92bc90a9fa69bb45",
        "type": "link out",
        "z": "f0782f40c227738a",
        "name": "ui out: nina status",
        "mode": "link",
        "links": [
            "0158520f2a62a119"
        ],
        "x": 1305,
        "y": 320,
        "wires": []
    },
    {
        "id": "4917f13ae3d575d5",
        "type": "function",
        "z": "f0782f40c227738a",
        "name": "make nina ethernet url",
        "func": "msg.url = \"http://\" + global.get(\"nina_ethernet\") + \"/dist\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 200,
        "wires": [
            [
                "714c90d43d2b36c8",
                "d94e7199fc420e80"
            ]
        ]
    },
    {
        "id": "d94e7199fc420e80",
        "type": "debug",
        "z": "f0782f40c227738a",
        "name": "nina ethernet url",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "url",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "627f25fbc8c78d97",
        "type": "function",
        "z": "f0782f40c227738a",
        "name": "make nina ethernet url",
        "func": "msg.url = \"http://\" + global.get(\"nina_wifi\") + \"/dist\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 340,
        "wires": [
            [
                "c042e0ee32f2b4f2",
                "8ccf82c9201121d6"
            ]
        ]
    },
    {
        "id": "8ccf82c9201121d6",
        "type": "debug",
        "z": "f0782f40c227738a",
        "name": "nina wifi url",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "url",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "d9820c9b732a0325",
        "type": "http request",
        "z": "fdcdb90c024a5bbb",
        "name": "see if it is active",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://photoncatcher-wifi.lan:32000/Driver/Uranus/Active?DriverUniqueKey=9abb9508-189b-4ca5-9e3c-eb657ef39cdd",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 300,
        "y": 340,
        "wires": [
            [
                "4765efcf83773685",
                "4e0f1f6071ebe14b"
            ]
        ]
    },
    {
        "id": "e7ec06edec1c6468",
        "type": "inject",
        "z": "fdcdb90c024a5bbb",
        "name": "Inject the UID for the meteo sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "",
        "payload": "abb9508-189b-4ca5-9e3c-eb657ef39cdd",
        "payloadType": "str",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "d9820c9b732a0325"
            ]
        ]
    },
    {
        "id": "4765efcf83773685",
        "type": "debug",
        "z": "fdcdb90c024a5bbb",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 60,
        "wires": []
    },
    {
        "id": "f2468b23a401b945",
        "type": "switch",
        "z": "fdcdb90c024a5bbb",
        "name": "Is the sensor connected?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Connected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 380,
        "wires": [
            [
                "34d74f3c22a5e7cc"
            ],
            [
                "4987a106e28ba4b4"
            ]
        ]
    },
    {
        "id": "4e0f1f6071ebe14b",
        "type": "change",
        "z": "fdcdb90c024a5bbb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.message.state",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 340,
        "wires": [
            [
                "f2468b23a401b945",
                "4765efcf83773685"
            ]
        ]
    },
    {
        "id": "34d74f3c22a5e7cc",
        "type": "http request",
        "z": "fdcdb90c024a5bbb",
        "name": "request sensor data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://10.1.10.52:32000/Driver/Uranus/Report?DriverUniqueKey=9abb9508-189b-4ca5-9e3c-eb657ef39cdd",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1040,
        "y": 340,
        "wires": [
            [
                "8f15f6641616ab7b",
                "4765efcf83773685",
                "374da15a4403578d"
            ]
        ]
    },
    {
        "id": "8f15f6641616ab7b",
        "type": "change",
        "z": "fdcdb90c024a5bbb",
        "name": "Extract cloud data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.message.cloudCoverage.percentage",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 300,
        "wires": [
            [
                "098441b9a36dfb58"
            ]
        ]
    },
    {
        "id": "4987a106e28ba4b4",
        "type": "change",
        "z": "fdcdb90c024a5bbb",
        "name": "sensor offline message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "offline",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 520,
        "wires": [
            [
                "f54efe9ab3142f47"
            ]
        ]
    },
    {
        "id": "f54efe9ab3142f47",
        "type": "ui_text",
        "z": "fdcdb90c024a5bbb",
        "d": true,
        "group": "cdc48dfa5db8c7e1",
        "order": 7,
        "width": "6",
        "height": "1",
        "name": "Sky Quality (peg)",
        "label": "Sky Quality (peg)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1530,
        "y": 460,
        "wires": []
    },
    {
        "id": "374da15a4403578d",
        "type": "change",
        "z": "fdcdb90c024a5bbb",
        "name": "Extract sky qualtiy data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.message.skyQuality.mpsas",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "f54efe9ab3142f47",
                "87836f30e520d828"
            ]
        ]
    },
    {
        "id": "fc583e236f40ffb1",
        "type": "catch",
        "z": "fdcdb90c024a5bbb",
        "name": "catch connection errors",
        "scope": [
            "d9820c9b732a0325"
        ],
        "uncaught": false,
        "x": 500,
        "y": 480,
        "wires": [
            [
                "4987a106e28ba4b4"
            ]
        ]
    },
    {
        "id": "87836f30e520d828",
        "type": "link out",
        "z": "fdcdb90c024a5bbb",
        "name": "Send to SQM grsaph",
        "mode": "link",
        "links": [
            "d475816fd52d8d9a"
        ],
        "x": 1635,
        "y": 400,
        "wires": []
    },
    {
        "id": "098441b9a36dfb58",
        "type": "link out",
        "z": "fdcdb90c024a5bbb",
        "name": "ui out: cloud coverage",
        "mode": "link",
        "links": [
            "884aae1a3e8ecabf"
        ],
        "x": 1525,
        "y": 320,
        "wires": []
    },
    {
        "id": "610f82b2a6663fe0",
        "type": "pushover",
        "z": "8cef74c5748101c2",
        "name": "Alert to Pushover",
        "device": "",
        "title": "Astro Dash",
        "priority": "0",
        "sound": "spacealarm",
        "url": "",
        "url_title": "",
        "html": false,
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "efaa571da65ced61",
        "type": "link in",
        "z": "8cef74c5748101c2",
        "name": "Pushover Alert",
        "links": [
            "fa9b9b0211b1fb98",
            "f4ed794a2f70cd8b",
            "c9922830b97c0bfa",
            "1a9357567dd3b77a",
            "c7b0bbd172430473",
            "568d84438a0fb70c",
            "79afcb09a92f7735",
            "67024f3c6d6fc188",
            "8cdeafdf9e050fd5",
            "dc4d0172d202093f",
            "0ffe1b3532d4461f",
            "c4fe7a1bc2687883",
            "d1f03acec3ca5d44",
            "50c93afe019d37eb",
            "6dcf94ad690e2187",
            "eb49811618e4e268",
            "9a266947f7b053f8",
            "2f523300a989bf8f",
            "fe1b62e462acb010",
            "6970a8deb4112637",
            "9604a1919ae43382",
            "cde1d888f6b92e6e",
            "56300b7f4cf1b45a",
            "772d36f352bd7b6f",
            "d8714d39fc2b35bb",
            "9f4672508836a203",
            "29502d369c3c8add",
            "4fae74c9148f1c74",
            "2806a7127058a32c"
        ],
        "x": 275,
        "y": 180,
        "wires": [
            [
                "cac5a61b2934f2f9"
            ]
        ]
    },
    {
        "id": "cac5a61b2934f2f9",
        "type": "switch",
        "z": "8cef74c5748101c2",
        "name": "",
        "property": "pushover_alert",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 180,
        "wires": [
            [
                "610f82b2a6663fe0"
            ]
        ]
    },
    {
        "id": "92c5cf78053b4d78",
        "type": "inject",
        "z": "a99d58eea4e0c4c9",
        "name": "every 1 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "dae29fd02bd029cb"
            ]
        ]
    },
    {
        "id": "dae29fd02bd029cb",
        "type": "function",
        "z": "a99d58eea4e0c4c9",
        "name": "check safety conditions",
        "func": "msg = {};\n\nif (global.get(\"cloudCover\") == 100 ||\n    global.get(\"avgwindspeed\") > global.get(\"max_safe_avg_wind_speed\") ||\n    global.get(\"rain\") ||\n    global.get(\"rainInRegion\") ||\n    global.get(\"pop\") > global.get(\"max_safe_pop\") || \n    global.get(\"forecastPrecip\") > 0 ||\n    global.get(\"humidity\") > global.get(\"max_safe_humidity\")) {\n    console.log(\"clouds = \" + global.get(\"cloudCover\") + \n                \", avgWindSpeed = \" + global.get(\"avgwindspeed\") + \n                \", humidity = \" + global.get(\"humidity\") +\n                \", rain = \" + global.get(\"rain\") + \n                \", rainInRegion = \" + global.get(\"rainInRegion\") +\n                \", pop = \" + global.get(\"pop\") +\n                \", forecastPrecip = \" + global.get(\"forecastPrecip\"))\n    msg.payload = \"UNSAFE\";\n    global.set(\"is_safe\", false);\n}\nelse {\n    msg.payload = \"safe\";\n    global.set(\"is_safe\", true);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 80,
        "wires": [
            [
                "273e81b5525fbf8c",
                "47f02b12aa582789",
                "54c52e8993f116a4"
            ]
        ]
    },
    {
        "id": "273e81b5525fbf8c",
        "type": "debug",
        "z": "a99d58eea4e0c4c9",
        "name": "safety monitor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 80,
        "wires": []
    },
    {
        "id": "47f02b12aa582789",
        "type": "file",
        "z": "a99d58eea4e0c4c9",
        "name": "safety.txt",
        "filename": "/weatherdata/safety.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 660,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b5cef1c6c944635d",
        "type": "catch",
        "z": "a99d58eea4e0c4c9",
        "name": "catch write errors",
        "scope": [
            "47f02b12aa582789"
        ],
        "uncaught": false,
        "x": 1200,
        "y": 80,
        "wires": [
            []
        ],
        "info": "Silently catch errors writing the safety file."
    },
    {
        "id": "54c52e8993f116a4",
        "type": "switch",
        "z": "a99d58eea4e0c4c9",
        "name": "safety check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "safe",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 160,
        "wires": [
            [
                "6fee64d293521e8e"
            ],
            [
                "800f0ad58351cfec",
                "5b119707305c7221"
            ]
        ]
    },
    {
        "id": "6fee64d293521e8e",
        "type": "change",
        "z": "a99d58eea4e0c4c9",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 160,
        "wires": [
            [
                "302cf52560850b43"
            ]
        ]
    },
    {
        "id": "800f0ad58351cfec",
        "type": "change",
        "z": "a99d58eea4e0c4c9",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 200,
        "wires": [
            [
                "302cf52560850b43"
            ]
        ]
    },
    {
        "id": "302cf52560850b43",
        "type": "link out",
        "z": "a99d58eea4e0c4c9",
        "name": "ui out: safe conditions",
        "mode": "link",
        "links": [
            "4492eccee3c82cae",
            "f532ebe1043bc73c"
        ],
        "x": 1005,
        "y": 180,
        "wires": []
    },
    {
        "id": "09323a6073557882",
        "type": "inject",
        "z": "a99d58eea4e0c4c9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "4f3b2bf059a0bca6"
            ]
        ]
    },
    {
        "id": "4f3b2bf059a0bca6",
        "type": "change",
        "z": "a99d58eea4e0c4c9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cloudCover",
                "pt": "msg",
                "to": "cloudCover",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "rain",
                "pt": "msg",
                "to": "rain",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "rainInRegion",
                "pt": "msg",
                "to": "rainInRegion",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "pop",
                "pt": "msg",
                "to": "pop",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "avgwindspeed",
                "pt": "msg",
                "to": "avgwindspeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "24cd2ae463417d8a"
            ]
        ]
    },
    {
        "id": "24cd2ae463417d8a",
        "type": "debug",
        "z": "a99d58eea4e0c4c9",
        "name": "unsafe debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 360,
        "wires": []
    },
    {
        "id": "5b119707305c7221",
        "type": "change",
        "z": "a99d58eea4e0c4c9",
        "name": "pushover alert",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Unsafe Conditions!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 240,
        "wires": [
            [
                "2806a7127058a32c"
            ]
        ]
    },
    {
        "id": "2806a7127058a32c",
        "type": "link out",
        "z": "a99d58eea4e0c4c9",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1005,
        "y": 240,
        "wires": []
    },
    {
        "id": "8a0237d5ee697d65",
        "type": "ui_switch",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "label": "Temperature in Celsius",
        "tooltip": "on for C / off for F",
        "group": "feb302518e44027c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "temperature_celsius",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 660,
        "y": 260,
        "wires": [
            [
                "0be522eab72e0051",
                "84d96db8fb60c915"
            ]
        ]
    },
    {
        "id": "0be522eab72e0051",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature_celsius",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "84d96db8fb60c915",
        "type": "link out",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "Update Temperature Displays",
        "mode": "link",
        "links": [
            "f2399cc8e3f09a67",
            "13e7fe871a47e6ba",
            "e017a2edda3665cd",
            "6229e55e92ae6014",
            "9bb3b9ec70b4c3e1",
            "5e133a9a292e037c"
        ],
        "x": 825,
        "y": 220,
        "wires": []
    },
    {
        "id": "70e17fd303e2e3cd",
        "type": "ui_switch",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "label": "Barometer in millibars",
        "tooltip": "on for mb / off for in HG",
        "group": "feb302518e44027c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "pressure_mb",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 660,
        "y": 340,
        "wires": [
            [
                "0cc4794ff6f7f8a9",
                "4e51208274564588"
            ]
        ]
    },
    {
        "id": "0cc4794ff6f7f8a9",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pressure_mb",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "4e51208274564588",
        "type": "link out",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "Update Pressure Display Units",
        "mode": "link",
        "links": [
            "9595115d9ce15971"
        ],
        "x": 825,
        "y": 300,
        "wires": []
    },
    {
        "id": "df46eaf91e5e3350",
        "type": "ui_switch",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "label": "Wind in KPH",
        "tooltip": "on for KPH / off for MPH",
        "group": "feb302518e44027c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "wind_kph",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 420,
        "wires": [
            [
                "c0fd6bf828b1f6fb",
                "a107a8b7016b65ef"
            ]
        ]
    },
    {
        "id": "c0fd6bf828b1f6fb",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "wind_kph",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a107a8b7016b65ef",
        "type": "link out",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "Update Wind Display Units",
        "mode": "link",
        "links": [
            "722e7956079c2bdf",
            "ccd4ef1b94a770e0",
            "96ed5e7ff82fa343",
            "84255badf2e9b194",
            "7ae248ed6c6eef06",
            "cd3ae8e731fc5c28"
        ],
        "x": 815,
        "y": 380,
        "wires": []
    },
    {
        "id": "db2fc9f1efa68c0d",
        "type": "ui_switch",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "label": "Rain in mm",
        "tooltip": "on for mm / off for in",
        "group": "feb302518e44027c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "rain_in_mm",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 500,
        "wires": [
            [
                "f1f1ae5c06478077",
                "a3585fe8cf0d3a3b"
            ]
        ]
    },
    {
        "id": "f1f1ae5c06478077",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rain_mm",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a3585fe8cf0d3a3b",
        "type": "link out",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "Update Rain Units",
        "mode": "link",
        "links": [
            "9fec7ac7b267d9ba",
            "ad3d83a2fec587ee",
            "ab8639744e65f8a2",
            "a63350430e5109ad",
            "80a6fc36ac9fa775",
            "814395124372c18d"
        ],
        "x": 815,
        "y": 460,
        "wires": []
    },
    {
        "id": "496a24be3f57a1ea",
        "type": "ui_switch",
        "z": "1b5ddca5773a54ff",
        "g": "aab3b5d8a8f55987",
        "name": "",
        "label": "Alert to PushOver",
        "tooltip": "turn pushover alerts ton or off",
        "group": "2dd7db31dc1fc228",
        "order": 20,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "pushover_apler",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1690,
        "y": 380,
        "wires": [
            [
                "9dc9d30323babbae"
            ]
        ]
    },
    {
        "id": "9dc9d30323babbae",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "aab3b5d8a8f55987",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pushover_alert",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f7565f819cd2b4d6",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "lattitude",
        "label": "Lattitude",
        "tooltip": "Lattitude in decima degrees of your location",
        "group": "efd2d8c48e84ee1d",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1700,
        "y": 160,
        "wires": [
            [
                "8485a6a93baf8c7f"
            ]
        ]
    },
    {
        "id": "8485a6a93baf8c7f",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lattitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "82a845cf47d39b8d",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "longitude",
        "label": "Longitude",
        "tooltip": "Longitude in decima degrees of your location",
        "group": "efd2d8c48e84ee1d",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1700,
        "y": 200,
        "wires": [
            [
                "b8406bf3169c5c35"
            ]
        ]
    },
    {
        "id": "b8406bf3169c5c35",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "longitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1b2e264647e2677e",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "d": true,
        "g": "a82a4b570ea2a091",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aw_client_secret",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "43454f7d5c222c5b",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "map_zoom",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c5f41daf91a1ac14",
        "type": "ui_dropdown",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "map zoom level",
        "label": "Map Zoom Level",
        "tooltip": "1 == max zoom out; 20 max zoom in",
        "place": "Select option",
        "group": "dd7df2b889616f2c",
        "order": 4,
        "width": "6",
        "height": "2",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "1",
                "type": "str"
            },
            {
                "label": "",
                "value": "2",
                "type": "str"
            },
            {
                "label": "",
                "value": "3",
                "type": "str"
            },
            {
                "label": "",
                "value": "4",
                "type": "str"
            },
            {
                "label": "",
                "value": "5",
                "type": "str"
            },
            {
                "label": "",
                "value": "6",
                "type": "str"
            },
            {
                "label": "",
                "value": "7",
                "type": "str"
            },
            {
                "label": "",
                "value": "8",
                "type": "str"
            },
            {
                "label": "",
                "value": "9",
                "type": "str"
            },
            {
                "label": "",
                "value": "10",
                "type": "str"
            },
            {
                "label": "",
                "value": "11",
                "type": "str"
            },
            {
                "label": "",
                "value": "12",
                "type": "str"
            },
            {
                "label": "",
                "value": "13",
                "type": "str"
            },
            {
                "label": "",
                "value": "14",
                "type": "str"
            },
            {
                "label": "",
                "value": "15",
                "type": "str"
            },
            {
                "label": "",
                "value": "16",
                "type": "str"
            },
            {
                "label": "",
                "value": "17",
                "type": "str"
            },
            {
                "label": "",
                "value": "18",
                "type": "str"
            },
            {
                "label": "",
                "value": "19",
                "type": "str"
            },
            {
                "label": "",
                "value": "20",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 660,
        "wires": [
            [
                "43454f7d5c222c5b"
            ]
        ]
    },
    {
        "id": "c484149d58b2a829",
        "type": "debug",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "cloud image",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 740,
        "wires": []
    },
    {
        "id": "3f38b8ee0b51c46e",
        "type": "http request",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "Fetch cloud background image",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 780,
        "wires": [
            [
                "c484149d58b2a829",
                "ac98a151c4e14b91"
            ]
        ]
    },
    {
        "id": "144b953530473380",
        "type": "file",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "write cloud image file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1160,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "726f711d65a6820d",
        "type": "debug",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "cloud filename",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 740,
        "wires": []
    },
    {
        "id": "ac98a151c4e14b91",
        "type": "string",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "set cloud fielname",
        "methods": [
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": "/statichttp/aeris/cloud-background.png"
                    }
                ]
            }
        ],
        "prop": "",
        "propout": "filename",
        "object": "str",
        "objectout": "msg",
        "x": 930,
        "y": 780,
        "wires": [
            [
                "144b953530473380",
                "726f711d65a6820d"
            ]
        ]
    },
    {
        "id": "af9b954a5dd7b7a7",
        "type": "function",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "construct base IR clouds url",
        "func": "map_zoom = parseInt(global.get(\"map_zoom\"));\n\nmsg.url = \"https://maps.aerisapi.com/\" + \n    global.get(\"aw_client_id\") + \"_\" +\n    global.get(\"aw_client_secret\") +\n    \"/admin,counties,/256x256/\" +\n    global.get(\"lattitude\") + \",\" +\n    global.get(\"longitude\") + \",\" +\n    map_zoom +\n    \"/current.png\";\n    \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 780,
        "wires": [
            [
                "3f38b8ee0b51c46e",
                "056309a51962f5a8"
            ]
        ]
    },
    {
        "id": "056309a51962f5a8",
        "type": "debug",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "cloud url",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 740,
        "wires": []
    },
    {
        "id": "daa6f70510400c79",
        "type": "ui_button",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "fetch maps",
        "group": "dd7df2b889616f2c",
        "order": 5,
        "width": "6",
        "height": "2",
        "passthru": false,
        "label": "Fetch Map Backgrounds",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "af9b954a5dd7b7a7",
                "c1193ca923c266ac"
            ]
        ]
    },
    {
        "id": "d02a7cf408cbc3d7",
        "type": "debug",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "radar image",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 840,
        "wires": []
    },
    {
        "id": "fcb70abe92301986",
        "type": "http request",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "Fetch radar background image",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 880,
        "wires": [
            [
                "d02a7cf408cbc3d7",
                "b2c8e00cbf566189"
            ]
        ]
    },
    {
        "id": "73788774518c19ee",
        "type": "file",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "write radar image file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1160,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "c1e53fa6f9588f48",
        "type": "debug",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "radar filename",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 840,
        "wires": []
    },
    {
        "id": "b2c8e00cbf566189",
        "type": "string",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "set radar  fielname",
        "methods": [
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": "/statichttp/aeris/radar-background.png"
                    }
                ]
            }
        ],
        "prop": "",
        "propout": "filename",
        "object": "str",
        "objectout": "msg",
        "x": 930,
        "y": 880,
        "wires": [
            [
                "73788774518c19ee",
                "c1e53fa6f9588f48"
            ]
        ]
    },
    {
        "id": "c1193ca923c266ac",
        "type": "function",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "construct base radar  url",
        "func": "msg.url = \"https://maps.aerisapi.com/\" + \n    global.get(\"aw_client_id\") + \"_\" +\n    global.get(\"aw_client_secret\") +\n    \"/flat,counties,admin/256x256/\" +\n    global.get(\"lattitude\") + \",\" +\n    global.get(\"longitude\") + \",\" +\n    global.get(\"map_zoom\") +\n    \"/current.png\";\n    \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 880,
        "wires": [
            [
                "fcb70abe92301986",
                "96ccca690a1ad6b1"
            ]
        ]
    },
    {
        "id": "96ccca690a1ad6b1",
        "type": "debug",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "cloud url",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 840,
        "wires": []
    },
    {
        "id": "ebb4b5ce7c56b276",
        "type": "comment",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "Aeris Weather Settings",
        "info": "",
        "x": 220,
        "y": 600,
        "wires": []
    },
    {
        "id": "90e8324e29722d59",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 660,
        "wires": [
            [
                "aca3155682d9d653"
            ]
        ]
    },
    {
        "id": "aca3155682d9d653",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "a82a4b570ea2a091",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "map_zoom",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 660,
        "wires": [
            [
                "c5f41daf91a1ac14"
            ]
        ]
    },
    {
        "id": "3f56694e6470923f",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1280,
        "y": 160,
        "wires": [
            [
                "c6103b9e6ec7ea50"
            ]
        ]
    },
    {
        "id": "c6103b9e6ec7ea50",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lattitude",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 160,
        "wires": [
            [
                "f7565f819cd2b4d6"
            ]
        ]
    },
    {
        "id": "8cb7624f7797ebb1",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1280,
        "y": 200,
        "wires": [
            [
                "f955d3f070307c70"
            ]
        ]
    },
    {
        "id": "f955d3f070307c70",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "longitude",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 200,
        "wires": [
            [
                "82a845cf47d39b8d"
            ]
        ]
    },
    {
        "id": "7a4bd18f6b6994a8",
        "type": "comment",
        "z": "1b5ddca5773a54ff",
        "g": "f7c384760b13d7c8",
        "name": "Location Settings",
        "info": "",
        "x": 1320,
        "y": 100,
        "wires": []
    },
    {
        "id": "4e52a6a8a6ccd360",
        "type": "comment",
        "z": "1b5ddca5773a54ff",
        "g": "aab3b5d8a8f55987",
        "name": "Pushover Settings",
        "info": "",
        "x": 1350,
        "y": 320,
        "wires": []
    },
    {
        "id": "25b5633c11c795c0",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "aab3b5d8a8f55987",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1260,
        "y": 380,
        "wires": [
            [
                "429ded9afbc4fa98"
            ]
        ]
    },
    {
        "id": "429ded9afbc4fa98",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "aab3b5d8a8f55987",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pushover_alert",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 380,
        "wires": [
            [
                "496a24be3f57a1ea"
            ]
        ]
    },
    {
        "id": "e466aa19f6a50fe4",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "84d5d14387044d21"
            ]
        ]
    },
    {
        "id": "84d5d14387044d21",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature_celsius",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "8a0237d5ee697d65"
            ]
        ]
    },
    {
        "id": "bc6dd8e639be914a",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 340,
        "wires": [
            [
                "17625551a3999979"
            ]
        ]
    },
    {
        "id": "17625551a3999979",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pressure_mb",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "70e17fd303e2e3cd"
            ]
        ]
    },
    {
        "id": "75de084a3ecdd1e3",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 420,
        "wires": [
            [
                "269735e8183dbb11"
            ]
        ]
    },
    {
        "id": "269735e8183dbb11",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "wind_kph",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 420,
        "wires": [
            [
                "df46eaf91e5e3350"
            ]
        ]
    },
    {
        "id": "14d5d959245b23b6",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "d9c3231d21697d9e"
            ]
        ]
    },
    {
        "id": "d9c3231d21697d9e",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rain_mm",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 500,
        "wires": [
            [
                "db2fc9f1efa68c0d"
            ]
        ]
    },
    {
        "id": "833093d3bd3c2fe0",
        "type": "comment",
        "z": "1b5ddca5773a54ff",
        "g": "7c8d7d68a4126a87",
        "name": "Units",
        "info": "",
        "x": 270,
        "y": 200,
        "wires": []
    },
    {
        "id": "faed14773908b694",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "nina ethernet",
        "label": "NINA Ethernet",
        "tooltip": "Hostname or IP address of NINA PC's ethernet connection",
        "group": "aa553bc5f496ab04",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "bca0cbdf3dd5b653"
            ]
        ]
    },
    {
        "id": "bca0cbdf3dd5b653",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nina_ethernet",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "fd4aa481e84a739e",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "595e208908f5e885"
            ]
        ]
    },
    {
        "id": "595e208908f5e885",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nina_ethernet",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "faed14773908b694"
            ]
        ]
    },
    {
        "id": "8e3ff2a45e3b3dde",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "nina wifi",
        "label": "NINA Wifi",
        "tooltip": "Hostname or IP address of NINA PC's wifi connection",
        "group": "aa553bc5f496ab04",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 1080,
        "wires": [
            [
                "32a31868d9e39488"
            ]
        ]
    },
    {
        "id": "32a31868d9e39488",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nina_wifi",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "eac12ed24971258a",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1080,
        "wires": [
            [
                "42c78a0ce2712054"
            ]
        ]
    },
    {
        "id": "42c78a0ce2712054",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nina_wifi",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "8e3ff2a45e3b3dde"
            ]
        ]
    },
    {
        "id": "7def95b999ca7511",
        "type": "comment",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "Systems",
        "info": "",
        "x": 180,
        "y": 980,
        "wires": []
    },
    {
        "id": "0d18ddaca041038d",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "sky quality meter",
        "label": "sky quality meter",
        "tooltip": "Hostname or IP address of the sky quality meter",
        "group": "aa553bc5f496ab04",
        "order": 5,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 630,
        "y": 1120,
        "wires": [
            [
                "3616110661b8f1a9"
            ]
        ]
    },
    {
        "id": "3616110661b8f1a9",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sky_quality_meter",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "d1a938bf4265b46d",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "736d9a09a1cda93a"
            ]
        ]
    },
    {
        "id": "736d9a09a1cda93a",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "7b7daee5ba90ac98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sky_quality_meter",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "0d18ddaca041038d"
            ]
        ]
    },
    {
        "id": "4254b9eb76f28133",
        "type": "ui_text",
        "z": "1b5ddca5773a54ff",
        "g": "8bebfaafc473c3bc",
        "group": "8c89d3080f48bc7a",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "version",
        "label": "Version",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 460,
        "y": 100,
        "wires": []
    },
    {
        "id": "2eefac8da5b2f65c",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "max safe humidity",
        "label": "Maximum Safe Humidity",
        "tooltip": "Enter the maximum humidity percentage that is considered safe",
        "group": "b365f2b84477ee54",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "ebeeb4aed08381fd"
            ]
        ]
    },
    {
        "id": "ebeeb4aed08381fd",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_safe_humidity",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "6950f645cef5c74e",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1260,
        "wires": [
            [
                "450cdb228274943e"
            ]
        ]
    },
    {
        "id": "450cdb228274943e",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "max_safe_humidity",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1260,
        "wires": [
            [
                "2eefac8da5b2f65c"
            ]
        ]
    },
    {
        "id": "e7fd33537cfc9541",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "max safe pop",
        "label": "Maximum Safe Probability of Precipitation",
        "tooltip": "Enter the maximum safe probability of precipitation",
        "group": "b365f2b84477ee54",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 620,
        "y": 1300,
        "wires": [
            [
                "f8c15cb7e05aae5d"
            ]
        ]
    },
    {
        "id": "f8c15cb7e05aae5d",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_safe_pop",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "e083e7b40f446fa5",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1300,
        "wires": [
            [
                "9fac72e78495e589"
            ]
        ]
    },
    {
        "id": "9fac72e78495e589",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "max_safe_pop",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1300,
        "wires": [
            [
                "e7fd33537cfc9541"
            ]
        ]
    },
    {
        "id": "02e398b48cc15356",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "max safe avg wind speed",
        "label": "Maximum Safe Average Wind Speed",
        "tooltip": "Enter the maximum safe wind speed (in whatever units you have configured)",
        "group": "b365f2b84477ee54",
        "order": 7,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 650,
        "y": 1340,
        "wires": [
            [
                "742f69094ec4d777"
            ]
        ]
    },
    {
        "id": "742f69094ec4d777",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_safe_avg_wind_speed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "9edf20a115d289b5",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1340,
        "wires": [
            [
                "c96d2ae60b19cc8d"
            ]
        ]
    },
    {
        "id": "c96d2ae60b19cc8d",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "max_safe_avg_wind_speed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1340,
        "wires": [
            [
                "02e398b48cc15356"
            ]
        ]
    },
    {
        "id": "910e95e4314ffc6e",
        "type": "comment",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "Safety Settings",
        "info": "Some safety settings are confiurable to set the maximum safe values. Those are defined here.",
        "x": 240,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fe2f37ea1d172055",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "8bebfaafc473c3bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2.5.0",
        "payloadType": "str",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "6448d528379519e1",
                "4254b9eb76f28133"
            ]
        ]
    },
    {
        "id": "6448d528379519e1",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "8bebfaafc473c3bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "version",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "da9f0f62d6a3aaf8",
        "type": "comment",
        "z": "1b5ddca5773a54ff",
        "g": "8bebfaafc473c3bc",
        "name": "Version Number",
        "info": "",
        "x": 260,
        "y": 100,
        "wires": []
    },
    {
        "id": "467fa3504154ad71",
        "type": "ui_text_input",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "max ok avg wind speed",
        "label": "Maximum OK (green)  Average Wind Speed",
        "tooltip": "Enter the maximum OK wind speed (in whatever units you have configured)",
        "group": "b365f2b84477ee54",
        "order": 5,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 650,
        "y": 1380,
        "wires": [
            [
                "ab47a7b345ef4bb2"
            ]
        ]
    },
    {
        "id": "ab47a7b345ef4bb2",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_ok_avg_wind_speed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "312ad23330a7ace4",
        "type": "inject",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "inject once at startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1380,
        "wires": [
            [
                "2a20ec939fb42132"
            ]
        ]
    },
    {
        "id": "2a20ec939fb42132",
        "type": "change",
        "z": "1b5ddca5773a54ff",
        "g": "f84dae842559922c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "max_ok_avg_wind_speed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1380,
        "wires": [
            [
                "467fa3504154ad71"
            ]
        ]
    },
    {
        "id": "e5bb0ce4afa547ca",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SQM is offline",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 380,
        "wires": [
            [
                "dc4d0172d202093f"
            ]
        ]
    },
    {
        "id": "3b0b1a990b8283b0",
        "type": "switch",
        "z": "e25d9bb806c7d918",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1310,
        "y": 360,
        "wires": [
            [
                "e5bb0ce4afa547ca"
            ]
        ]
    },
    {
        "id": "dc4d0172d202093f",
        "type": "link out",
        "z": "e25d9bb806c7d918",
        "d": true,
        "name": "sqm alert to pushover",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1665,
        "y": 380,
        "wires": []
    },
    {
        "id": "cc3349bba274f933",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload != \"offline\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "3b0b1a990b8283b0"
            ]
        ]
    },
    {
        "id": "9072091dcafe77c2",
        "type": "subflow:7ad337185da278c4",
        "z": "e25d9bb806c7d918",
        "name": "",
        "x": 870,
        "y": 260,
        "wires": [
            [
                "cc3349bba274f933",
                "f8cf992c9995d699",
                "3bf847019d881685",
                "8d6a6a98b773bee3",
                "bf8a5982650f34cc",
                "b665ced28a5b60b1",
                "e1564d3a0226472e"
            ]
        ]
    },
    {
        "id": "faae34ca39ccb49d",
        "type": "function",
        "z": "e25d9bb806c7d918",
        "name": "extract and calibrate value",
        "func": "var sqm = msg.payload.substring(3,8)\n\nvar v=parseFloat(sqm);\nif (isNaN(v)) {\n    sqm=\"offline\";\n    msg.online=false;\n}\nelse if (sqm == 0) {\n    sqm=\"daylight\";\n    msg.online=true;\n}\nelse {\n    sqm=sqm-0.11;\n    msg.online=true;\n}\nmsg.payload=sqm;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 200,
        "wires": [
            [
                "9072091dcafe77c2"
            ]
        ]
    },
    {
        "id": "43576dbaac2e1db3",
        "type": "tcp request",
        "z": "e25d9bb806c7d918",
        "name": "sqm request",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "faae34ca39ccb49d",
                "8269f117e30a7b6f"
            ]
        ]
    },
    {
        "id": "e393f56b0c4028a4",
        "type": "inject",
        "z": "e25d9bb806c7d918",
        "name": "every 1 minute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rx",
        "payloadType": "str",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "278f99c776f72ad5"
            ]
        ]
    },
    {
        "id": "8269f117e30a7b6f",
        "type": "debug",
        "z": "e25d9bb806c7d918",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "a13d62bc81acaf50",
        "type": "catch",
        "z": "e25d9bb806c7d918",
        "name": "",
        "scope": [
            "43576dbaac2e1db3"
        ],
        "uncaught": false,
        "x": 1320,
        "y": 400,
        "wires": [
            [
                "e5bb0ce4afa547ca"
            ]
        ]
    },
    {
        "id": "f8cf992c9995d699",
        "type": "switch",
        "z": "e25d9bb806c7d918",
        "name": "is there an SQM value?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "daylight",
                "vt": "str"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "41ffa0f5ca12b5ff"
            ],
            [
                "41ffa0f5ca12b5ff"
            ],
            [
                "92585e090a463d03"
            ],
            [
                "2c9769a2bbc1f840"
            ]
        ]
    },
    {
        "id": "41ffa0f5ca12b5ff",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 140,
        "wires": [
            [
                "92585e090a463d03"
            ]
        ]
    },
    {
        "id": "2c9769a2bbc1f840",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 260,
        "wires": [
            [
                "92585e090a463d03"
            ]
        ]
    },
    {
        "id": "92585e090a463d03",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "insert sqm topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SQM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 180,
        "wires": [
            [
                "c8f3c0d181f2930a",
                "e4b6de8f61ab2df6"
            ]
        ]
    },
    {
        "id": "c8f3c0d181f2930a",
        "type": "debug",
        "z": "e25d9bb806c7d918",
        "name": "sqm debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 100,
        "wires": []
    },
    {
        "id": "d475816fd52d8d9a",
        "type": "link in",
        "z": "e25d9bb806c7d918",
        "name": "peg SQM IN",
        "links": [
            "87836f30e520d828"
        ],
        "x": 1465,
        "y": 300,
        "wires": [
            [
                "2cbec44a2a6501e5"
            ]
        ]
    },
    {
        "id": "2cbec44a2a6501e5",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "insert pegsqm topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PEGSQM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 240,
        "wires": [
            [
                "e4b6de8f61ab2df6"
            ]
        ]
    },
    {
        "id": "3bf847019d881685",
        "type": "switch",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "sun <= -18",
        "property": "sunAltitude",
        "propertyType": "global",
        "rules": [
            {
                "t": "lte",
                "v": "-18",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 945,
        "y": 560,
        "wires": [
            [
                "11aa8a6089b82390"
            ],
            [
                "f3dc844726e1208c"
            ]
        ],
        "l": false
    },
    {
        "id": "5448f7f1e826e429",
        "type": "file",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "",
        "filename": "/sqmstudy/moonsqm.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1950,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "17dd69a5bf3134a7",
        "type": "function",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "format data",
        "func": "payload={\n    \"timestamp\": Date.now(),\n    \"moonAltitude\":global.get(\"moonAltitude\"),\n    \"moonPhase\":Math.round(global.get(\"moonPhaseNumber\") * 1000)/10,\n    \"sqm\":msg.payload,\n    \"cloudCover\": global.get(\"cloudCover\")\n};\nmsg.payload=payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 640,
        "wires": [
            [
                "c6f32c806e58ecbe",
                "99e84a5e07a1b5ad"
            ]
        ]
    },
    {
        "id": "c6f32c806e58ecbe",
        "type": "csv",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,moonAltitude,moonPhase,sqm,cloudCover",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1750,
        "y": 660,
        "wires": [
            [
                "5448f7f1e826e429"
            ]
        ]
    },
    {
        "id": "8d6a6a98b773bee3",
        "type": "mqtt out",
        "z": "e25d9bb806c7d918",
        "name": "",
        "topic": "sqm",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1e52f8af9bd8e83a",
        "x": 1090,
        "y": 260,
        "wires": []
    },
    {
        "id": "99e84a5e07a1b5ad",
        "type": "debug",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "moon sqm study",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 600,
        "wires": []
    },
    {
        "id": "bf8a5982650f34cc",
        "type": "link out",
        "z": "e25d9bb806c7d918",
        "name": "ui out: sky quality",
        "mode": "link",
        "links": [
            "a832eac065789091"
        ],
        "x": 1055,
        "y": 300,
        "wires": []
    },
    {
        "id": "61f7d9a4e103ef5f",
        "type": "debug",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "sqm study: sun not low enough",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 740,
        "wires": []
    },
    {
        "id": "f3dc844726e1208c",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunAltitude",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 660,
        "wires": [
            [
                "61f7d9a4e103ef5f"
            ]
        ]
    },
    {
        "id": "11aa8a6089b82390",
        "type": "switch",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "moon between -25 and 5",
        "property": "moonAltitude",
        "propertyType": "global",
        "rules": [
            {
                "t": "btwn",
                "v": "-25",
                "vt": "num",
                "v2": "15",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "17dd69a5bf3134a7"
            ],
            [
                "b9a5035af74bcec7"
            ]
        ]
    },
    {
        "id": "b9a5035af74bcec7",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "moonAltitude",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 660,
        "wires": [
            [
                "924bef1fbee64a36"
            ]
        ]
    },
    {
        "id": "924bef1fbee64a36",
        "type": "debug",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "moon out of range",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 720,
        "wires": []
    },
    {
        "id": "278f99c776f72ad5",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "sqm host and port",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "sky_quality_meter",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "10001",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 160,
        "wires": [
            [
                "43576dbaac2e1db3",
                "a152bbceedcd4cfc"
            ]
        ]
    },
    {
        "id": "a152bbceedcd4cfc",
        "type": "debug",
        "z": "e25d9bb806c7d918",
        "name": "sqm host and port",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 160,
        "wires": []
    },
    {
        "id": "d72970dc73177f49",
        "type": "comment",
        "z": "e25d9bb806c7d918",
        "g": "42ea256f9645e7df",
        "name": "moon sqm study",
        "info": "This section is for helping Tom Palmer decide how to cope with the moon below the horizon for moon avoidance in Target Scheduler. It cam be removed when the sutdy is complete.",
        "x": 1140,
        "y": 520,
        "wires": []
    },
    {
        "id": "e4b6de8f61ab2df6",
        "type": "link out",
        "z": "e25d9bb806c7d918",
        "name": "graph out: sqm",
        "mode": "link",
        "links": [
            "d88dcd1b923d14d0",
            "e90478ee1d18c595"
        ],
        "x": 1995,
        "y": 200,
        "wires": []
    },
    {
        "id": "b665ced28a5b60b1",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sqm",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "97301399c7c48fb5",
        "type": "change",
        "z": "e25d9bb806c7d918",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_sqm",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "3a1ba1657971e7e3",
        "type": "inject",
        "z": "e25d9bb806c7d918",
        "name": "reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1140,
        "wires": [
            [
                "97301399c7c48fb5"
            ]
        ]
    },
    {
        "id": "e1564d3a0226472e",
        "type": "switch",
        "z": "e25d9bb806c7d918",
        "name": "new best sqm?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "max_sqm",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 880,
        "wires": [
            [
                "77e4ab04a54523ad"
            ]
        ]
    },
    {
        "id": "77e4ab04a54523ad",
        "type": "link out",
        "z": "e25d9bb806c7d918",
        "name": "ui out: max sqm",
        "mode": "link",
        "links": [
            "5a3fc79bb1045482"
        ],
        "x": 795,
        "y": 880,
        "wires": []
    },
    {
        "id": "82ab5e342cae5203",
        "type": "ui_ui_control",
        "z": "1da925b7efe5867b",
        "name": "",
        "events": "connect",
        "x": 200,
        "y": 240,
        "wires": [
            [
                "413078f2989c4273"
            ]
        ]
    },
    {
        "id": "17463f4e0a6f59ff",
        "type": "inject",
        "z": "1da925b7efe5867b",
        "name": "every 1 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 340,
        "wires": [
            [
                "413078f2989c4273"
            ]
        ]
    },
    {
        "id": "413078f2989c4273",
        "type": "astrodata dayvalues",
        "z": "1da925b7efe5867b",
        "name": "today's astro data",
        "lon": "-78.495901",
        "lat": "38.950149",
        "height": "320",
        "lang": "en",
        "offset": 0,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "e384a651866a5d63",
                "8e144040f56c8a15",
                "1855fde6029a5451",
                "0aa5362fd3323424",
                "982dce935858f13d",
                "5f0bb8a1d63a0271",
                "56466dda798692c7",
                "6549235760650416",
                "8378fc4f75c6c7a9",
                "3fdbe1cf4eafe29b",
                "5677cc855a967e6d"
            ]
        ]
    },
    {
        "id": "060730c5c0c1cd7c",
        "type": "comment",
        "z": "1da925b7efe5867b",
        "name": "astronomical data",
        "info": "",
        "x": 1070,
        "y": 40,
        "wires": []
    },
    {
        "id": "3361561efd92375e",
        "type": "sun events",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "testmode": false,
        "verbose": "N",
        "topic": "astronomicalevents",
        "name": "",
        "x": 610,
        "y": 2100,
        "wires": [
            [
                "dd271178332f0bcf",
                "1293ac3e5457d2c7"
            ],
            []
        ]
    },
    {
        "id": "dbb4ee3811797c32",
        "type": "inject",
        "z": "1da925b7efe5867b",
        "d": true,
        "g": "82d92caabfa9f307",
        "name": "our position",
        "props": [
            {
                "p": "payload.lat",
                "v": "38.950149",
                "vt": "num"
            },
            {
                "p": "payload.lng",
                "v": "-78.495901",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": ".5",
        "topic": "",
        "x": 390,
        "y": 2060,
        "wires": [
            [
                "3361561efd92375e"
            ]
        ]
    },
    {
        "id": "dd271178332f0bcf",
        "type": "switch",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "",
        "property": "sunevent.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sunrise",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sunriseEnd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "goldenHourEnd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "solarNoon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "goldenHour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sunsetStart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sunset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "dusk",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nauticalDusk",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "night",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nadir",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nightEnd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nauticalDawn",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "dawn",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 14,
        "x": 810,
        "y": 2100,
        "wires": [
            [
                "f3fb1e74fcff358f"
            ],
            [
                "209fd9ac9aa1394f"
            ],
            [
                "209fd9ac9aa1394f"
            ],
            [
                "209fd9ac9aa1394f"
            ],
            [
                "209fd9ac9aa1394f"
            ],
            [
                "76ecdf4399f698d1"
            ],
            [
                "54e671ff94cfba27"
            ],
            [
                "37751a4cf751b1e3"
            ],
            [
                "62a619c9aba41bfe"
            ],
            [
                "1608ab7f0eaeb655"
            ],
            [],
            [
                "831fc9d40e343763"
            ],
            [
                "48165f21d8cd774b"
            ],
            [
                "6108882aab21cdac"
            ]
        ]
    },
    {
        "id": "1293ac3e5457d2c7",
        "type": "debug",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "astro events",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "sunevent.name",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1860,
        "wires": []
    },
    {
        "id": "f3fb1e74fcff358f",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "sunrise",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunrise",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1920,
        "wires": [
            [
                "ae39655e14d23e57"
            ]
        ]
    },
    {
        "id": "209fd9ac9aa1394f",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "day",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "day",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1960,
        "wires": [
            [
                "ae39655e14d23e57"
            ]
        ]
    },
    {
        "id": "76ecdf4399f698d1",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "sunset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 2000,
        "wires": [
            [
                "99f058030d8a5644"
            ]
        ]
    },
    {
        "id": "54e671ff94cfba27",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "civil dusk",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "civil dusk",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "99f058030d8a5644"
            ]
        ]
    },
    {
        "id": "37751a4cf751b1e3",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "nautical dusk",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nautical dusk",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 2080,
        "wires": [
            [
                "99f058030d8a5644"
            ]
        ]
    },
    {
        "id": "62a619c9aba41bfe",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "astronomical dusk",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "astronomical dusk",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 2120,
        "wires": [
            [
                "da41048808cb5432"
            ]
        ]
    },
    {
        "id": "1608ab7f0eaeb655",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "astronomical night",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "night",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 2160,
        "wires": [
            [
                "af5c92f8ab5c6794"
            ]
        ]
    },
    {
        "id": "831fc9d40e343763",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "astronomical dawn",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "astronomical dawn",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 2200,
        "wires": [
            [
                "c5f10fc48c3f4b97"
            ]
        ]
    },
    {
        "id": "48165f21d8cd774b",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "nautical dawn",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nautical dawn",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 2240,
        "wires": [
            [
                "c5f10fc48c3f4b97"
            ]
        ]
    },
    {
        "id": "6108882aab21cdac",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "civil dawn",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "civil dawn",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 2280,
        "wires": [
            [
                "c5f10fc48c3f4b97"
            ]
        ]
    },
    {
        "id": "fb7ba2307deea2ef",
        "type": "ui_text",
        "z": "1da925b7efe5867b",
        "d": true,
        "g": "82d92caabfa9f307",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "next sun event",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2020,
        "y": 2060,
        "wires": []
    },
    {
        "id": "ae39655e14d23e57",
        "type": "astrodata dayvalues",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "today's events",
        "lon": " -78.495901",
        "lat": "38.950149",
        "height": "320",
        "lang": "en",
        "offset": 0,
        "x": 1380,
        "y": 1740,
        "wires": [
            [
                "0c308f575095c967"
            ]
        ]
    },
    {
        "id": "0c308f575095c967",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "next sunset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunSet",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Sunset at",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 1740,
        "wires": [
            [
                "fb7ba2307deea2ef"
            ]
        ]
    },
    {
        "id": "af5c92f8ab5c6794",
        "type": "astrodata dayvalues",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "tomorrow's events",
        "lon": " -78.495901",
        "lat": "38.950149",
        "height": "320",
        "lang": "en",
        "offset": "1",
        "x": 1530,
        "y": 2280,
        "wires": [
            [
                "07a0aaabbdd06105"
            ]
        ]
    },
    {
        "id": "e8f04b374a925f6d",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "next astro twilight",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nauticalDusk",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Astronomical twilight at",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 1800,
        "wires": [
            [
                "fb7ba2307deea2ef"
            ]
        ]
    },
    {
        "id": "99f058030d8a5644",
        "type": "astrodata dayvalues",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "today's events",
        "lon": " -78.495901",
        "lat": "38.950149",
        "height": "320",
        "lang": "en",
        "offset": 0,
        "x": 1380,
        "y": 1800,
        "wires": [
            [
                "e8f04b374a925f6d"
            ]
        ]
    },
    {
        "id": "07a0aaabbdd06105",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "next sunrise",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nightEnd",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Astronomical dawn at",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 2280,
        "wires": [
            [
                "fb7ba2307deea2ef"
            ]
        ]
    },
    {
        "id": "da41048808cb5432",
        "type": "astrodata dayvalues",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "today's events",
        "lon": " -78.495901",
        "lat": "38.950149",
        "height": "320",
        "lang": "en",
        "offset": 0,
        "x": 1460,
        "y": 2200,
        "wires": [
            [
                "b51576559d4bca65"
            ]
        ]
    },
    {
        "id": "b51576559d4bca65",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "next astro night",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "night",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Astronomical night at",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "c5f10fc48c3f4b97",
        "type": "astrodata dayvalues",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "today's events",
        "lon": " -78.495901",
        "lat": "38.950149",
        "height": "320",
        "lang": "en",
        "offset": 0,
        "x": 1400,
        "y": 2340,
        "wires": [
            [
                "3e17b301f0f0ab80"
            ]
        ]
    },
    {
        "id": "3e17b301f0f0ab80",
        "type": "change",
        "z": "1da925b7efe5867b",
        "g": "82d92caabfa9f307",
        "name": "next sunrise",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunRise",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Sunrise at",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 2340,
        "wires": [
            [
                "fb7ba2307deea2ef"
            ]
        ]
    },
    {
        "id": "e384a651866a5d63",
        "type": "change",
        "z": "1da925b7efe5867b",
        "name": "multiply by 100",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.moonPhaseNumber * 100",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 100,
        "wires": [
            [
                "4771f280e1fcfccb"
            ]
        ]
    },
    {
        "id": "4771f280e1fcfccb",
        "type": "subflow:7ad337185da278c4",
        "z": "1da925b7efe5867b",
        "name": "",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "e7f44d764ec41b88"
            ]
        ]
    },
    {
        "id": "8e144040f56c8a15",
        "type": "debug",
        "z": "1da925b7efe5867b",
        "name": "raw astro data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 260,
        "wires": []
    },
    {
        "id": "1855fde6029a5451",
        "type": "switch",
        "z": "1da925b7efe5867b",
        "name": "Is the moon above the horizon?",
        "property": "moonAltitude",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 600,
        "wires": [
            [
                "0502521c3cf5eda8"
            ],
            [
                "b7425d8ef972fc3d"
            ]
        ]
    },
    {
        "id": "0502521c3cf5eda8",
        "type": "change",
        "z": "1da925b7efe5867b",
        "name": "Show Moonset",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Moonset at",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "moonSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 560,
        "wires": [
            [
                "417c16428edb49d8"
            ]
        ]
    },
    {
        "id": "b7425d8ef972fc3d",
        "type": "change",
        "z": "1da925b7efe5867b",
        "name": "Show moonrise",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Moonrise at",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "moonRise",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 640,
        "wires": [
            [
                "417c16428edb49d8"
            ]
        ]
    },
    {
        "id": "0aa5362fd3323424",
        "type": "function",
        "z": "1da925b7efe5867b",
        "name": "determine currrent and next sun events",
        "func": "sunAltitude = msg.sunAltitude;\nsunAzimuth = msg.sunAzimut;\nlastSunAltitude = flow.lastSunAltitude;\n\nif (sunAltitude <= -18) {\n    msg.currentSunEvent = \"night\";\n    msg.nextSunEventLabel = \"Astronomical Dawn at\";\n    msg.nextSunEventTime = msg.sunAstronomicalTwilightMorning;\n}\nelse if (sunAltitude <= -12) {\n   if (sunAzimuth < 180) {\n        msg.currentSunEvent = \"astronomical dawn\";\n        msg.nextSunEventLabel = \"Nautical Dawn at\";\n        msg.nextSunEventTime = msg.sunNauticalTwilightMorning;\n    }\n    else {\n        msg.currentSunEvent = \"astronomical dusk\";     \n        msg.nextSunEventLabel = \"Night at\";\n        msg.nextSunEventTime = msg.sunAstronomicalTwilightEvening;\n    }\n}\nelse if (sunAltitude <= -6) {\n    if (sunAzimuth < 180) {\n        msg.currentSunEvent = \"nautical dawn\";\n        msg.nextSunEventLabel = \"Civil Dawn at\";\n        msg.nextSunEventTime = msg.sunCivilTwilightMorning;\n    }\n    else {\n        msg.currentSunEvent = \"nautical dusk\";     \n        msg.nextSunEventLabel = \"Astronomical Dusk at\";\n        msg.nextSunEventTime = msg.sunNauticalTwilightEvening;\n    }   \n}\nelse if (sunAltitude <= 0) {\n    if (sunAzimuth < 180) {\n        msg.currentSunEvent = \"civil dawn\";\n        msg.nextSunEventLabel = \"Sunrise at\";\n        msg.nextSunEventTime = msg.sunRise;\n    }\n    else {\n        msg.currentSunEvent = \"civil dusk\";     \n        msg.nextSunEventLabel = \"Nautical Dusk at\";\n        msg.nextSunEventTime = msg.sunCivilTwilightEvening;\n    }   \n}\nelse {\n    msg.currentSunEvent = \"day\";\n    msg.nextSunEventLabel = \"Sunset at\";\n    msg.nextSunEventTime = msg.sunSet;\n}\n\nflow.lastSunAltitude = sunAltitude;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 800,
        "wires": [
            [
                "db7ca85792792739",
                "e87a4aeb08afac25"
            ]
        ]
    },
    {
        "id": "4aeaa9d42a59e4cd",
        "type": "subflow:7630d7f507ca85f8",
        "z": "1da925b7efe5867b",
        "name": "",
        "x": 920,
        "y": 940,
        "wires": [
            [
                "7b005662bf023be5"
            ]
        ]
    },
    {
        "id": "982dce935858f13d",
        "type": "change",
        "z": "1da925b7efe5867b",
        "name": "get the sun azimuth",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunAzimut",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 940,
        "wires": [
            [
                "4aeaa9d42a59e4cd"
            ]
        ]
    },
    {
        "id": "771a676e41afffcf",
        "type": "function",
        "z": "1da925b7efe5867b",
        "name": "Use better moon phase names",
        "func": "phase = msg.moonPhase;\n\nif (phase == \"decreasing moon\") {\n    msg.moonPhase = \"waning gibbous\";\n}\nelse if (phase == \"increasing moon\") {\n    msg.moonPhase = \"waxing gibbous\";\n}\nelse if (phase == \"decreasing sickle\") {\n    msg.moonPhase = \"waning crescent\";\n}\nelse if (phase == \"increasing sickle\") {\n    msg.moonPhase = \"waxing crescent\";\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "331050edbad7f762"
            ]
        ]
    },
    {
        "id": "5f0bb8a1d63a0271",
        "type": "string",
        "z": "1da925b7efe5867b",
        "name": "",
        "methods": [
            {
                "name": "toLowerCase",
                "params": []
            }
        ],
        "prop": "moonPhase",
        "propout": "moonPhase",
        "object": "msg",
        "objectout": "msg",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "771a676e41afffcf"
            ]
        ]
    },
    {
        "id": "56466dda798692c7",
        "type": "change",
        "z": "1da925b7efe5867b",
        "name": "extract moon alititude",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "moonAltitude",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Moon Altitude",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 360,
        "wires": [
            [
                "2e2a56749265b05d"
            ]
        ]
    },
    {
        "id": "6549235760650416",
        "type": "change",
        "z": "1da925b7efe5867b",
        "name": "extract sun alititude",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sunAltitude",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Sun Altitude",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 400,
        "wires": [
            [
                "2e2a56749265b05d"
            ]
        ]
    },
    {
        "id": "8378fc4f75c6c7a9",
        "type": "change",
        "z": "1da925b7efe5867b",
        "name": "store sun and moon data for SQM study",
        "rules": [
            {
                "t": "set",
                "p": "moonAltitude",
                "pt": "global",
                "to": "moonAltitude",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "moonPhaseNumber",
                "pt": "global",
                "to": "moonPhaseNumber",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sunAltitude",
                "pt": "global",
                "to": "sunAltitude",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "e7f44d764ec41b88",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: moon illumination",
        "mode": "link",
        "links": [
            "a13db000b99b9585",
            "32730f01f58a543e"
        ],
        "x": 1175,
        "y": 100,
        "wires": []
    },
    {
        "id": "331050edbad7f762",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: moon phase",
        "mode": "link",
        "links": [
            "8cd7593dd6558276"
        ],
        "x": 1345,
        "y": 160,
        "wires": []
    },
    {
        "id": "417c16428edb49d8",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: next moon event",
        "mode": "link",
        "links": [
            "02f10124cbf267c9"
        ],
        "x": 1385,
        "y": 600,
        "wires": []
    },
    {
        "id": "7b005662bf023be5",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: sun azimuth",
        "mode": "link",
        "links": [
            "53f7ed4f5a5b5de8"
        ],
        "x": 1095,
        "y": 940,
        "wires": []
    },
    {
        "id": "3fdbe1cf4eafe29b",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: moon altitude",
        "mode": "link",
        "links": [
            "966cb25cac6f9de1"
        ],
        "x": 645,
        "y": 700,
        "wires": []
    },
    {
        "id": "5677cc855a967e6d",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: sun altitude",
        "mode": "link",
        "links": [
            "52aee13da2025f7d"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "db7ca85792792739",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: next sun event",
        "mode": "link",
        "links": [
            "fcf8873318a4458b"
        ],
        "x": 995,
        "y": 820,
        "wires": []
    },
    {
        "id": "e87a4aeb08afac25",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "ui out: current sun event",
        "mode": "link",
        "links": [
            "2fcf7daed1b5c504"
        ],
        "x": 995,
        "y": 760,
        "wires": []
    },
    {
        "id": "2e2a56749265b05d",
        "type": "link out",
        "z": "1da925b7efe5867b",
        "name": "graph out: sun moon",
        "mode": "link",
        "links": [
            "4fc07554060f4cd2",
            "1be364fdfb51294a"
        ],
        "x": 1165,
        "y": 380,
        "wires": []
    },
    {
        "id": "18cc350cf6cf726a",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "Pushover Message Wx is Down",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Weather station console is down",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 680,
        "wires": [
            [
                "2f523300a989bf8f"
            ]
        ]
    },
    {
        "id": "2f523300a989bf8f",
        "type": "link out",
        "z": "e105e7d9afdc420c",
        "name": "system status alerts to pushovr",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1595,
        "y": 480,
        "wires": []
    },
    {
        "id": "3b4ee83c26a9b9e5",
        "type": "inject",
        "z": "e105e7d9afdc420c",
        "name": "every 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "4632c0593742a352"
            ]
        ]
    },
    {
        "id": "cce0713246ec7035",
        "type": "debug",
        "z": "e105e7d9afdc420c",
        "name": "unifi output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 60,
        "wires": []
    },
    {
        "id": "4632c0593742a352",
        "type": "unifi-request",
        "z": "e105e7d9afdc420c",
        "name": "Get lan nodes",
        "accessControllerNodeId": "fd847d8a93745a8c",
        "endpoint": "/proxy/network/api/s/default/stat/sta",
        "method": "GET",
        "data": "{\"macs\":[\"c4:5b:be:5c:8c:a8\",\"00:80:a3:e5:4e:b1\",\"00:16:eb:59:9b:97\"]}",
        "dataType": "json",
        "responseType": "json",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "cce0713246ec7035",
                "fd254b142397b053"
            ]
        ]
    },
    {
        "id": "e47b646edd181977",
        "type": "split",
        "z": "e105e7d9afdc420c",
        "name": "split the array",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 440,
        "y": 360,
        "wires": [
            [
                "dece3cda63da6bac",
                "e93fe975fb49ba77"
            ]
        ]
    },
    {
        "id": "fd254b142397b053",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "Extract the array of active clients",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "e47b646edd181977",
                "85e38ce3c61e5918"
            ]
        ]
    },
    {
        "id": "dece3cda63da6bac",
        "type": "switch",
        "z": "e105e7d9afdc420c",
        "name": "Look for the hosts we are interestd in",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "allsky",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "photoncatcher",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "weather",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "sqm",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 550,
        "y": 440,
        "wires": [
            [
                "48edb754ab7ade2e",
                "16b51b39ee8fbead"
            ],
            [
                "6cb89df62fba5eb7",
                "301fe1d3b72c7ce7",
                "cce0713246ec7035"
            ],
            [
                "834a4b3d3e1f220b",
                "2ac702ace41e57e7"
            ],
            [
                "9cc6ee9be1f057ab",
                "a323181b34fb425c"
            ]
        ]
    },
    {
        "id": "834a4b3d3e1f220b",
        "type": "trigger",
        "z": "e105e7d9afdc420c",
        "name": "10 min timeout",
        "op1": "",
        "op2": "down",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 900,
        "y": 660,
        "wires": [
            [
                "18cc350cf6cf726a",
                "285ed2250a89c4ca"
            ]
        ]
    },
    {
        "id": "2ac702ace41e57e7",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "it's up",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "up",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 620,
        "wires": [
            [
                "285ed2250a89c4ca"
            ]
        ]
    },
    {
        "id": "dd252a87e20b3fea",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "Pushover Message Allsky is Down",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "allsky systm is down",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 280,
        "wires": [
            [
                "2f523300a989bf8f"
            ]
        ]
    },
    {
        "id": "16b51b39ee8fbead",
        "type": "trigger",
        "z": "e105e7d9afdc420c",
        "name": "10 min timeout",
        "op1": "",
        "op2": "down",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "dd252a87e20b3fea",
                "0ef742f0ce3a644e"
            ]
        ]
    },
    {
        "id": "48edb754ab7ade2e",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "it's up",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "up",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "0ef742f0ce3a644e"
            ]
        ]
    },
    {
        "id": "433c5b07aa26ed67",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "Pushover Message Photoncatcher is Down",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Photoncatcher is down",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 480,
        "wires": [
            [
                "2f523300a989bf8f"
            ]
        ]
    },
    {
        "id": "301fe1d3b72c7ce7",
        "type": "trigger",
        "z": "e105e7d9afdc420c",
        "name": "10 min timeout",
        "op1": "",
        "op2": "down",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 960,
        "y": 460,
        "wires": [
            [
                "433c5b07aa26ed67",
                "02b966f62c936f75"
            ]
        ]
    },
    {
        "id": "6cb89df62fba5eb7",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "it's up",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "up",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 420,
        "wires": [
            [
                "02b966f62c936f75"
            ]
        ]
    },
    {
        "id": "e93fe975fb49ba77",
        "type": "debug",
        "z": "e105e7d9afdc420c",
        "name": "unifi output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.name",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "85e38ce3c61e5918",
        "type": "debug",
        "z": "e105e7d9afdc420c",
        "name": "extracted array",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 240,
        "wires": []
    },
    {
        "id": "204222f4e23e4943",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "Pushover Message SQM is Down",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SQM is down",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 840,
        "wires": [
            [
                "2f523300a989bf8f"
            ]
        ]
    },
    {
        "id": "a323181b34fb425c",
        "type": "trigger",
        "z": "e105e7d9afdc420c",
        "name": "10 min timeout",
        "op1": "",
        "op2": "down",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 800,
        "y": 820,
        "wires": [
            [
                "204222f4e23e4943",
                "063b8259b97a0b3d"
            ]
        ]
    },
    {
        "id": "9cc6ee9be1f057ab",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "it's up",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "up",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "063b8259b97a0b3d"
            ]
        ]
    },
    {
        "id": "4fe3e100defb0bf7",
        "type": "catch",
        "z": "e105e7d9afdc420c",
        "name": "catch",
        "scope": null,
        "uncaught": true,
        "x": 330,
        "y": 660,
        "wires": [
            [
                "3412166ba946e450"
            ]
        ]
    },
    {
        "id": "3412166ba946e450",
        "type": "change",
        "z": "e105e7d9afdc420c",
        "name": "set to unkown status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "unknown",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 800,
        "wires": [
            [
                "16b51b39ee8fbead",
                "301fe1d3b72c7ce7",
                "834a4b3d3e1f220b",
                "a323181b34fb425c",
                "0ef742f0ce3a644e",
                "02b966f62c936f75",
                "063b8259b97a0b3d",
                "285ed2250a89c4ca"
            ]
        ]
    },
    {
        "id": "0ef742f0ce3a644e",
        "type": "link out",
        "z": "e105e7d9afdc420c",
        "name": "ui out: allsky status",
        "mode": "link",
        "links": [
            "4ce088d9f2fc304d"
        ],
        "x": 1225,
        "y": 200,
        "wires": []
    },
    {
        "id": "02b966f62c936f75",
        "type": "link out",
        "z": "e105e7d9afdc420c",
        "name": "ui out: photoncatcher status",
        "mode": "link",
        "links": [
            "aa26016a35c94a06"
        ],
        "x": 1155,
        "y": 360,
        "wires": []
    },
    {
        "id": "063b8259b97a0b3d",
        "type": "link out",
        "z": "e105e7d9afdc420c",
        "name": "ui out: sqm status",
        "mode": "link",
        "links": [
            "dc6ce538a350cd47"
        ],
        "x": 985,
        "y": 800,
        "wires": []
    },
    {
        "id": "285ed2250a89c4ca",
        "type": "link out",
        "z": "e105e7d9afdc420c",
        "name": "ui out: weather station status",
        "mode": "link",
        "links": [
            "12046c19be4d398f"
        ],
        "x": 1085,
        "y": 640,
        "wires": []
    },
    {
        "id": "96642ceeb26c5627",
        "type": "kasa",
        "z": "eb59cca86a071b43",
        "name": "Sky Quality Meter - KP115(US)s",
        "device": "10.1.30.19",
        "interval": 60000,
        "eventInterval": 15000,
        "payload": "getInfo",
        "payloadType": "info",
        "debug": false,
        "x": 450,
        "y": 120,
        "wires": [
            [
                "c5a1791ad5389b16",
                "b49bd1a052fec958"
            ]
        ]
    },
    {
        "id": "c0606ef1c6501bcf",
        "type": "kasa",
        "z": "eb59cca86a071b43",
        "name": "All Sky Camera - KP115(US)",
        "device": "10.1.30.20",
        "interval": 60000,
        "eventInterval": 15000,
        "payload": "getInfo",
        "payloadType": "info",
        "debug": false,
        "x": 420,
        "y": 380,
        "wires": [
            [
                "0f254d970712700c"
            ]
        ]
    },
    {
        "id": "c5a1791ad5389b16",
        "type": "debug",
        "z": "eb59cca86a071b43",
        "name": "sqm outlet debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "f9a949b94668e19c",
        "type": "inject",
        "z": "eb59cca86a071b43",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "startPowerEvents",
        "payloadType": "str",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "96642ceeb26c5627",
                "c0606ef1c6501bcf"
            ]
        ]
    },
    {
        "id": "57f738220a69990a",
        "type": "inject",
        "z": "eb59cca86a071b43",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "startPowerUpdateEvents",
        "payloadType": "str",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "96642ceeb26c5627",
                "c0606ef1c6501bcf"
            ]
        ]
    },
    {
        "id": "071b4944d8574dee",
        "type": "ui_switch",
        "z": "eb59cca86a071b43",
        "d": true,
        "name": "",
        "label": "Sky Quality Meter Power",
        "tooltip": "",
        "group": "1c3330158b603c06",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "96642ceeb26c5627"
            ]
        ]
    },
    {
        "id": "b49bd1a052fec958",
        "type": "change",
        "z": "eb59cca86a071b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.powerOn",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 120,
        "wires": [
            [
                "071b4944d8574dee"
            ]
        ]
    },
    {
        "id": "0f254d970712700c",
        "type": "change",
        "z": "eb59cca86a071b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.powerOn",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 380,
        "wires": [
            [
                "b5df05f7a412db5f"
            ]
        ]
    },
    {
        "id": "b5df05f7a412db5f",
        "type": "ui_switch",
        "z": "eb59cca86a071b43",
        "d": true,
        "name": "",
        "label": "All Sky Power",
        "tooltip": "",
        "group": "1c3330158b603c06",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 960,
        "y": 320,
        "wires": [
            [
                "c0606ef1c6501bcf"
            ]
        ]
    },
    {
        "id": "dc49a152ebc03d37",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 5,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "Precipitation in Forecast",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Forecast Precip",
        "x": 300,
        "y": 180,
        "wires": []
    },
    {
        "id": "424416f6267c658b",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: forecast precip",
        "links": [
            "4179e702ca68e160",
            "77b056693fddd667"
        ],
        "x": 165,
        "y": 180,
        "wires": [
            [
                "dc49a152ebc03d37"
            ]
        ]
    },
    {
        "id": "d5f9186d219524c4",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "76298aafad5dda82",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "forecast line 1",
        "label": "Next 6 Hours",
        "format": "{{msg.forecast}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 320,
        "wires": []
    },
    {
        "id": "59736b8a1f8ca869",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: forecast line 1",
        "links": [
            "33920f7906343f6d"
        ],
        "x": 505,
        "y": 320,
        "wires": [
            [
                "d5f9186d219524c4"
            ]
        ]
    },
    {
        "id": "84fc1f88223dfd79",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "76298aafad5dda82",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "forecast line 2",
        "label": "Following 6 Hours",
        "format": "{{msg.forecast}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "fd7d6797d5d2967d",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: forecast line 2",
        "links": [
            "86628a45389e5339"
        ],
        "x": 505,
        "y": 360,
        "wires": [
            [
                "84fc1f88223dfd79"
            ]
        ]
    },
    {
        "id": "4f9d9f18a5c3ed68",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 15,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "aeris",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Aeris API",
        "x": 260,
        "y": 680,
        "wires": []
    },
    {
        "id": "a988f83f33bfd63a",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: aeris api",
        "links": [
            "f4ce571caf56ba10",
            "aa0085daaa8a615a",
            "c1ba2c10b05f59aa",
            "0f23e93b12f677e8",
            "91e2aa473ef97daa",
            "f9ea79900120cba3"
        ],
        "x": 145,
        "y": 680,
        "wires": [
            [
                "4f9d9f18a5c3ed68"
            ]
        ]
    },
    {
        "id": "6fb314939eabca1e",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 4,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "Precipitation in Area",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Precip in Area",
        "x": 300,
        "y": 140,
        "wires": []
    },
    {
        "id": "77a26645f9c45086",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: precip in area",
        "links": [
            "c7c1797306fc379f"
        ],
        "x": 165,
        "y": 140,
        "wires": [
            [
                "6fb314939eabca1e"
            ]
        ]
    },
    {
        "id": "b53f006a092b1339",
        "type": "ui_template",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "name": "radar image",
        "order": 16,
        "width": "6",
        "height": "11",
        "format": "<div class=\"aeris_outer_container\">\n    <div class=\"aeris_container\">\n        <div class=\"aeris_radar_box\">\n            <img class=\"aeris_data\"\n                width=256\n                height=256\n                src=\"/aeris/radar.png?{{msg.radar_time}}\"\n            >\n            <img \n                class=\"aeris_crosshair\" \n                src=\"/aeris/crosshair.png\"\n            >\n        </div>\n        <div class=\"aeris_box aeris_overlay\">\n            <div class=\"aeris_text\">\n                Doppler Radar at {{msg.radar_time}}\n            </div>\n        </div>\n    </div>\n </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "169a2f04c1b81f98",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: radar image",
        "links": [
            "69fb21701d3b3e35"
        ],
        "x": 835,
        "y": 540,
        "wires": [
            [
                "b53f006a092b1339"
            ]
        ]
    },
    {
        "id": "a1ce65ab2544b301",
        "type": "ui_template",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "name": "cloud image",
        "order": 17,
        "width": "6",
        "height": "11",
        "format": "<div class=\"aeris_outer_container\">\n    <div class=\"aeris_container\">\n        <div class=\"aeris_ir_box\">\n            <img class=\"aeris_cloud_box\"\n                width=256\n                height=256\n                src=\"/aeris/cloud.png?{{msg.cloud_time}}\"\n            >\n            <img class=\"aeris_cloud_admin\"\n                width=256\n                height=256\n                src=\"/aeris/cloud-background.png\"\n            >            \n            <img \n                class=\"aeris_crosshair\" \n                src=\"/aeris/crosshair.png\"\n            >\n        </div>\n        <div class=\"aeris_box aeris_overlay\">\n            <div class=\"aeris_text\">\n                Clouds at {{msg.cloud_time}}\n            </div>\n        </div>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1250,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d08f9c0c8b283864",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: cloud image",
        "links": [
            "ed613a61cff41ea5"
        ],
        "x": 1105,
        "y": 540,
        "wires": [
            [
                "a1ce65ab2544b301"
            ]
        ]
    },
    {
        "id": "7a8e2992859b741e",
        "type": "ui_template",
        "z": "52253e7db7826624",
        "group": "e14ef026db2f9ff2",
        "name": "styles for aeris maps",
        "order": 28,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .aeris_outer_container {\n        position: static;\n        margin: auto auto;\n        width: 256px;\n        height: 256px;\n    }\n    .aeris_container {\n    \twidth: 256px;\n    \theight: 256px;\n        position: relative;\n        /*margin-top: 4px;\n        margin-bottom: 4px;\n        margin-left: 1px;\n        margin-right: 1px;*/\n    }\n    .aeris_box {\n    \twidth: 100%;\n    \theight: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n    .aeris_cloud_box {\n    \twidth: 100%;\n    \theight: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n    .aeris_cloud_admin {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n        opacity: 0.25;\n    }\n    .aeris_radar_box {\n    \twidth: 100%;\n    \theight: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n        background-image: url(\"/aeris/radar-background.png\");\n    }    \n    .aeris_data {\n        opacity: 0.8;\n    }\n\n    .aeris_overlay {\n  \t\tposition: absolute;\n  \t\twidth: 100%;\n  \t\theight: 100%;\n  \t\ttop: 0;\n  \t\tleft: 0;\n  \t\t/* other styles (left, top, right, and padding) */\n\t\tbackground: rgba(77, 77, 77, 0.5);\n\t\topacity: 0;\n\t\tz-index: 20;\n    }\n    .aeris_overlay:hover {\n    \topacity: 1;\n    }\n\t.aeris_text {\n\t\tposition: relative;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\ttop: 25%;\n\t\tleft: 0;\n\t\tcolor: #eeeeee;\n\t\tbackground-color: black;\n\t}\n\t.aeris_crosshair {\n\t\tposition: absolute;\n\t\tdisplay: block;\n\t\tz-index: 10;\n\t\ttop: 108px;\n\t\tleft: 108px;\n\t\topacity: .40;\n\t}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1720,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "f6625057f2a58729",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 2,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "Safe Conditions",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "safe conditions",
        "x": 300,
        "y": 60,
        "wires": []
    },
    {
        "id": "4492eccee3c82cae",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: safe conditions",
        "links": [
            "302cf52560850b43"
        ],
        "x": 165,
        "y": 60,
        "wires": [
            [
                "f6625057f2a58729"
            ]
        ]
    },
    {
        "id": "bdb1564d294056f8",
        "type": "ui_template",
        "z": "52253e7db7826624",
        "group": "76298aafad5dda82",
        "name": "All Sky Styles",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    img.cropped {object-fit: cover}\n\n    .allsky_container {\n        position: static;\n        margin: auto auto;\n        width: 630px;\n        height: 530px;\n    }\n    .allsky_container {\n    \twidth: 630px;\n    \theight: 530px;\n        position: relative;\n        /*margin-top: 4px;\n        margin-bottom: 4px;\n        margin-left: 1px;\n        margin-right: 1px;*/\n    }\n    .allsky_box {\n    \twidth: 100%;\n    \theight: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    .allsky_overlay {\n  \t\tposition: absolute;\n  \t\twidth: 100%;\n  \t\theight: 100%;\n  \t\ttop: 0;\n  \t\tleft: 0;\n  \t\t/* other styles (left, top, right, and padding) */\n\t\tbackground: rgba(55, 55, 55, 0.5);\n\t\topacity: 0;\n    }\n    .allsky_overlay:hover {\n    \topacity: 1;\n    }\n\t.allsky_text {\n\t\tposition: relative;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\ttop: 25%;\n\t\tleft: 0;\n\t\tcolor: #eeeeee;\n\t}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1700,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "741caea135ec0317",
        "type": "ui_template",
        "z": "52253e7db7826624",
        "group": "76298aafad5dda82",
        "name": "All Sky Image",
        "order": 2,
        "width": "12",
        "height": "20",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c747a2938c598f58",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: all sky image",
        "links": [
            "559983e8e89acfc0"
        ],
        "x": 515,
        "y": 100,
        "wires": [
            [
                "741caea135ec0317"
            ]
        ]
    },
    {
        "id": "271b6ef792a09ada",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 16,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "allsky",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "All Sky Service Status",
        "x": 300,
        "y": 720,
        "wires": []
    },
    {
        "id": "54d305147cfb862a",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: all sky service status",
        "links": [
            "1258d0eb440ce6ac"
        ],
        "x": 145,
        "y": 720,
        "wires": [
            [
                "271b6ef792a09ada"
            ]
        ]
    },
    {
        "id": "1e7636bae14a6b66",
        "type": "ui_iframe",
        "z": "52253e7db7826624",
        "group": "19ab1aeda644ab30",
        "name": "NINA Session History",
        "order": 1,
        "width": "18",
        "height": "26",
        "url": "http://10.1.10.52/dist",
        "origin": "*",
        "scale": 100,
        "x": 300,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "0470bd89125689f3",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 19,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "nina",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "nina status",
        "x": 270,
        "y": 860,
        "wires": []
    },
    {
        "id": "0158520f2a62a119",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: nina status",
        "links": [
            "92bc90a9fa69bb45"
        ],
        "x": 145,
        "y": 860,
        "wires": [
            [
                "0470bd89125689f3"
            ]
        ]
    },
    {
        "id": "3dcc831fbb1f9471",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 12,
        "width": "6",
        "height": "1",
        "name": "Clouds",
        "label": "Cloud Coverage",
        "format": "<p class={{msg.safe_class}}>{{msg.payload}}</p>",
        "layout": "row-spread",
        "className": "",
        "x": 1580,
        "y": 360,
        "wires": []
    },
    {
        "id": "884aae1a3e8ecabf",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: cloud coverage",
        "links": [
            "098441b9a36dfb58",
            "4548de24ab49709c"
        ],
        "x": 1115,
        "y": 360,
        "wires": [
            [
                "304042f1ab677019"
            ]
        ]
    },
    {
        "id": "1c3705cfa158cf09",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "Sky Quality",
        "label": "Sky Quality (mpass)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "a832eac065789091",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: sky quality",
        "links": [
            "bf8a5982650f34cc"
        ],
        "x": 835,
        "y": 220,
        "wires": [
            [
                "1c3705cfa158cf09"
            ]
        ]
    },
    {
        "id": "053ace486c097537",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Moon Illuminated",
        "label": "Moon Illumination (%)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1850,
        "y": 420,
        "wires": []
    },
    {
        "id": "a13db000b99b9585",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: moon illumination",
        "links": [
            "e7f44d764ec41b88"
        ],
        "x": 1685,
        "y": 420,
        "wires": [
            [
                "053ace486c097537"
            ]
        ]
    },
    {
        "id": "bad85cd6143fd2d9",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Moon Phase",
        "label": "Moon Phase",
        "format": "{{msg.moonPhase}}",
        "layout": "row-spread",
        "className": "",
        "x": 1830,
        "y": 380,
        "wires": []
    },
    {
        "id": "8cd7593dd6558276",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: moon phase",
        "links": [
            "331050edbad7f762"
        ],
        "x": 1685,
        "y": 380,
        "wires": [
            [
                "bad85cd6143fd2d9"
            ]
        ]
    },
    {
        "id": "76e6b6ef7be6ca73",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Next moon event",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1850,
        "y": 340,
        "wires": []
    },
    {
        "id": "02f10124cbf267c9",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: next moon event",
        "links": [
            "417c16428edb49d8"
        ],
        "x": 1685,
        "y": 340,
        "wires": [
            [
                "76e6b6ef7be6ca73"
            ]
        ]
    },
    {
        "id": "cea157593c28caa6",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Sun Azimuth",
        "label": "Sun Azimuth",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1830,
        "y": 300,
        "wires": []
    },
    {
        "id": "53f7ed4f5a5b5de8",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: sun azimuth",
        "links": [
            "7b005662bf023be5"
        ],
        "x": 1685,
        "y": 300,
        "wires": [
            [
                "cea157593c28caa6"
            ]
        ]
    },
    {
        "id": "ce77bfc688c5729e",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "Moon Altitude",
        "label": "Moon Altitude (°)",
        "format": "{{msg.moonAltitude}}",
        "layout": "row-spread",
        "className": "",
        "x": 1840,
        "y": 460,
        "wires": []
    },
    {
        "id": "966cb25cac6f9de1",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: moon altitude",
        "links": [
            "3fdbe1cf4eafe29b"
        ],
        "x": 1685,
        "y": 460,
        "wires": [
            [
                "ce77bfc688c5729e"
            ]
        ]
    },
    {
        "id": "2076cec5bfee4ed0",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Sun Altitude",
        "label": "Sun Altitude (°)",
        "format": "{{msg.sunAltitude}}",
        "layout": "row-spread",
        "className": "",
        "x": 1830,
        "y": 260,
        "wires": []
    },
    {
        "id": "52aee13da2025f7d",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: sun altitude",
        "links": [
            "5677cc855a967e6d"
        ],
        "x": 1685,
        "y": 260,
        "wires": [
            [
                "2076cec5bfee4ed0"
            ]
        ]
    },
    {
        "id": "a4ef12a5197e9fb3",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "next sun event",
        "label": "{{msg.nextSunEventLabel}}",
        "format": "{{msg.nextSunEventTime}}",
        "layout": "row-spread",
        "className": "",
        "x": 1840,
        "y": 220,
        "wires": []
    },
    {
        "id": "fcf8873318a4458b",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: next sun event",
        "links": [
            "db7ca85792792739"
        ],
        "x": 1685,
        "y": 220,
        "wires": [
            [
                "a4ef12a5197e9fb3"
            ]
        ]
    },
    {
        "id": "7e62714b2aa52619",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "current sun event",
        "label": "Currently",
        "format": "{{msg.currentSunEvent}}",
        "layout": "row-spread",
        "className": "",
        "x": 1850,
        "y": 180,
        "wires": []
    },
    {
        "id": "2fcf7daed1b5c504",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: current sun event",
        "links": [
            "e87a4aeb08afac25"
        ],
        "x": 1685,
        "y": 180,
        "wires": [
            [
                "7e62714b2aa52619"
            ]
        ]
    },
    {
        "id": "530c6db030ab77cb",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 10,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "allsky",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "down",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "up",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "unknown",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "allsky status",
        "x": 290,
        "y": 460,
        "wires": []
    },
    {
        "id": "4ce088d9f2fc304d",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: allsky status",
        "links": [
            "0ef742f0ce3a644e"
        ],
        "x": 165,
        "y": 460,
        "wires": [
            [
                "530c6db030ab77cb"
            ]
        ]
    },
    {
        "id": "9ee4d5ee56764bf9",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 11,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "photoncatcher",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "down",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "up",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "unknown",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "photoncatcher status",
        "x": 320,
        "y": 500,
        "wires": []
    },
    {
        "id": "aa26016a35c94a06",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: photoncatcher status",
        "links": [
            "02b966f62c936f75"
        ],
        "x": 165,
        "y": 500,
        "wires": [
            [
                "9ee4d5ee56764bf9"
            ]
        ]
    },
    {
        "id": "dcea2f903ef5013f",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 12,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "sky quality meter",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "down",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "up",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "unknown",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "SQM status",
        "x": 290,
        "y": 540,
        "wires": []
    },
    {
        "id": "dc6ce538a350cd47",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: sqm status",
        "links": [
            "063b8259b97a0b3d"
        ],
        "x": 165,
        "y": 540,
        "wires": [
            [
                "dcea2f903ef5013f"
            ]
        ]
    },
    {
        "id": "439be31c6ab3b9a8",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 13,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "weather station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "down",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "up",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "unknown",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "weather station status",
        "x": 320,
        "y": 580,
        "wires": []
    },
    {
        "id": "12046c19be4d398f",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: weather station status",
        "links": [
            "285ed2250a89c4ca"
        ],
        "x": 165,
        "y": 580,
        "wires": [
            [
                "439be31c6ab3b9a8"
            ]
        ]
    },
    {
        "id": "25267c0bfa213bc7",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 8,
        "width": "6",
        "height": "1",
        "name": "Brightness",
        "label": "Brightness (lux)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1250,
        "y": 220,
        "wires": []
    },
    {
        "id": "185a01bf0d8b61b3",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: brightness",
        "links": [
            "272eea162f7c06d4"
        ],
        "x": 1115,
        "y": 220,
        "wires": [
            [
                "25267c0bfa213bc7"
            ]
        ]
    },
    {
        "id": "c712deaa80926088",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 17,
        "group": "e14ef026db2f9ff2",
        "width": 0,
        "height": 0,
        "label": "foshk",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "FOSHK Up",
        "x": 270,
        "y": 760,
        "wires": []
    },
    {
        "id": "5c618c9b0d43e325",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: foshk up",
        "links": [
            "d93405d54aadb9c5"
        ],
        "x": 145,
        "y": 760,
        "wires": [
            [
                "c712deaa80926088"
            ]
        ]
    },
    {
        "id": "66c547ae79dc013d",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "Wx Time",
        "label": "Wx Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1820,
        "y": 640,
        "wires": []
    },
    {
        "id": "d2edaa677e8a5da5",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: wx time",
        "links": [
            "c7c35a87fdd2a805"
        ],
        "x": 1685,
        "y": 640,
        "wires": [
            [
                "66c547ae79dc013d"
            ]
        ]
    },
    {
        "id": "b0b12d31ab375cbc",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 11,
        "group": "2dd7db31dc1fc228",
        "width": 0,
        "height": 0,
        "label": "Wx Inside Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "wx inside battery status",
        "x": 1870,
        "y": 560,
        "wires": []
    },
    {
        "id": "77b49590bfb9c1db",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: wx inside battery status",
        "links": [
            "7596a2b5ba66632d"
        ],
        "x": 1685,
        "y": 560,
        "wires": [
            [
                "b0b12d31ab375cbc"
            ]
        ]
    },
    {
        "id": "8655bc9365ea4411",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 12,
        "group": "2dd7db31dc1fc228",
        "width": 0,
        "height": 0,
        "label": "Wx Outside Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "wx outside battery status",
        "x": 1870,
        "y": 600,
        "wires": []
    },
    {
        "id": "641d1a3b8e6c7e80",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: wx outside battery status",
        "links": [
            "4f20c80502d1ac4c"
        ],
        "x": 1685,
        "y": 600,
        "wires": [
            [
                "8655bc9365ea4411"
            ]
        ]
    },
    {
        "id": "4432f6df26943151",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 13,
        "width": "6",
        "height": "1",
        "name": "Barometer",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 340,
        "wires": []
    },
    {
        "id": "efb5d31f93857d12",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: barometer",
        "links": [
            "f536951f10eb89c0"
        ],
        "x": 835,
        "y": 340,
        "wires": [
            [
                "4432f6df26943151"
            ]
        ]
    },
    {
        "id": "714869d3d9681929",
        "type": "ui_led",
        "z": "52253e7db7826624",
        "order": 3,
        "group": "e14ef026db2f9ff2",
        "width": "0",
        "height": "0",
        "label": "Rain",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "yes",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "recent",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "no",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "rain alert",
        "x": 280,
        "y": 100,
        "wires": []
    },
    {
        "id": "de51319f7f7de892",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: rain alert",
        "links": [
            "4a17e2e43e05333e"
        ],
        "x": 165,
        "y": 100,
        "wires": [
            [
                "714869d3d9681929"
            ]
        ]
    },
    {
        "id": "d292863f9d1804d8",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 9,
        "width": "6",
        "height": "1",
        "name": "Temperature",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "693ea696504d9293",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: temperature",
        "links": [
            "af3a294f661e5d57"
        ],
        "x": 835,
        "y": 260,
        "wires": [
            [
                "d292863f9d1804d8"
            ]
        ]
    },
    {
        "id": "46831386eba0fdaa",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 11,
        "width": "6",
        "height": "1",
        "name": "Dew Point",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "d22b51eb68a33572",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: dewpoint",
        "links": [
            "f12cf1b64cc6d715"
        ],
        "x": 835,
        "y": 300,
        "wires": [
            [
                "46831386eba0fdaa"
            ]
        ]
    },
    {
        "id": "aa342199fc746a46",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 10,
        "width": "6",
        "height": "1",
        "name": "Humidity",
        "label": "Humidity (%)",
        "format": "<p class={{msg.safe_class}}>{{msg.payload}}</p>",
        "layout": "row-spread",
        "className": "",
        "x": 1580,
        "y": 280,
        "wires": []
    },
    {
        "id": "0a094e729c942317",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: humidity",
        "links": [
            "b1ed51bf7bd3647b"
        ],
        "x": 1115,
        "y": 280,
        "wires": [
            [
                "72a2a56eb192747f"
            ]
        ]
    },
    {
        "id": "296f7ae537c2e39b",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "AW Conditions Time",
        "label": "AW Conditions Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1860,
        "y": 680,
        "wires": []
    },
    {
        "id": "27aeba2b8ea66281",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "AW Forecast Time",
        "label": "AW Forecast Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1850,
        "y": 720,
        "wires": []
    },
    {
        "id": "39dd2dcf21c3e352",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "AW Observations Time",
        "label": "AW Observations Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1870,
        "y": 760,
        "wires": []
    },
    {
        "id": "41b06a902b72be0f",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: aw conditions time",
        "links": [
            "035406828484ae23",
            "ac4351284e091076"
        ],
        "x": 1685,
        "y": 680,
        "wires": [
            [
                "296f7ae537c2e39b"
            ]
        ]
    },
    {
        "id": "abfbccd79ef0c3c0",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: aw forecast time",
        "links": [
            "4016642a0cfc4610"
        ],
        "x": 1685,
        "y": 720,
        "wires": [
            [
                "27aeba2b8ea66281"
            ]
        ]
    },
    {
        "id": "f230de2c3b1a6c73",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: aw observations time",
        "links": [
            "a09c97e36164e557",
            "e7a69aa230b9a1bb"
        ],
        "x": 1685,
        "y": 760,
        "wires": [
            [
                "39dd2dcf21c3e352"
            ]
        ]
    },
    {
        "id": "cd14994d62b04bdc",
        "type": "ui_template",
        "z": "52253e7db7826624",
        "group": "76298aafad5dda82",
        "name": "colored text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n    .safe_text {\n        color: rgb(238,238,238);\n    }\n    .unsafe_text {\n        color: red;\n    }\n    \n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1690,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d84871bbe6ba6564",
        "type": "switch",
        "z": "52253e7db7826624",
        "name": "PoP > 5?",
        "property": "pop",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "max_safe_pop",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 440,
        "wires": [
            [
                "d13f9b7b5c97786f"
            ],
            [
                "fc7422e6fac7ae49"
            ]
        ]
    },
    {
        "id": "bd0ff9eeb0246efe",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: pop",
        "links": [
            "4fd05e0f86ab77ed"
        ],
        "x": 1105,
        "y": 440,
        "wires": [
            [
                "d84871bbe6ba6564"
            ]
        ]
    },
    {
        "id": "d13f9b7b5c97786f",
        "type": "change",
        "z": "52253e7db7826624",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "safe_class",
                "pt": "msg",
                "to": "unsafe_text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 420,
        "wires": [
            [
                "4f6e21f31e3d4df5"
            ]
        ]
    },
    {
        "id": "fc7422e6fac7ae49",
        "type": "change",
        "z": "52253e7db7826624",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "safe_class",
                "pt": "msg",
                "to": "safe_text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 460,
        "wires": [
            [
                "4f6e21f31e3d4df5"
            ]
        ]
    },
    {
        "id": "4f6e21f31e3d4df5",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "cdc48dfa5db8c7e1",
        "order": 14,
        "width": "6",
        "height": "1",
        "name": "PoP",
        "label": "Probability of Precipitation (%)",
        "format": "<p class={{msg.safe_class}}>{{msg.pop}}</p>",
        "layout": "row-spread",
        "className": "",
        "x": 1590,
        "y": 440,
        "wires": []
    },
    {
        "id": "304042f1ab677019",
        "type": "switch",
        "z": "52253e7db7826624",
        "name": "Overcast?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "overcast",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "acf31d4446148310"
            ],
            [
                "fe0d09fb8709690a"
            ]
        ]
    },
    {
        "id": "acf31d4446148310",
        "type": "change",
        "z": "52253e7db7826624",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "safe_class",
                "pt": "msg",
                "to": "unsafe_text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 340,
        "wires": [
            [
                "3dcc831fbb1f9471"
            ]
        ]
    },
    {
        "id": "fe0d09fb8709690a",
        "type": "change",
        "z": "52253e7db7826624",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "safe_class",
                "pt": "msg",
                "to": "safe_text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 380,
        "wires": [
            [
                "3dcc831fbb1f9471"
            ]
        ]
    },
    {
        "id": "72a2a56eb192747f",
        "type": "switch",
        "z": "52253e7db7826624",
        "name": "Too humid?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "max_safe_humidity",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "b7e6352d0f0a9627"
            ],
            [
                "dd009dca68f5078c"
            ]
        ]
    },
    {
        "id": "b7e6352d0f0a9627",
        "type": "change",
        "z": "52253e7db7826624",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "safe_class",
                "pt": "msg",
                "to": "unsafe_text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 260,
        "wires": [
            [
                "aa342199fc746a46"
            ]
        ]
    },
    {
        "id": "dd009dca68f5078c",
        "type": "change",
        "z": "52253e7db7826624",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "safe_class",
                "pt": "msg",
                "to": "safe_text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 300,
        "wires": [
            [
                "aa342199fc746a46"
            ]
        ]
    },
    {
        "id": "3ca29015ccbc236f",
        "type": "ui_text",
        "z": "52253e7db7826624",
        "group": "2dd7db31dc1fc228",
        "order": 19,
        "width": 0,
        "height": 0,
        "name": "best sqm",
        "label": "Best SQM",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1820,
        "y": 820,
        "wires": []
    },
    {
        "id": "5a3fc79bb1045482",
        "type": "link in",
        "z": "52253e7db7826624",
        "name": "ui in: max sqm",
        "links": [
            "77e4ab04a54523ad"
        ],
        "x": 1685,
        "y": 820,
        "wires": [
            [
                "3ca29015ccbc236f"
            ]
        ]
    },
    {
        "id": "f532ebe1043bc73c",
        "type": "link in",
        "z": "f1f12ee3354c62ba",
        "name": "ui in (db2): safe conditions",
        "links": [
            "302cf52560850b43"
        ],
        "x": 185,
        "y": 80,
        "wires": [
            [
                "e8fc1993c520eec7"
            ]
        ]
    },
    {
        "id": "e8fc1993c520eec7",
        "type": "debug",
        "z": "f1f12ee3354c62ba",
        "name": "for db2 template",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "0705636ca9c501d0",
        "type": "switch",
        "z": "f1f12ee3354c62ba",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "95be7eaa513e265c",
                "36a250ca737f7ded"
            ],
            [
                "5eb637ec843f1825",
                "3370d6f6f1619764"
            ]
        ]
    },
    {
        "id": "95be7eaa513e265c",
        "type": "change",
        "z": "f1f12ee3354c62ba",
        "name": "safe conditions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "<p class=\"good_color\">Safe Conditions</p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "4d11e5952b5dcdcf"
            ]
        ]
    },
    {
        "id": "5eb637ec843f1825",
        "type": "change",
        "z": "f1f12ee3354c62ba",
        "name": "unsafe conditions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "<p class=\"bad_color\">Unsafe Conditions</p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 240,
        "wires": [
            [
                "4d11e5952b5dcdcf"
            ]
        ]
    },
    {
        "id": "8b77a25c6f3f8b2c",
        "type": "inject",
        "z": "f1f12ee3354c62ba",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "0705636ca9c501d0"
            ]
        ]
    },
    {
        "id": "81c2aeec3ac42273",
        "type": "inject",
        "z": "f1f12ee3354c62ba",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "0705636ca9c501d0"
            ]
        ]
    },
    {
        "id": "36a250ca737f7ded",
        "type": "change",
        "z": "f1f12ee3354c62ba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "good_color",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ui-property:class",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3370d6f6f1619764",
        "type": "change",
        "z": "f1f12ee3354c62ba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bad_color",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ui-property:class",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4d11e5952b5dcdcf",
        "type": "ui-text",
        "z": "f1f12ee3354c62ba",
        "group": "ecd3d6dc353f615e",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "safety conditions",
        "label": "Safety Conditions",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "9b892ea10bdfd2ac",
        "type": "ui-template",
        "z": "f1f12ee3354c62ba",
        "group": "",
        "page": "",
        "ui": "1585fce6039d50ed",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n    /* define any styles here - supports raw CSS */\n    .good_color {\n        .color: green;\n    }    \n    .bad_color {\n        color: red;\n    }",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 1380,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2f21e9a056ca3622",
        "type": "mqtt in",
        "z": "faf1b8c759f6df3e",
        "name": "weather/windspdkmh_avg10m",
        "topic": "weather/windspdkmh_avg10m",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 60,
        "wires": [
            [
                "4cff663fd6b9ff13"
            ]
        ]
    },
    {
        "id": "0fd0a033a9cf026c",
        "type": "mqtt in",
        "z": "faf1b8c759f6df3e",
        "name": "weather/winddir_avg10m",
        "topic": "weather/winddir_avg10m",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 320,
        "wires": [
            [
                "0715e93ab521cad4",
                "a8886ef5c8d1a2a5"
            ]
        ]
    },
    {
        "id": "f171b5816615d846",
        "type": "mqtt in",
        "z": "faf1b8c759f6df3e",
        "name": "weather/maxdailygust",
        "topic": "weather/maxdailygust",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 480,
        "wires": [
            [
                "e269e980ca7152cd"
            ]
        ]
    },
    {
        "id": "01f495590dac2689",
        "type": "subflow:7ad337185da278c4",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "x": 750,
        "y": 580,
        "wires": [
            [
                "0715e93ab521cad4"
            ]
        ]
    },
    {
        "id": "f625cc5b891385dd",
        "type": "subflow:7ad337185da278c4",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "x": 890,
        "y": 100,
        "wires": [
            [
                "0715e93ab521cad4"
            ]
        ]
    },
    {
        "id": "baf4551fc2dd073a",
        "type": "ui_template",
        "z": "faf1b8c759f6df3e",
        "group": "cdc48dfa5db8c7e1",
        "name": "Avg Wind",
        "order": 4,
        "width": "3",
        "height": "6",
        "format": "<!--\npass msg.degrees, msg.speed, msg.speed_unit, msg.gust, msg.gustlabel, msg.label\n-->\n<script>\n    // Watch the incoming message and convert the degrees to a human readable compass direction\n    (function(scope){\n        scope.$watch('msg', function(msg) {\n            if(typeof(msg) === \"object\"){\n                // Convert the degrees to cardinal directions\n                var deg = msg.degrees;\n                var dirs = [\"N\",\"NNE\",\"NE\",\"ENE\",\"E\",\"ESE\",\"SE\",\"SSE\",\"S\",\"SSW\",\"SW\",\"WSW\",\"W\",\"WNW\",\"NW\",\"NNW\",\"N\"];\n                var idx = Math.round(deg*(dirs.length-1)/360);\n                scope.direction = dirs[idx];\n                \n                var spd = parseFloat(msg.speed);\n                var unit = msg.speed_unit;\n                //console.log('speed <' + spd + '>');\n                \n                if (spd == 0) {\n                    scope.arrowOpacity = 0.15;\n                    scope.boxShadow = '#eeeeee';\n                    //console.log('speed was zero for opacity check');\n                }\n                else {\n                    scope.arrowOpacity = 1;\n                    scope.boxShadow = '#000';\n                    //console.log('speed was NOT ZERO for opacity check');\n                }\n                \n                if (spd <= 8) {\n                    scope.color = '#ccffcc';\n                    //console.log('speed was low for color check');                    \n                }\n                else if (spd <= 10) {\n                    scope.color = '#ffffb3';\n                    //console.log('speed was medium for color check');   \n                }\n                else if (unit == \"KPH\" ||\n                         unit == \"MPH\") {\n                    scope.color = '#ff9999';\n                    //console.log('speed was high for color check');   \n                }\n                else {\n                    scope.color = '#f0f0f0';\n                    //console.log('units were not known color check');   \n                }     \n                \n                if (spd == 0) {\n                    msg.speed = \"calm\";\n                }\n                \n                //$(\".{{label}}_compass_container\").css(\"background-color\",scope.color);\n            }\n    \t});\n    })(scope);\n    \n    // Hacks to improve the layout and make it cale\n    $(document).ready(function(){\n        setTimeout(function () {\n            // Remove the auto scrolling from the parent node\n            $(\".compass_container\").parent().css(\"overflow\",\"hidden\");\n        \n            // Adjust the color to match the theme base color by looking up the toolbar header background color;\n            $(\".compass_container .triangle\").css(\"border-bottom-color\",$(\"md-toolbar\").css(\"background-color\"));\n        \n            // Scale the compass into the box that it's being rendered in\n            // This CSS hack helps make sure the line & font size scales appropriately\n            // Based on the node's grid size\n            $(\".compass_container\").each(function(k,v){\n                var scaleWidth = $(v).parent().width() / $(v).width();\n                var scaleHeight = $(v).parent().height() / $(v).height();\n        \n                var translateX = ($(v).width() - $(v).parent().width()) / 2;\n                var translateY = ($(v).height() - $(v).parent().height()) / 2;\n        \n                $(v).css(\"transform\",\"translate(-\"+translateX+\"px,-\"+translateY+\"px) scale(\"+scaleWidth+\",\"+scaleHeight+\") \");\n            });\n            \n            $(\".compass_container\").css(\"display\",\"block\"); // Unhide it now that it's resized\n        }, 1000);\n    });\n</script>\n\n<div class=\"compass_container\">\n    <div class=\"nr-dashboard-text text_container\" style=\"background-color:{{color}}; box-shadow: inset 0px 0px 0px 5px {{boxShadow}}\">\n        <div style=\"font-size: 50%; color: black\">{{msg.speed_unit}}</div>\n        <div style=\"font-size: 120%; color: black\">{{msg.speed}}</div>\n        <div class=\"direction\" style=\"font-size: 50%; text-align: center; color: black\">{{msg.gustlabel}} {{msg.gust}}</div>\n        <div style=\"font-size: 100%; opacity: {{arrowOpacity}}; color: black\">{{direction}}</div>\n        <div style=\"font-size: 50%; color: black\">{{msg.label}}</div>\n    </div>\n    <div class=\"arrow\" style=\"transform: rotate({{msg.degrees}}deg); opacity: {{arrowOpacity}};\">\n      <div class=\"triangle\"></div>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2060,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0715e93ab521cad4",
        "type": "join",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1570,
        "y": 320,
        "wires": [
            [
                "c7e48c1be9f291db",
                "ddc787100585200b"
            ]
        ]
    },
    {
        "id": "c7e48c1be9f291db",
        "type": "function",
        "z": "faf1b8c759f6df3e",
        "name": "create and format wind structure",
        "func": "var newmsg = {\n    \"speed\": msg.payload['windspeed'],\n    \"speed_unit\":msg.payload['unit'],\n    \"degrees\": msg.payload['weather/winddir_avg10m'],\n    \"gust\": msg.payload['windgust'],\n    \"label\": \"10m avg\",\n    \"gustlabel\": \"max gust today\"\n}\nreturn newmsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 320,
        "wires": [
            [
                "baf4551fc2dd073a"
            ]
        ]
    },
    {
        "id": "0360ccf1fc1aa8e4",
        "type": "subflow:1481853667c63134",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "x": 710,
        "y": 620,
        "wires": [
            [
                "975e3be9eae43253"
            ]
        ]
    },
    {
        "id": "3c78fadaf27448c6",
        "type": "subflow:1481853667c63134",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "76cb06a223d1ea05"
            ]
        ]
    },
    {
        "id": "76cb06a223d1ea05",
        "type": "subflow:7ad337185da278c4",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "0715e93ab521cad4"
            ]
        ]
    },
    {
        "id": "975e3be9eae43253",
        "type": "subflow:7ad337185da278c4",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "x": 930,
        "y": 620,
        "wires": [
            [
                "0715e93ab521cad4"
            ]
        ]
    },
    {
        "id": "4cff663fd6b9ff13",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "windspeed",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "avgwindspeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "5de8a0d55516afb5"
            ]
        ]
    },
    {
        "id": "84255badf2e9b194",
        "type": "link in",
        "z": "faf1b8c759f6df3e",
        "name": "Update Avg Wind Speed Display Units",
        "links": [
            "a107a8b7016b65ef"
        ],
        "x": 185,
        "y": 200,
        "wires": [
            [
                "5de8a0d55516afb5"
            ]
        ]
    },
    {
        "id": "5de8a0d55516afb5",
        "type": "switch",
        "z": "faf1b8c759f6df3e",
        "name": "KPH or MPH?",
        "property": "wind_kph",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "a4a2a4c9fd4e28fe"
            ],
            [
                "d7322d50848c48a7"
            ],
            [
                "d7322d50848c48a7"
            ]
        ]
    },
    {
        "id": "a4a2a4c9fd4e28fe",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windspeed",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windspeed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 100,
        "wires": [
            [
                "f625cc5b891385dd"
            ]
        ]
    },
    {
        "id": "d7322d50848c48a7",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windspeed",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windspeed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 200,
        "wires": [
            [
                "3c78fadaf27448c6"
            ]
        ]
    },
    {
        "id": "e269e980ca7152cd",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "windgust",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 540,
        "wires": [
            [
                "0af2cd1ce90b6110"
            ]
        ]
    },
    {
        "id": "0af2cd1ce90b6110",
        "type": "switch",
        "z": "faf1b8c759f6df3e",
        "name": "KPH or MPH?",
        "property": "wind_kph",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 320,
        "y": 600,
        "wires": [
            [
                "deebb58e1af61920"
            ],
            [
                "5858d58e818cd118"
            ],
            [
                "5858d58e818cd118"
            ]
        ]
    },
    {
        "id": "7ae248ed6c6eef06",
        "type": "link in",
        "z": "faf1b8c759f6df3e",
        "name": "Update Max Daily Wind Gust Units",
        "links": [
            "a107a8b7016b65ef"
        ],
        "x": 175,
        "y": 640,
        "wires": [
            [
                "0af2cd1ce90b6110"
            ]
        ]
    },
    {
        "id": "deebb58e1af61920",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windgust",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windgust",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "01f495590dac2689"
            ]
        ]
    },
    {
        "id": "5858d58e818cd118",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windgust",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windgust",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 620,
        "wires": [
            [
                "0360ccf1fc1aa8e4"
            ]
        ]
    },
    {
        "id": "ddc787100585200b",
        "type": "debug",
        "z": "faf1b8c759f6df3e",
        "name": "after join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 240,
        "wires": []
    },
    {
        "id": "cd3ae8e731fc5c28",
        "type": "link in",
        "z": "faf1b8c759f6df3e",
        "name": "Update Avg Wind Unit Label",
        "links": [
            "a107a8b7016b65ef"
        ],
        "x": 415,
        "y": 420,
        "wires": [
            [
                "a8886ef5c8d1a2a5"
            ]
        ]
    },
    {
        "id": "a8886ef5c8d1a2a5",
        "type": "switch",
        "z": "faf1b8c759f6df3e",
        "name": "KPH or MPH?",
        "property": "wind_kph",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 540,
        "y": 400,
        "wires": [
            [
                "a0b9ce9b1457a80d"
            ],
            [
                "25563fc11065b4c2"
            ],
            [
                "25563fc11065b4c2"
            ]
        ]
    },
    {
        "id": "a0b9ce9b1457a80d",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "KPH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "unit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 380,
        "wires": [
            [
                "0715e93ab521cad4"
            ]
        ]
    },
    {
        "id": "25563fc11065b4c2",
        "type": "change",
        "z": "faf1b8c759f6df3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MPH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "unit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 420,
        "wires": [
            [
                "0715e93ab521cad4"
            ]
        ]
    },
    {
        "id": "9501bda6779bf177",
        "type": "mqtt in",
        "z": "fb58cc7006b99d2a",
        "name": "weather/humidity",
        "topic": "weather/humidity",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "4f11da2e742e1002",
                "2ee0ab64920a3b9a",
                "b1ed51bf7bd3647b"
            ]
        ]
    },
    {
        "id": "791e19db0724f047",
        "type": "comment",
        "z": "fb58cc7006b99d2a",
        "name": "MQTT Data",
        "info": "",
        "x": 630,
        "y": 60,
        "wires": []
    },
    {
        "id": "55be77eed58d7fa1",
        "type": "subflow:7630d7f507ca85f8",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "48a6c118e7a1f594",
                "6d5f137e2eee0272"
            ]
        ]
    },
    {
        "id": "9b44abf381354842",
        "type": "mqtt in",
        "z": "fb58cc7006b99d2a",
        "name": "weather/solarradiation",
        "topic": "weather/solarradiation",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 220,
        "wires": [
            [
                "ad454d3db7ad1e58"
            ]
        ]
    },
    {
        "id": "ad454d3db7ad1e58",
        "type": "function",
        "z": "fb58cc7006b99d2a",
        "name": "convert to lux",
        "func": "msg.payload = msg.payload * 126.7;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "55be77eed58d7fa1"
            ]
        ]
    },
    {
        "id": "48a6c118e7a1f594",
        "type": "subflow:aa22e89f1e9e3c1f",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "x": 760,
        "y": 220,
        "wires": [
            [
                "272eea162f7c06d4"
            ]
        ]
    },
    {
        "id": "58f70a08cf41df04",
        "type": "mqtt in",
        "z": "fb58cc7006b99d2a",
        "name": "weather/dateutc",
        "topic": "weather/dateutc",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 560,
        "wires": [
            [
                "f13c0d0adcb3c822",
                "199651bf74b34270"
            ]
        ]
    },
    {
        "id": "f13c0d0adcb3c822",
        "type": "moment",
        "z": "fb58cc7006b99d2a",
        "name": "convert UTC to ET",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "ETC/UTC",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm:ss",
        "locale": "en_US",
        "output": "",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 430,
        "y": 560,
        "wires": [
            [
                "723ce3b85f9fce09",
                "c7c35a87fdd2a805"
            ]
        ]
    },
    {
        "id": "65a605197cb5e58b",
        "type": "mqtt in",
        "z": "fb58cc7006b99d2a",
        "name": "weather/battout",
        "topic": "weather/battout",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 940,
        "wires": [
            [
                "da514a30c3be5cba",
                "811215edd5f05734",
                "4f20c80502d1ac4c"
            ]
        ]
    },
    {
        "id": "da514a30c3be5cba",
        "type": "debug",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a13b532bca478442",
        "type": "mqtt in",
        "z": "fb58cc7006b99d2a",
        "name": "weather/battin",
        "topic": "weather/battin",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 1280,
        "wires": [
            [
                "dbbf425a6be6abdc",
                "616b774375a42928",
                "7596a2b5ba66632d"
            ]
        ]
    },
    {
        "id": "dbbf425a6be6abdc",
        "type": "debug",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1340,
        "wires": []
    },
    {
        "id": "199651bf74b34270",
        "type": "trigger",
        "z": "fb58cc7006b99d2a",
        "name": "generate wx alert if no updates",
        "op1": "false",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "300",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "f9032935126aa587",
                "d93405d54aadb9c5"
            ]
        ]
    },
    {
        "id": "723ce3b85f9fce09",
        "type": "change",
        "z": "fb58cc7006b99d2a",
        "name": "we are receiving wx messages",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 520,
        "wires": [
            [
                "d93405d54aadb9c5"
            ]
        ]
    },
    {
        "id": "b68edcd597e20c39",
        "type": "inject",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 360,
        "wires": [
            [
                "f9032935126aa587"
            ]
        ]
    },
    {
        "id": "f9032935126aa587",
        "type": "change",
        "z": "fb58cc7006b99d2a",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "no weather data received for five minutes",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 420,
        "wires": [
            [
                "0ffe1b3532d4461f"
            ]
        ]
    },
    {
        "id": "ed1f38debf73f7db",
        "type": "inject",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 820,
        "wires": [
            [
                "c910150193d28d7b"
            ]
        ]
    },
    {
        "id": "c910150193d28d7b",
        "type": "change",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "outside battery warning",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 880,
        "wires": [
            [
                "c4fe7a1bc2687883"
            ]
        ]
    },
    {
        "id": "811215edd5f05734",
        "type": "switch",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 880,
        "wires": [
            [
                "c910150193d28d7b"
            ]
        ]
    },
    {
        "id": "b9253a9e3319804e",
        "type": "inject",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 1140,
        "wires": [
            [
                "849d112d3067586b"
            ]
        ]
    },
    {
        "id": "616b774375a42928",
        "type": "switch",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "849d112d3067586b"
            ]
        ]
    },
    {
        "id": "849d112d3067586b",
        "type": "change",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "inside battery warning",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1200,
        "wires": [
            [
                "d1f03acec3ca5d44"
            ]
        ]
    },
    {
        "id": "0ffe1b3532d4461f",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "no wx data alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1125,
        "y": 420,
        "wires": []
    },
    {
        "id": "c4fe7a1bc2687883",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "outside wx battery alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1085,
        "y": 880,
        "wires": []
    },
    {
        "id": "d1f03acec3ca5d44",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "inside wx battery alert",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1005,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9a3b385e4867ec7e",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "humidity out once per 5 minutes",
        "mode": "link",
        "links": [
            "433b5c07bddc7a9a",
            "abd1b3e3a8c747e9"
        ],
        "x": 865,
        "y": 140,
        "wires": []
    },
    {
        "id": "4f11da2e742e1002",
        "type": "delay",
        "z": "fb58cc7006b99d2a",
        "name": "one per 5 min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 140,
        "wires": [
            [
                "9a3b385e4867ec7e"
            ]
        ]
    },
    {
        "id": "6d5f137e2eee0272",
        "type": "change",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lux",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "2ee0ab64920a3b9a",
        "type": "change",
        "z": "fb58cc7006b99d2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "humidity",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "272eea162f7c06d4",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "ui out: brightness",
        "mode": "link",
        "links": [
            "185a01bf0d8b61b3"
        ],
        "x": 905,
        "y": 220,
        "wires": []
    },
    {
        "id": "d93405d54aadb9c5",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "ui out: foshk up",
        "mode": "link",
        "links": [
            "5c618c9b0d43e325"
        ],
        "x": 955,
        "y": 480,
        "wires": []
    },
    {
        "id": "c7c35a87fdd2a805",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "ui out: wx time",
        "mode": "link",
        "links": [
            "d2edaa677e8a5da5"
        ],
        "x": 655,
        "y": 600,
        "wires": []
    },
    {
        "id": "7596a2b5ba66632d",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "ui out: wx inside battery status",
        "mode": "link",
        "links": [
            "77b49590bfb9c1db"
        ],
        "x": 435,
        "y": 1280,
        "wires": []
    },
    {
        "id": "4f20c80502d1ac4c",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "ui out: wx outside battery status",
        "mode": "link",
        "links": [
            "641d1a3b8e6c7e80"
        ],
        "x": 455,
        "y": 940,
        "wires": []
    },
    {
        "id": "b1ed51bf7bd3647b",
        "type": "link out",
        "z": "fb58cc7006b99d2a",
        "name": "ui out: humidity",
        "mode": "link",
        "links": [
            "0a094e729c942317"
        ],
        "x": 305,
        "y": 100,
        "wires": []
    },
    {
        "id": "daedccb809b5b61e",
        "type": "mqtt in",
        "z": "41b35d7c6f31c98f",
        "name": "weather/baromrelhpa",
        "topic": "weather/baromrelhpa",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "d6383de4711781c7",
                "e9bbc1cfc4efd812"
            ]
        ]
    },
    {
        "id": "904d549db40a38d7",
        "type": "subflow:7630d7f507ca85f8",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "x": 980,
        "y": 160,
        "wires": [
            [
                "63d30e413cf32c15"
            ]
        ]
    },
    {
        "id": "63d30e413cf32c15",
        "type": "subflow:aa22e89f1e9e3c1f",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "x": 1200,
        "y": 160,
        "wires": [
            [
                "f536951f10eb89c0"
            ]
        ]
    },
    {
        "id": "6a901b1f43f4b2d8",
        "type": "subflow:fee8a00528469178",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "x": 950,
        "y": 220,
        "wires": [
            [
                "bb8d801d3745986d"
            ]
        ]
    },
    {
        "id": "bb8d801d3745986d",
        "type": "subflow:29bf3ca50f8de2a8",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "f536951f10eb89c0"
            ]
        ]
    },
    {
        "id": "d6383de4711781c7",
        "type": "change",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "pressure",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "1154f9b9c83d6f31",
                "347999b708237222"
            ]
        ]
    },
    {
        "id": "1154f9b9c83d6f31",
        "type": "switch",
        "z": "41b35d7c6f31c98f",
        "name": "mb or in HG?",
        "property": "pressure_mb",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 280,
        "y": 200,
        "wires": [
            [
                "738314c1f57ccf52"
            ],
            [
                "2ea1aded3999a42b"
            ],
            [
                "738314c1f57ccf52"
            ]
        ]
    },
    {
        "id": "9595115d9ce15971",
        "type": "link in",
        "z": "41b35d7c6f31c98f",
        "name": "Update Pressure Display",
        "links": [
            "4e51208274564588"
        ],
        "x": 105,
        "y": 240,
        "wires": [
            [
                "1154f9b9c83d6f31"
            ]
        ]
    },
    {
        "id": "738314c1f57ccf52",
        "type": "change",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Pressure (mb)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "a4c85a660f456ef6"
            ]
        ]
    },
    {
        "id": "a4c85a660f456ef6",
        "type": "change",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pressure",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "904d549db40a38d7",
                "347999b708237222"
            ]
        ]
    },
    {
        "id": "2ea1aded3999a42b",
        "type": "change",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Pressure (in HG)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "80b04723e0dd97eb"
            ]
        ]
    },
    {
        "id": "80b04723e0dd97eb",
        "type": "change",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pressure",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 220,
        "wires": [
            [
                "6a901b1f43f4b2d8"
            ]
        ]
    },
    {
        "id": "347999b708237222",
        "type": "debug",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "e9bbc1cfc4efd812",
        "type": "delay",
        "z": "41b35d7c6f31c98f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 40,
        "wires": [
            [
                "a93186e4a3dc7e59"
            ]
        ]
    },
    {
        "id": "a93186e4a3dc7e59",
        "type": "link out",
        "z": "41b35d7c6f31c98f",
        "name": "pressure out",
        "mode": "link",
        "links": [
            "4eadc36993b638be"
        ],
        "x": 585,
        "y": 40,
        "wires": []
    },
    {
        "id": "f536951f10eb89c0",
        "type": "link out",
        "z": "41b35d7c6f31c98f",
        "name": "ui out: barometer",
        "mode": "link",
        "links": [
            "efb5d31f93857d12"
        ],
        "x": 1355,
        "y": 180,
        "wires": []
    },
    {
        "id": "54ea493d908bc375",
        "type": "debug",
        "z": "4cd628a2f0b7e3e5",
        "name": "raining?",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 160,
        "wires": []
    },
    {
        "id": "e445201dca09c13e",
        "type": "function",
        "z": "4cd628a2f0b7e3e5",
        "name": "Is it raining now?",
        "func": "var e = msg.payload['weather/eventrainmm'];\nvar h = msg.payload['weather/hourlyrainmm'];\n\n//node.log(\"e is \" + e + \", h is \" + h);\n\nif (h > 0) {\n  msg.payload = \"yes\";\n  global.set(\"rain\", true);\n}\nelse if (e > 0) {\n  msg.payload = \"recent\";\n  global.set(\"rain\", false);\n}\nelse {\n  msg.payload = \"no\";\n  global.set(\"rain\", false);\n}\n//var b = (e > 0) || (h > 0);\n//msg.payload = b;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 120,
        "wires": [
            [
                "bd94a383fb1f1181",
                "54ea493d908bc375",
                "4a17e2e43e05333e"
            ]
        ]
    },
    {
        "id": "18e1d3ea3e1c5544",
        "type": "join",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 590,
        "y": 120,
        "wires": [
            [
                "e445201dca09c13e"
            ]
        ]
    },
    {
        "id": "48e425aa4571d00d",
        "type": "mqtt in",
        "z": "4cd628a2f0b7e3e5",
        "name": "weather/eventrainmm",
        "topic": "weather/eventrainmm",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 60,
        "wires": [
            [
                "18e1d3ea3e1c5544",
                "ade568537411c64a"
            ]
        ]
    },
    {
        "id": "0cf67d9d4b26d603",
        "type": "mqtt in",
        "z": "4cd628a2f0b7e3e5",
        "name": "weather/hourlyrainmm",
        "topic": "weather/hourlyrainmm",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 380,
        "wires": [
            [
                "18e1d3ea3e1c5544",
                "2b35a3693c2bcc32"
            ]
        ]
    },
    {
        "id": "d7b10623dc8d1fd9",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "topic: event total",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "event",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 340,
        "wires": [
            [
                "ba27f58debcfd0ea"
            ]
        ]
    },
    {
        "id": "c8f3d6e38b8d8eab",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "topic: hourly rate",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "hour rt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 460,
        "wires": [
            [
                "ba27f58debcfd0ea"
            ]
        ]
    },
    {
        "id": "ba27f58debcfd0ea",
        "type": "ui_chart",
        "z": "4cd628a2f0b7e3e5",
        "name": "rain chart",
        "group": "cdc48dfa5db8c7e1",
        "order": 3,
        "width": "4",
        "height": "6",
        "label": "{{msg.label}}",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#e32400",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#0042aa",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1960,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "01c3c0e639e6b7b9",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "topic: daily total",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "day",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 600,
        "wires": [
            [
                "ba27f58debcfd0ea"
            ]
        ]
    },
    {
        "id": "b5926781756b0efb",
        "type": "mqtt in",
        "z": "4cd628a2f0b7e3e5",
        "name": "weather/dailyrainmm",
        "topic": "weather/dailyrainmm",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 680,
        "wires": [
            [
                "5f9df2c95b8aa202"
            ]
        ]
    },
    {
        "id": "ade568537411c64a",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "eventrain",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "eventrain",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "eventraintime",
                "pt": "global",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "ad657ac141c56607"
            ]
        ]
    },
    {
        "id": "2b35a3693c2bcc32",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourlyrain",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 440,
        "wires": [
            [
                "603021279f237890"
            ]
        ]
    },
    {
        "id": "5f9df2c95b8aa202",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dailyrain",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 740,
        "wires": [
            [
                "6133552eaad696f1"
            ]
        ]
    },
    {
        "id": "6133552eaad696f1",
        "type": "switch",
        "z": "4cd628a2f0b7e3e5",
        "name": "mm or in?",
        "property": "rain_mm",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 360,
        "y": 800,
        "wires": [
            [
                "68e5fbb864bb32a4"
            ],
            [
                "e91f9627e8e8d938"
            ],
            [
                "e91f9627e8e8d938"
            ]
        ]
    },
    {
        "id": "9fec7ac7b267d9ba",
        "type": "link in",
        "z": "4cd628a2f0b7e3e5",
        "name": "update daily rain units",
        "links": [
            "a3585fe8cf0d3a3b",
            "0e82fb283580fd3f"
        ],
        "x": 205,
        "y": 840,
        "wires": [
            [
                "6133552eaad696f1"
            ]
        ]
    },
    {
        "id": "603021279f237890",
        "type": "switch",
        "z": "4cd628a2f0b7e3e5",
        "name": "mm or in?",
        "property": "rain_mm",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 340,
        "y": 500,
        "wires": [
            [
                "bb5eeaf570841249"
            ],
            [
                "c2df051ba6fba945"
            ],
            [
                "c2df051ba6fba945"
            ]
        ]
    },
    {
        "id": "ad3d83a2fec587ee",
        "type": "link in",
        "z": "4cd628a2f0b7e3e5",
        "name": "update hourly rain units",
        "links": [
            "a3585fe8cf0d3a3b",
            "0e82fb283580fd3f"
        ],
        "x": 185,
        "y": 540,
        "wires": [
            [
                "603021279f237890"
            ]
        ]
    },
    {
        "id": "ad657ac141c56607",
        "type": "switch",
        "z": "4cd628a2f0b7e3e5",
        "name": "mm or in?",
        "property": "rain_mm",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "016238299dab5589"
            ],
            [
                "367fde785ae32e8f"
            ],
            [
                "367fde785ae32e8f"
            ]
        ]
    },
    {
        "id": "ab8639744e65f8a2",
        "type": "link in",
        "z": "4cd628a2f0b7e3e5",
        "name": "update event rain units",
        "links": [
            "a3585fe8cf0d3a3b",
            "0e82fb283580fd3f"
        ],
        "x": 165,
        "y": 220,
        "wires": [
            [
                "ad657ac141c56607"
            ]
        ]
    },
    {
        "id": "68e5fbb864bb32a4",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Rain (mm)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 760,
        "wires": [
            [
                "5a04a84aa7464eff"
            ]
        ]
    },
    {
        "id": "5a04a84aa7464eff",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dailyrain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 760,
        "wires": [
            [
                "01c3c0e639e6b7b9"
            ]
        ]
    },
    {
        "id": "e91f9627e8e8d938",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Rain (in)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 820,
        "wires": [
            [
                "13d744536421dda5"
            ]
        ]
    },
    {
        "id": "13d744536421dda5",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dailyrain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "38928cead6430f2c"
            ]
        ]
    },
    {
        "id": "9fa74f41b08ae426",
        "type": "subflow:29bf3ca50f8de2a8",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "x": 1320,
        "y": 820,
        "wires": [
            [
                "01c3c0e639e6b7b9"
            ]
        ]
    },
    {
        "id": "38928cead6430f2c",
        "type": "subflow:351fdfbd1fd8e5d4",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "x": 1020,
        "y": 820,
        "wires": [
            [
                "9fa74f41b08ae426"
            ]
        ]
    },
    {
        "id": "bb5eeaf570841249",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "hourlyrain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 460,
        "wires": [
            [
                "c8f3d6e38b8d8eab"
            ]
        ]
    },
    {
        "id": "c2df051ba6fba945",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "hourlyrain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 520,
        "wires": [
            [
                "bce1ead716eaef68"
            ]
        ]
    },
    {
        "id": "176d41f8ec845b87",
        "type": "subflow:29bf3ca50f8de2a8",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "x": 1300,
        "y": 520,
        "wires": [
            [
                "c8f3d6e38b8d8eab"
            ]
        ]
    },
    {
        "id": "bce1ead716eaef68",
        "type": "subflow:351fdfbd1fd8e5d4",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "x": 1000,
        "y": 520,
        "wires": [
            [
                "176d41f8ec845b87"
            ]
        ]
    },
    {
        "id": "016238299dab5589",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "eventrain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 240,
        "wires": [
            [
                "d7b10623dc8d1fd9"
            ]
        ]
    },
    {
        "id": "367fde785ae32e8f",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "eventrain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 300,
        "wires": [
            [
                "cb08fbae308bcd8d"
            ]
        ]
    },
    {
        "id": "0b1eb2903d05dffe",
        "type": "subflow:29bf3ca50f8de2a8",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "x": 1300,
        "y": 300,
        "wires": [
            [
                "d7b10623dc8d1fd9"
            ]
        ]
    },
    {
        "id": "cb08fbae308bcd8d",
        "type": "subflow:351fdfbd1fd8e5d4",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "0b1eb2903d05dffe"
            ]
        ]
    },
    {
        "id": "904d63f3556eb339",
        "type": "inject",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "weather/eventrainmm",
        "payload": "$random() * 32\t",
        "payloadType": "jsonata",
        "x": 70,
        "y": 160,
        "wires": [
            [
                "ade568537411c64a"
            ]
        ]
    },
    {
        "id": "eb2bb8ac07e21bf8",
        "type": "inject",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "$random() * 32",
        "payloadType": "jsonata",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "2b35a3693c2bcc32"
            ]
        ]
    },
    {
        "id": "6a80d9c06b448e16",
        "type": "inject",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "$random() * 4",
        "payloadType": "jsonata",
        "x": 90,
        "y": 780,
        "wires": [
            [
                "5f9df2c95b8aa202"
            ]
        ]
    },
    {
        "id": "2d74125ce84a3cbf",
        "type": "ui_ui_control",
        "z": "4cd628a2f0b7e3e5",
        "d": true,
        "name": "",
        "events": "connect",
        "x": 1480,
        "y": 80,
        "wires": [
            [
                "9c90b1845d584239"
            ]
        ]
    },
    {
        "id": "4249993247af9866",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "init hourly rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "hour rt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 240,
        "wires": [
            [
                "f4c1f968c13dc767",
                "ba27f58debcfd0ea"
            ]
        ]
    },
    {
        "id": "9c90b1845d584239",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "empty the chart",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 100,
        "wires": [
            [
                "ba27f58debcfd0ea",
                "fdd92d58f1c19e10"
            ]
        ]
    },
    {
        "id": "fdd92d58f1c19e10",
        "type": "delay",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1850,
        "y": 80,
        "wires": [
            [
                "4249993247af9866"
            ]
        ]
    },
    {
        "id": "75ab41cdf188a4c9",
        "type": "comment",
        "z": "4cd628a2f0b7e3e5",
        "name": "try to force bar chart columns into the right order",
        "info": "bar chart should be ordered:\nevent, hourly, daily\n\nThis nonsense is an attempt to force dummy events in in the right order to initialkze the bar chart display.",
        "x": 2240,
        "y": 100,
        "wires": []
    },
    {
        "id": "bd94a383fb1f1181",
        "type": "switch",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 950,
        "y": 60,
        "wires": [
            [
                "37b8a6adeff35067"
            ]
        ]
    },
    {
        "id": "217e10cae9be7388",
        "type": "inject",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1140,
        "y": 20,
        "wires": [
            [
                "37b8a6adeff35067"
            ]
        ]
    },
    {
        "id": "37b8a6adeff35067",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Rain!!!!!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "priority",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 100,
        "wires": [
            [
                "79afcb09a92f7735"
            ]
        ]
    },
    {
        "id": "79afcb09a92f7735",
        "type": "link out",
        "z": "4cd628a2f0b7e3e5",
        "name": "rain alert!",
        "mode": "link",
        "links": [
            "efaa571da65ced61"
        ],
        "x": 1255,
        "y": 120,
        "wires": []
    },
    {
        "id": "d4e37a6647362afb",
        "type": "inject",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1470,
        "y": 140,
        "wires": [
            [
                "9c90b1845d584239"
            ]
        ]
    },
    {
        "id": "f4c1f968c13dc767",
        "type": "delay",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2230,
        "y": 280,
        "wires": [
            [
                "5784c8d0b86ffd06"
            ]
        ]
    },
    {
        "id": "5784c8d0b86ffd06",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "init event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "event",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2260,
        "y": 320,
        "wires": [
            [
                "ad8c5e6d3c8650c0",
                "ba27f58debcfd0ea"
            ]
        ]
    },
    {
        "id": "ad8c5e6d3c8650c0",
        "type": "delay",
        "z": "4cd628a2f0b7e3e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2310,
        "y": 360,
        "wires": [
            [
                "5eec4ff946cfa8df"
            ]
        ]
    },
    {
        "id": "5eec4ff946cfa8df",
        "type": "change",
        "z": "4cd628a2f0b7e3e5",
        "name": "init daily",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "day",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2340,
        "y": 400,
        "wires": [
            [
                "ba27f58debcfd0ea"
            ]
        ]
    },
    {
        "id": "4a17e2e43e05333e",
        "type": "link out",
        "z": "4cd628a2f0b7e3e5",
        "name": "ui out: rain alert",
        "mode": "link",
        "links": [
            "de51319f7f7de892"
        ],
        "x": 965,
        "y": 160,
        "wires": []
    },
    {
        "id": "1198f52020b010c4",
        "type": "mqtt in",
        "z": "7cf091a10f8a9e1e",
        "name": "weather/tempc",
        "topic": "weather/tempc",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 100,
        "wires": [
            [
                "bc01c132e617609c",
                "83cb9b3952b3b276"
            ]
        ]
    },
    {
        "id": "81e704da7b890497",
        "type": "subflow:0b6ce0b527d51f54",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "x": 890,
        "y": 340,
        "wires": [
            [
                "3b62fb8652a22e7a"
            ]
        ]
    },
    {
        "id": "3b62fb8652a22e7a",
        "type": "subflow:7630d7f507ca85f8",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "af3a294f661e5d57"
            ]
        ]
    },
    {
        "id": "6d97a026157dfb56",
        "type": "switch",
        "z": "7cf091a10f8a9e1e",
        "name": "C or F?",
        "property": "temperature_celsius",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 280,
        "y": 220,
        "wires": [
            [
                "a32f517bb6983c1a"
            ],
            [
                "7f3968c2e3a66a22"
            ],
            [
                "7f3968c2e3a66a22"
            ]
        ]
    },
    {
        "id": "a32f517bb6983c1a",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Temperature (°C)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "899377723f0f2236"
            ]
        ]
    },
    {
        "id": "7f3968c2e3a66a22",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Temperature (°F)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "1c9a7e82b19d8a46"
            ]
        ]
    },
    {
        "id": "bc01c132e617609c",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "temperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "6d97a026157dfb56",
                "598a7c806fe198b4"
            ]
        ]
    },
    {
        "id": "899377723f0f2236",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 220,
        "wires": [
            [
                "ad391fd657927ac3",
                "af3a294f661e5d57"
            ]
        ]
    },
    {
        "id": "1c9a7e82b19d8a46",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 340,
        "wires": [
            [
                "81e704da7b890497"
            ]
        ]
    },
    {
        "id": "598a7c806fe198b4",
        "type": "debug",
        "z": "7cf091a10f8a9e1e",
        "name": "after set msg.tempera",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 140,
        "wires": []
    },
    {
        "id": "ad391fd657927ac3",
        "type": "debug",
        "z": "7cf091a10f8a9e1e",
        "name": "after set msg.payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 160,
        "wires": []
    },
    {
        "id": "f2399cc8e3f09a67",
        "type": "link in",
        "z": "7cf091a10f8a9e1e",
        "name": "Update Temperature Display Units",
        "links": [
            "84d96db8fb60c915",
            "94065e4a9d618837"
        ],
        "x": 65,
        "y": 260,
        "wires": [
            [
                "6d97a026157dfb56"
            ]
        ]
    },
    {
        "id": "0f5ba1102232fdf5",
        "type": "mqtt in",
        "z": "7cf091a10f8a9e1e",
        "name": "weather/dewptc",
        "topic": "weather/dewptc",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 500,
        "wires": [
            [
                "bb9eb340aad65b35",
                "7e02323501f26e1d"
            ]
        ]
    },
    {
        "id": "be3c995780f3e178",
        "type": "subflow:7630d7f507ca85f8",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "x": 1070,
        "y": 760,
        "wires": [
            [
                "f12cf1b64cc6d715"
            ]
        ]
    },
    {
        "id": "14f0cd88d8d12a7e",
        "type": "subflow:0b6ce0b527d51f54",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "x": 870,
        "y": 760,
        "wires": [
            [
                "be3c995780f3e178"
            ]
        ]
    },
    {
        "id": "bb9eb340aad65b35",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dewpoint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "dewpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 560,
        "wires": [
            [
                "9f8588c615aa0447"
            ]
        ]
    },
    {
        "id": "9f8588c615aa0447",
        "type": "switch",
        "z": "7cf091a10f8a9e1e",
        "name": "C or F?",
        "property": "temperature_celsius",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 220,
        "y": 640,
        "wires": [
            [
                "67030289518b971a"
            ],
            [
                "cfb72c59eec19674"
            ],
            [
                "cfb72c59eec19674"
            ]
        ]
    },
    {
        "id": "67030289518b971a",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Dew Point (°C)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 640,
        "wires": [
            [
                "d276c62c928f71f1"
            ]
        ]
    },
    {
        "id": "cfb72c59eec19674",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Dew Point (°F)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 760,
        "wires": [
            [
                "8f4be93ea01561b1"
            ]
        ]
    },
    {
        "id": "d276c62c928f71f1",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dewpoint",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 640,
        "wires": [
            [
                "f12cf1b64cc6d715"
            ]
        ]
    },
    {
        "id": "8f4be93ea01561b1",
        "type": "change",
        "z": "7cf091a10f8a9e1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dewpoint",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 760,
        "wires": [
            [
                "14f0cd88d8d12a7e"
            ]
        ]
    },
    {
        "id": "e017a2edda3665cd",
        "type": "link in",
        "z": "7cf091a10f8a9e1e",
        "name": "Update Dew Point Display Units",
        "links": [
            "84d96db8fb60c915"
        ],
        "x": 55,
        "y": 700,
        "wires": [
            [
                "9f8588c615aa0447"
            ]
        ]
    },
    {
        "id": "83cb9b3952b3b276",
        "type": "delay",
        "z": "7cf091a10f8a9e1e",
        "name": "one per 5 min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 60,
        "wires": [
            [
                "a9b13eec30786f68"
            ]
        ]
    },
    {
        "id": "a9b13eec30786f68",
        "type": "link out",
        "z": "7cf091a10f8a9e1e",
        "name": "temperature out",
        "mode": "link",
        "links": [
            "9e0df473e9c31958"
        ],
        "x": 605,
        "y": 60,
        "wires": []
    },
    {
        "id": "eec9533f5b6e7d56",
        "type": "link out",
        "z": "7cf091a10f8a9e1e",
        "name": "dew point out",
        "mode": "link",
        "links": [
            "915e95353e767ee2"
        ],
        "x": 655,
        "y": 500,
        "wires": []
    },
    {
        "id": "7e02323501f26e1d",
        "type": "delay",
        "z": "7cf091a10f8a9e1e",
        "name": "one per 5 min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 500,
        "wires": [
            [
                "eec9533f5b6e7d56"
            ]
        ]
    },
    {
        "id": "af3a294f661e5d57",
        "type": "link out",
        "z": "7cf091a10f8a9e1e",
        "name": "ui out: temperature",
        "mode": "link",
        "links": [
            "693ea696504d9293"
        ],
        "x": 1205,
        "y": 220,
        "wires": []
    },
    {
        "id": "f12cf1b64cc6d715",
        "type": "link out",
        "z": "7cf091a10f8a9e1e",
        "name": "ui out: dew point",
        "mode": "link",
        "links": [
            "d22b51eb68a33572"
        ],
        "x": 1275,
        "y": 640,
        "wires": []
    },
    {
        "id": "a3f80e24ee9a23bf",
        "type": "mqtt in",
        "z": "e185da3a46d5d090",
        "name": "weather/windspeedkmh",
        "topic": "weather/windspeedkmh",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 60,
        "wires": [
            [
                "d7c57c69eac4868a",
                "f075e1a99cf18091"
            ]
        ]
    },
    {
        "id": "cb87d5dd23bdce30",
        "type": "mqtt in",
        "z": "e185da3a46d5d090",
        "name": "weather/winddir",
        "topic": "weather/winddir",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 320,
        "wires": [
            [
                "aef61b6fde3de708",
                "9aa9aafd4a5a4944",
                "69f98e7fcb0f0f82",
                "a2aec3a73f6b095c"
            ]
        ]
    },
    {
        "id": "03245c9be6504529",
        "type": "mqtt in",
        "z": "e185da3a46d5d090",
        "name": "weather/windgustkmh",
        "topic": "weather/windgustkmh",
        "qos": "0",
        "datatype": "utf8",
        "broker": "1e52f8af9bd8e83a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 480,
        "wires": [
            [
                "f113d2f624dfcc74",
                "74e0a10e753086f2",
                "7b770af4484535fe"
            ]
        ]
    },
    {
        "id": "ad9fe91754b0a18a",
        "type": "subflow:7ad337185da278c4",
        "z": "e185da3a46d5d090",
        "name": "",
        "x": 730,
        "y": 580,
        "wires": [
            [
                "aef61b6fde3de708"
            ]
        ]
    },
    {
        "id": "0bb5041fd106208f",
        "type": "subflow:7ad337185da278c4",
        "z": "e185da3a46d5d090",
        "name": "",
        "x": 870,
        "y": 100,
        "wires": [
            [
                "aef61b6fde3de708"
            ]
        ]
    },
    {
        "id": "d2b864374e076eab",
        "type": "ui_template",
        "z": "e185da3a46d5d090",
        "group": "cdc48dfa5db8c7e1",
        "name": "Wind",
        "order": 2,
        "width": "3",
        "height": "6",
        "format": "<!--\npass msg.degrees, msg.speed, msg.speed_unit, msg.gust, msg.gustlabel, msg.label\n-->\n<script>\n    // Watch the incoming message and convert the degrees to a human readable compass direction\n    (function(scope){\n        scope.$watch('msg', function(msg) {\n            if(typeof(msg) === \"object\"){\n                // Convert the degrees to cardinal directions\n                var deg = msg.degrees;\n                var dirs = [\"N\",\"NNE\",\"NE\",\"ENE\",\"E\",\"ESE\",\"SE\",\"SSE\",\"S\",\"SSW\",\"SW\",\"WSW\",\"W\",\"WNW\",\"NW\",\"NNW\",\"N\"];\n                var idx = Math.round(deg*(dirs.length-1)/360);\n                scope.direction = dirs[idx];\n                \n                var spd = parseFloat(msg.speed);\n                var unit = msg.speed_unit;\n                //console.log('speed <' + spd + '>');\n                \n                if (spd == 0) {\n                    scope.arrowOpacity = 0.15;\n                    scope.boxShadow = '#eeeeee';\n                    //console.log('speed was zero for opacity check');\n                }\n                else {\n                    scope.arrowOpacity = 1;\n                    scope.boxShadow = '#000';\n                    //console.log('speed was NOT ZERO for opacity check');\n                }\n\n                if ((unit == \"KPH\" && spd <= 8) ||\n                         (unit == \"MPH\" && spd <= 5)) {\n                    scope.color = '#ccffcc';\n                    //console.log('speed was low for color check');                    \n                }\n                else if ((unit == \"KPH\" && spd <= 16) ||\n                         (unit == \"MPH\" && spd <= 10)) {\n                    scope.color = '#ffffb3';\n                    //console.log('speed was medium for color check');   \n                }\n                else if (unit == \"KPH\" ||\n                         unit == \"MPH\") {\n                    scope.color = '#ff9999';\n                    //console.log('speed was high for color check');   \n                }\n                else {\n                    scope.color = '#f0f0f0';\n                    //console.log('units were not known color check');   \n                }     \n                \n                if (spd == 0) {\n                    msg.speed = \"calm\";\n                }\n                \n                //$(\".{{label}}_compass_container\").css(\"background-color\",scope.color);\n            }\n    \t});\n    })(scope);\n    \n    // Hacks to improve the layout and make it cale\n    $(document).ready(function(){\n        setTimeout(function () {\n            // Remove the auto scrolling from the parent node\n            $(\".compass_container\").parent().css(\"overflow\",\"hidden\");\n        \n            // Adjust the color to match the theme base color by looking up the toolbar header background color;\n            $(\".compass_container .triangle\").css(\"border-bottom-color\",$(\"md-toolbar\").css(\"background-color\"));\n        \n            // Scale the compass into the box that it's being rendered in\n            // This CSS hack helps make sure the line & font size scales appropriately\n            // Based on the node's grid size\n            $(\".compass_container\").each(function(k,v){\n                var scaleWidth = $(v).parent().width() / $(v).width();\n                var scaleHeight = $(v).parent().height() / $(v).height();\n        \n                var translateX = ($(v).width() - $(v).parent().width()) / 2;\n                var translateY = ($(v).height() - $(v).parent().height()) / 2;\n        \n                $(v).css(\"transform\",\"translate(-\"+translateX+\"px,-\"+translateY+\"px) scale(\"+scaleWidth+\",\"+scaleHeight+\") \");\n            });\n            \n            $(\".compass_container\").css(\"display\",\"block\"); // Unhide it now that it's resized\n        }, 1000);\n    });\n</script>\n\n<div class=\"compass_container\">\n    <div class=\"nr-dashboard-text text_container\" style=\"background-color:{{color}}; box-shadow: inset 0px 0px 0px 5px {{boxShadow}}\">\n        <div style=\"font-size: 50%; color: black\">{{msg.speed_unit}}</div>\n        <div style=\"font-size: 120%; color: black\">{{msg.speed}}</div>\n        <div class=\"direction\" style=\"font-size: 50%; text-align: center; color: black\">{{msg.gustlabel}} {{msg.gust}}</div>\n        <div style=\"font-size: 100%; opacity: {{arrowOpacity}}; color: black\">{{direction}}</div>\n        <div style=\"font-size: 50%; color: black\">{{msg.label}}</div>\n    </div>\n    <div class=\"arrow\" style=\"transform: rotate({{msg.degrees}}deg); opacity: {{arrowOpacity}};\">\n      <div class=\"triangle\"></div>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2030,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "aef61b6fde3de708",
        "type": "join",
        "z": "e185da3a46d5d090",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1550,
        "y": 320,
        "wires": [
            [
                "538246a6634b8fde",
                "9424926d91773285"
            ]
        ]
    },
    {
        "id": "538246a6634b8fde",
        "type": "function",
        "z": "e185da3a46d5d090",
        "name": "create and format wind structure",
        "func": "var newmsg = {\n    \"speed\": msg.payload['windspeed'],\n    \"speed_unit\":msg.payload['unit'],\n    \"degrees\": msg.payload['weather/winddir'],\n    \"gust\": msg.payload['windgust'],\n    \"label\": \"wind\",\n    \"gustlabel\": \"gust\"\n}\nreturn newmsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 320,
        "wires": [
            [
                "d2b864374e076eab"
            ]
        ]
    },
    {
        "id": "c7b27cc77836efe4",
        "type": "subflow:1481853667c63134",
        "z": "e185da3a46d5d090",
        "name": "",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "c09f641e50f8c805"
            ]
        ]
    },
    {
        "id": "99ac93c98acd6516",
        "type": "subflow:1481853667c63134",
        "z": "e185da3a46d5d090",
        "name": "",
        "x": 810,
        "y": 200,
        "wires": [
            [
                "e6e1b88d22acd30b"
            ]
        ]
    },
    {
        "id": "e6e1b88d22acd30b",
        "type": "subflow:7ad337185da278c4",
        "z": "e185da3a46d5d090",
        "name": "",
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "aef61b6fde3de708"
            ]
        ]
    },
    {
        "id": "c09f641e50f8c805",
        "type": "subflow:7ad337185da278c4",
        "z": "e185da3a46d5d090",
        "name": "",
        "x": 910,
        "y": 620,
        "wires": [
            [
                "aef61b6fde3de708"
            ]
        ]
    },
    {
        "id": "d7c57c69eac4868a",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "set flow and global windspeed",
        "rules": [
            {
                "t": "set",
                "p": "windspeed",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "windspeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "6007d5b9a24b1c4c"
            ]
        ]
    },
    {
        "id": "722e7956079c2bdf",
        "type": "link in",
        "z": "e185da3a46d5d090",
        "name": "Update Wind Speed Display Units",
        "links": [
            "a107a8b7016b65ef"
        ],
        "x": 165,
        "y": 200,
        "wires": [
            [
                "6007d5b9a24b1c4c"
            ]
        ]
    },
    {
        "id": "6007d5b9a24b1c4c",
        "type": "switch",
        "z": "e185da3a46d5d090",
        "name": "KPH or MPH?",
        "property": "wind_kph",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "746a26882de71269"
            ],
            [
                "4b306907c286f2fe"
            ],
            [
                "4b306907c286f2fe"
            ]
        ]
    },
    {
        "id": "746a26882de71269",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windspeed",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windspeed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 100,
        "wires": [
            [
                "0bb5041fd106208f"
            ]
        ]
    },
    {
        "id": "4b306907c286f2fe",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windspeed",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windspeed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 200,
        "wires": [
            [
                "99ac93c98acd6516"
            ]
        ]
    },
    {
        "id": "f113d2f624dfcc74",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "windgust",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "windgust",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 540,
        "wires": [
            [
                "06aa599fa19de834"
            ]
        ]
    },
    {
        "id": "06aa599fa19de834",
        "type": "switch",
        "z": "e185da3a46d5d090",
        "name": "KPH or MPH?",
        "property": "wind_kph",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 300,
        "y": 600,
        "wires": [
            [
                "821e3caa91ba0fc6"
            ],
            [
                "d02e1448932fc021"
            ],
            [
                "d02e1448932fc021"
            ]
        ]
    },
    {
        "id": "ccd4ef1b94a770e0",
        "type": "link in",
        "z": "e185da3a46d5d090",
        "name": "Update Wind Gust Display Units",
        "links": [
            "a107a8b7016b65ef"
        ],
        "x": 155,
        "y": 640,
        "wires": [
            [
                "06aa599fa19de834"
            ]
        ]
    },
    {
        "id": "821e3caa91ba0fc6",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windgust",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windgust",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 580,
        "wires": [
            [
                "ad9fe91754b0a18a"
            ]
        ]
    },
    {
        "id": "d02e1448932fc021",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "windgust",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "windgust",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 620,
        "wires": [
            [
                "c7b27cc77836efe4"
            ]
        ]
    },
    {
        "id": "9424926d91773285",
        "type": "debug",
        "z": "e185da3a46d5d090",
        "name": "after join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 240,
        "wires": []
    },
    {
        "id": "96ed5e7ff82fa343",
        "type": "link in",
        "z": "e185da3a46d5d090",
        "name": "Update Wind Unit Label",
        "links": [
            "a107a8b7016b65ef"
        ],
        "x": 405,
        "y": 440,
        "wires": [
            [
                "74e0a10e753086f2"
            ]
        ]
    },
    {
        "id": "74e0a10e753086f2",
        "type": "switch",
        "z": "e185da3a46d5d090",
        "name": "KPH or MPH?",
        "property": "wind_kph",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "7b3dc4621be898c2"
            ],
            [
                "5de7eb9e9131670e"
            ],
            [
                "5de7eb9e9131670e"
            ]
        ]
    },
    {
        "id": "7b3dc4621be898c2",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "KPH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "unit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 380,
        "wires": [
            [
                "aef61b6fde3de708"
            ]
        ]
    },
    {
        "id": "5de7eb9e9131670e",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MPH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "unit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 420,
        "wires": [
            [
                "aef61b6fde3de708"
            ]
        ]
    },
    {
        "id": "d85ec421510a4e3b",
        "type": "ui_template",
        "z": "e185da3a46d5d090",
        "group": "e14ef026db2f9ff2",
        "name": "compass styles",
        "order": 27,
        "width": 0,
        "height": 0,
        "format": "<style>\n     @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap');\n     \n     .compass_container{\n        transition: 1s ease-in-out;\n        position: relative;\n        display: none;\n        width: 500px;\n        height: 500px;\n        border-radius: 100%;\n        font-family: 'Roboto';\n        font-size: 80px;\n        box-shadow: inset 0px 0px 0px 10px #777; \n        background-color: khaki;\n        margin: 0 auto;\n     }\n     \n     .compass_container .compass_header{\n        font-weight: bold;\n        position: absolute;\n        text-align: center;\n        width: 100%;\n        font-size: 75%;\n        top: -15px\n     }\n     .compass_container .text_container{\n        height: 100%;\n        width: 100%;\n        padding: 0px;\n        display: block;\n        border-radius: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        opacity: 1;\n     }\n     \n     .compass_container .arrow{\n        transition: 1s ease-in-out;\n        width: 100%;\n        height: 100%;\n        display: block;\n        position: absolute;\n        top: 0;\n     }\n     \n     .compass_container .arrow .triangle{\n\t    position: absolute;\n        width: 0;\n        height: 0;\n        border-left: 15px solid transparent;\n        border-right: 15px solid transparent;\n        border-top: 75px solid #1F39D8;\n        border-radius: 50%;\n        top: -15px;\n\t    left: 50%;\n\t    margin-left: -15px;\n\t    z-index: 99;\n     }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 120,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "9aa9aafd4a5a4944",
        "type": "delay",
        "z": "e185da3a46d5d090",
        "name": "one per 5 min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 280,
        "wires": [
            [
                "7289d298e4c903c7",
                "52a4b346cecc9bac"
            ]
        ]
    },
    {
        "id": "7289d298e4c903c7",
        "type": "link out",
        "z": "e185da3a46d5d090",
        "name": "wind direction out",
        "mode": "link",
        "links": [
            "10475d6acbbb4239"
        ],
        "x": 635,
        "y": 280,
        "wires": []
    },
    {
        "id": "f075e1a99cf18091",
        "type": "delay",
        "z": "e185da3a46d5d090",
        "name": "one per 5 min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 40,
        "wires": [
            [
                "4615e14af5802c5e"
            ]
        ]
    },
    {
        "id": "4615e14af5802c5e",
        "type": "link out",
        "z": "e185da3a46d5d090",
        "name": "windspeed out",
        "mode": "link",
        "links": [
            "9c6c3e190c314489"
        ],
        "x": 605,
        "y": 40,
        "wires": []
    },
    {
        "id": "7b770af4484535fe",
        "type": "delay",
        "z": "e185da3a46d5d090",
        "name": "one per 5 min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 500,
        "wires": [
            [
                "954806dc73a93295"
            ]
        ]
    },
    {
        "id": "954806dc73a93295",
        "type": "link out",
        "z": "e185da3a46d5d090",
        "name": "windgust out",
        "mode": "link",
        "links": [
            "c0814215f16cf8f4"
        ],
        "x": 675,
        "y": 500,
        "wires": []
    },
    {
        "id": "52a4b346cecc9bac",
        "type": "debug",
        "z": "e185da3a46d5d090",
        "name": "winddir rate limited",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "69f98e7fcb0f0f82",
        "type": "debug",
        "z": "e185da3a46d5d090",
        "name": "winddir ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 240,
        "wires": []
    },
    {
        "id": "a2aec3a73f6b095c",
        "type": "change",
        "z": "e185da3a46d5d090",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "winddirection",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 340,
        "wires": [
            []
        ]
    }
]